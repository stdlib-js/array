{"version":3,"file":"index.mjs","sources":["../base/arraylike2object/lib/setter.accessor.js","../base/arraylike2object/lib/main.js","../base/arraylike2object/lib/getter.js","../base/arraylike2object/lib/getter.accessor.js","../base/arraylike2object/lib/setter.js","../base/arraylike2object/lib/index.js","../base/copy/lib/main.js","../base/copy/lib/index.js","../base/filled/lib/main.js","../base/filled/lib/index.js","../base/filled-by/lib/main.js","../base/filled-by/lib/index.js","../base/incrspace/lib/main.js","../base/incrspace/lib/index.js","../base/linspace/lib/main.js","../base/linspace/lib/index.js","../base/logspace/lib/main.js","../base/logspace/lib/index.js","../base/ones/lib/main.js","../base/ones/lib/index.js","../base/unitspace/lib/main.js","../base/unitspace/lib/index.js","../base/zeros/lib/main.js","../base/zeros/lib/index.js","../base/lib/index.js","../buffer/lib/polyfill.js","../buffer/lib/index.js","../buffer/lib/arraybuffer.js","../float32/lib/polyfill.js","../float32/lib/index.js","../float32/lib/float32array.js","../complex64/lib/from_iterator.js","../complex64/lib/from_iterator_map.js","../complex64/lib/from_array.js","../complex64/lib/main.js","../complex64/lib/index.js","../float64/lib/polyfill.js","../float64/lib/index.js","../float64/lib/float64array.js","../complex128/lib/from_iterator.js","../complex128/lib/from_iterator_map.js","../complex128/lib/from_array.js","../complex128/lib/main.js","../complex128/lib/index.js","../dtype/lib/ctor2dtype.js","../uint32/lib/polyfill.js","../uint32/lib/index.js","../uint32/lib/uint32array.js","../int32/lib/polyfill.js","../int32/lib/index.js","../int32/lib/int32array.js","../uint16/lib/polyfill.js","../uint16/lib/index.js","../uint16/lib/uint16array.js","../int16/lib/polyfill.js","../int16/lib/index.js","../int16/lib/int16array.js","../uint8/lib/polyfill.js","../uint8/lib/index.js","../uint8/lib/uint8array.js","../uint8c/lib/polyfill.js","../uint8c/lib/index.js","../uint8c/lib/uint8clampedarray.js","../int8/lib/polyfill.js","../int8/lib/index.js","../int8/lib/int8array.js","../dtype/lib/main.js","../dtype/lib/ctors.js","../dtype/lib/dtypes.js","../dtype/lib/index.js","../ctors/lib/main.js","../ctors/lib/ctors.js","../ctors/lib/index.js","../convert/lib/main.js","../convert/lib/index.js","../convert-same/lib/main.js","../convert-same/lib/index.js","../dataview/lib/polyfill.js","../dataview/lib/index.js","../dataview/lib/main.js","../datespace/lib/main.js","../datespace/lib/index.js","../dtypes/lib/main.js","../dtypes/lib/index.js","../filled/lib/main.js","../filled/lib/index.js","../filled-by/lib/main.js","../filled-by/lib/index.js","../from-iterator/lib/main.js","../from-iterator/lib/index.js","../full/lib/main.js","../full/lib/index.js","../full-like/lib/main.js","../full-like/lib/index.js","../incrspace/lib/main.js","../incrspace/lib/index.js","../typed-float-ctors/lib/main.js","../typed-float-ctors/lib/ctors.js","../typed-float-ctors/lib/index.js","../linspace/lib/generic_real.js","../linspace/lib/generic_complex.js","../linspace/lib/typed_real.js","../linspace/lib/typed_complex.js","../linspace/lib/validate.js","../linspace/lib/main.js","../linspace/lib/accessors_complex.js","../linspace/lib/accessors_real.js","../linspace/lib/assign.js","../linspace/lib/index.js","../logspace/lib/main.js","../logspace/lib/index.js","../min-dtype/lib/main.js","../min-dtype/lib/index.js","../next-dtype/lib/main.js","../next-dtype/lib/index.js","../ones/lib/main.js","../ones/lib/index.js","../ones-like/lib/main.js","../ones-like/lib/index.js","../typed-ctors/lib/main.js","../typed-ctors/lib/ctors.js","../typed-ctors/lib/index.js","../pool/lib/validate.js","../pool/lib/pool.js","../pool/lib/factory.js","../pool/lib/index.js","../pool/lib/main.js","../promotion-rules/lib/main.js","../promotion-rules/lib/index.js","../reviver/lib/main.js","../reviver/lib/ctors.js","../safe-casts/lib/main.js","../reviver/lib/index.js","../same-kind-casts/lib/main.js","../safe-casts/lib/index.js","../same-kind-casts/lib/index.js","../shape/lib/main.js","../shape/lib/index.js","../shared-buffer/lib/polyfill.js","../shared-buffer/lib/index.js","../shared-buffer/lib/sharedarraybuffer.js","../to-circular-iterator/lib/main.js","../to-circular-iterator/lib/index.js","../to-iterator/lib/main.js","../to-iterator/lib/index.js","../to-iterator-right/lib/main.js","../to-iterator-right/lib/index.js","../to-json/lib/type.js","../to-json/lib/ctors.js","../to-json/lib/main.js","../to-json/lib/index.js","../to-sparse-iterator/lib/main.js","../to-sparse-iterator/lib/index.js","../to-sparse-iterator-right/lib/main.js","../to-sparse-iterator-right/lib/index.js","../to-strided-iterator/lib/main.js","../to-strided-iterator/lib/index.js","../to-view-iterator/lib/main.js","../to-view-iterator/lib/index.js","../to-view-iterator-right/lib/main.js","../to-view-iterator-right/lib/index.js","../typed/lib/main.js","../typed/lib/index.js","../typed-complex-ctors/lib/main.js","../typed-complex-ctors/lib/ctors.js","../typed-complex-ctors/lib/index.js","../typed-complex/lib/main.js","../typed-complex/lib/index.js","../typed-complex-dtypes/lib/main.js","../typed-complex-dtypes/lib/index.js","../typed-dtypes/lib/main.js","../typed-dtypes/lib/index.js","../typed-float-dtypes/lib/main.js","../typed-float-dtypes/lib/index.js","../typed-integer-ctors/lib/main.js","../typed-integer-ctors/lib/ctors.js","../typed-integer-ctors/lib/index.js","../typed-integer-dtypes/lib/main.js","../typed-integer-dtypes/lib/index.js","../typed-real/lib/main.js","../typed-real/lib/index.js","../typed-real-ctors/lib/main.js","../typed-real-ctors/lib/ctors.js","../typed-real-ctors/lib/index.js","../typed-real-dtypes/lib/main.js","../typed-real-dtypes/lib/index.js","../typed-real-float-ctors/lib/main.js","../typed-real-float-ctors/lib/ctors.js","../typed-real-float-ctors/lib/index.js","../typed-real-float-dtypes/lib/main.js","../typed-real-float-dtypes/lib/index.js","../typed-signed-integer-ctors/lib/main.js","../typed-signed-integer-ctors/lib/ctors.js","../typed-signed-integer-ctors/lib/index.js","../typed-signed-integer-dtypes/lib/main.js","../typed-signed-integer-dtypes/lib/index.js","../typed-unsigned-integer-ctors/lib/main.js","../typed-unsigned-integer-ctors/lib/ctors.js","../typed-unsigned-integer-ctors/lib/index.js","../typed-unsigned-integer-dtypes/lib/main.js","../typed-unsigned-integer-dtypes/lib/index.js","../zeros/lib/main.js","../zeros/lib/index.js","../zeros-like/lib/main.js","../zeros-like/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx.set( value, idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getIndexed = require( './getter.js' );\nvar getAccessor = require( './getter.accessor.js' );\nvar setIndexed = require( './setter.js' );\nvar setAccessor = require( './setter.accessor.js' );\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: data buffer.\n*     -   **accessors**: `boolean` indicating whether the data buffer uses accessors for getting and setting elements.\n*     -   **getter**: accessor for retrieving a data buffer element.\n*     -   **setter**: accessor for setting a data buffer element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar bool = Boolean( x.get && x.set ); // Note: intentional weak check, as we don't explicitly check for functions for (perhaps marginally) better performance.\n\treturn {\n\t\t'data': x,\n\t\t'accessors': bool,\n\t\t'getter': ( bool ) ? getAccessor : getIndexed,\n\t\t'setter': ( bool ) ? setAccessor : setIndexed\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x[ idx ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array element using an accessor method.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element\n*/\nfunction getter( x, idx ) {\n\treturn x.get( idx );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets an array element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*/\nfunction setter( x, idx, value ) {\n\tx[ idx ] = value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array-like object to an object likely to have the same \"shape\".\n*\n* @module @stdlib/array/base/arraylike2object\n*\n* @example\n* var arraylike2object = require( '@stdlib/array/base/arraylike2object' );\n*\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( './../../../base/arraylike2object' );\n\n\n// FUNCTIONS //\n\n/**\n* Copies the elements of an array-like object using accessor functions.\n*\n* @private\n* @param {Object} x - array object\n* @param {Collection} x.data - array data\n* @param {Function} x.getter - getter\n* @returns {Array} output array\n*\n* @example\n* function getter( xbuf, idx ) {\n*     return xbuf[ idx ] * 2;\n* }\n*\n* var x = {\n*     'data': [ 1, 2, 3 ],\n*     'getter': getter\n* };\n*\n* var out = accessors( x );\n* // returns [ 2, 4, 6 ]\n*/\nfunction accessors( x ) {\n\tvar xbuf;\n\tvar out;\n\tvar len;\n\tvar get;\n\tvar i;\n\n\t// Cache a reference to the array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the accessor for retrieving input array elements:\n\tget = x.getter;\n\n\t// Get the number of elements to copy:\n\tlen = xbuf.length;\n\n\t// Loop over the elements...\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( get( xbuf, i ) ); // ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n/**\n* Copies the elements of an array-like object.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3 ];\n*\n* var out = indexed( x );\n* // returns [ 1, 2, 3 ]\n*/\nfunction indexed( x ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\n\tlen = x.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( x[ i ] ); // ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Copies the elements of an array-like object to a new \"generic\" array.\n*\n* @param {Collection} x - input array\n* @returns {Array} output array\n*\n* @example\n* var out = copy( [ 1, 2, 3 ] );\n* // returns [ 1, 2, 3 ]\n*/\nfunction copy( x ) {\n\tvar obj;\n\n\t// Determine whether the input array uses accessors:\n\tobj = arraylike2object( x );\n\tif ( obj.accessors ) {\n\t\treturn accessors( obj );\n\t}\n\t// The input array does not use accessors, so we can perform normal `[i]` indexing...\n\treturn indexed( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy the elements of an array-like object to a new \"generic\" array.\n*\n* @module @stdlib/array/base/copy\n*\n* @example\n* var copy = require( '@stdlib/array/base/copy' );\n*\n* var out = copy( [ 1, 2, 3 ] );\n* // returns [ 1, 2, 3 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*\n* @example\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filled( value, len ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = filled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled \"generic\" array.\n*\n* @module @stdlib/array/base/filled\n*\n* @example\n* var filled = require( '@stdlib/array/base/filled' );\n*\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var filled = require( '@stdlib/array/base/filled' );\n*\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array according to a provided callback function.\n*\n* @param {NonNegativeInteger} len - array length\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* var constantFunction = require( '@stdlib/utils/constant-function' );\n*\n* var out = filledBy( 3, constantFunction( 'beep' ) );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filledBy( len, clbk, thisArg ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( clbk.call( thisArg, i ) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = filledBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled \"generic\" array according to a provided callback function.\n*\n* @module @stdlib/array/base/filled-by\n*\n* @example\n* var constantFunction = require( '@stdlib/utils/constant-function' );\n* var filledBy = require( '@stdlib/array/base/filled-by' );\n*\n* var out = filledBy( 3, constantFunction( 'beep' ) );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ceil = require( '@stdlib/math/base/special/ceil' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array according to a provided increment.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @param {number} increment - increment\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar arr;\n\tvar len;\n\tvar i;\n\n\tlen = ceil( ( x2-x1 ) / increment );\n\tif ( len <= 1 ) {\n\t\treturn [ x1 ];\n\t}\n\tarr = [ x1 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tarr.push( x1 + (increment*i) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array according to a provided increment.\n*\n* @module @stdlib/array/base/incrspace\n*\n* @example\n* var incrspace = require( '@stdlib/array/base/incrspace' );\n*\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - last array value\n* @param {NonNegativeInteger} len - length of output array\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = linspace( 0, 100, 6 );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\nfunction linspace( x1, x2, len ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Calculate the increment:\n\tN = len - 1;\n\td = ( x2-x1 ) / N;\n\n\t// Build the output array...\n\tarr = [ x1 ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( x1 + (d*i) );\n\t}\n\tarr.push( x2 );\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array.\n*\n* @module @stdlib/array/base/linspace\n*\n* @example\n* var linspace = require( '@stdlib/array/base/linspace' );\n*\n* var arr = linspace( 0, 100, 6 );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar pow = require( '@stdlib/math/base/special/pow' );\n\n\n// MAIN //\n\n/**\n* Generates a logarithmically spaced numeric array.\n*\n* @param {number} a - exponent of start value\n* @param {number} b - exponent of end value\n* @param {NonNegativeInteger} len - length of output array\n* @returns {Array} logarithmically spaced numeric array\n*\n* @example\n* var arr = logspace( 0, 2, 6 );\n* // returns [ 1, ~2.5, ~6.31, ~15.85, ~39.81, 100 ]\n*/\nfunction logspace( a, b, len ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Calculate the increment:\n\tN = len - 1;\n\td = ( b-a ) / N;\n\n\t// Build the output array...\n\tarr = [ pow( 10, a ) ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( pow( 10, a+(d*i) ) );\n\t}\n\tarr.push( pow( 10, b ) );\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = logspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a logarithmically spaced numeric array.\n*\n* @module @stdlib/array/base/logspace\n*\n* @example\n* var logspace = require( '@stdlib/array/base/logspace' );\n*\n* var arr = logspace( 0, 2, 6 );\n* // returns [ 1, ~2.5, ~6.31, ~15.85, ~39.81, 100 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar filled = require( './../../../base/filled' );\n\n\n// MAIN //\n\n/**\n* Returns a \"generic\" array filled with ones.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = ones( 3 );\n* // returns [ 1.0, 1.0, 1.0 ]\n*/\nfunction ones( len ) {\n\treturn filled( 1.0, len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ones;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a \"generic\" array filled with ones.\n*\n* @module @stdlib/array/base/ones\n*\n* @example\n* var ones = require( '@stdlib/array/base/ones' );\n*\n* var out = ones( 3 );\n* // returns [ 1.0, 1.0, 1.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array whose elements increment by 1.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = unitspace( 0, 6 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*/\nfunction unitspace( x1, x2 ) {\n\tvar arr;\n\tvar len;\n\tvar i;\n\n\tlen = x2 - x1;\n\tif ( len <= 1 ) {\n\t\treturn [ x1 ];\n\t}\n\tarr = [ x1 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tarr.push( x1 + i );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = unitspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array whose elements increment by 1.\n*\n* @module @stdlib/array/base/unitspace\n*\n* @example\n* var unitspace = require( '@stdlib/array/base/unitspace' );\n*\n* var arr = unitspace( 0, 6 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar filled = require( './../../../base/filled' );\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled \"generic\" array.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\nfunction zeros( len ) {\n\treturn filled( 0.0, len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a zero-filled \"generic\" array.\n*\n* @module @stdlib/array/base/zeros\n*\n* @example\n* var zeros = require( '@stdlib/array/base/zeros' );\n*\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name arraylike2object\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/arraylike2object}\n*/\nsetReadOnly( ns, 'arraylike2object', require( './../../base/arraylike2object' ) );\n\n/**\n* @name copy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/copy}\n*/\nsetReadOnly( ns, 'copy', require( './../../base/copy' ) );\n\n/**\n* @name filled\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled}\n*/\nsetReadOnly( ns, 'filled', require( './../../base/filled' ) );\n\n/**\n* @name filledBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled-by}\n*/\nsetReadOnly( ns, 'filledBy', require( './../../base/filled-by' ) );\n\n/**\n* @name incrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/incrspace}\n*/\nsetReadOnly( ns, 'incrspace', require( './../../base/incrspace' ) );\n\n/**\n* @name linspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/linspace}\n*/\nsetReadOnly( ns, 'linspace', require( './../../base/linspace' ) );\n\n/**\n* @name logspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/logspace}\n*/\nsetReadOnly( ns, 'logspace', require( './../../base/logspace' ) );\n\n/**\n* @name ones\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ones}\n*/\nsetReadOnly( ns, 'ones', require( './../../base/ones' ) );\n\n/**\n* @name unitspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unitspace}\n*/\nsetReadOnly( ns, 'unitspace', require( './../../base/unitspace' ) );\n\n/**\n* @name zeros\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zeros}\n*/\nsetReadOnly( ns, 'zeros', require( './../../base/zeros' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @module @stdlib/array/buffer\n*\n* @example\n* var ctor = require( '@stdlib/array/buffer' );\n*\n* var buf = new ctor( 10 );\n* // returns <ArrayBuffer>\n*/\n\n// MODULES //\n\nvar hasArrayBufferSupport = require( '@stdlib/assert/has-arraybuffer-support' );\nvar builtin = require( './arraybuffer.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasArrayBufferSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* var ctor = require( '@stdlib/array/float32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\nvar builtin = require( './float32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Float32Array = require( './../../float32' );\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar format = require( '@stdlib/string/format' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT*2\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object input arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array input arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of `%u`. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array buffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of `%u`. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of `%u`. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\ttmp = arraylike2object( src );\n\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( tmp.getter( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex64( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var realf = require( '@stdlib/complex/realf' );\n* var imagf = require( '@stdlib/complex/imagf' );\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nmodule.exports = Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 64-bit complex number array.\n*\n* @module @stdlib/array/complex64\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* var ctor = require( '@stdlib/array/float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\nvar builtin = require( './float64array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar format = require( '@stdlib/string/format' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar format = require( '@stdlib/string/format' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isEven = require( '@stdlib/math/base/assert/is-even' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar Float64Array = require( './../../float64' );\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\nvar fromArray = require( './from_array.js' );\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT/2\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object input arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array input arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of `%u`. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array buffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of `%u`. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of `%u`. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\ttmp = arraylike2object( src );\n\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( tmp.getter( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, tmp.getter( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tvar buf;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\tbuf = this._buffer;\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* var real = require( '@stdlib/complex/real' );\n* var imag = require( '@stdlib/complex/imag' );\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n\n// EXPORTS //\n\nmodule.exports = Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* 128-bit complex number array.\n*\n* @module @stdlib/array/complex128\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from array constructors to data types...\nvar ctor2dtypes = {\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c',\n\t'Complex64Array': 'complex64',\n\t'Complex128Array': 'complex128'\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctor2dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* var ctor = require( '@stdlib/array/uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\nvar builtin = require( './uint32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* var ctor = require( '@stdlib/array/int32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\nvar builtin = require( './int32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* var ctor = require( '@stdlib/array/uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\nvar builtin = require( './uint16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* var ctor = require( '@stdlib/array/int16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\nvar builtin = require( './int16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\nvar builtin = require( './uint8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8c' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' ); // eslint-disable-line id-length\nvar builtin = require( './uint8clampedarray.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* var ctor = require( '@stdlib/array/int8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\nvar builtin = require( './int8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\nvar ctor2dtype = require( './ctor2dtype.js' );\nvar CTORS = require( './ctors.js' );\nvar DTYPES = require( './dtypes.js' );\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an array.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn null;\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Uint32Array = require( './../../uint32' );\nvar Int32Array = require( './../../int32' );\nvar Uint16Array = require( './../../uint16' );\nvar Int16Array = require( './../../int16' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Int8Array = require( './../../int8' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray,\n\tComplex64Array,\n\tComplex128Array\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c',\n\t'complex64',\n\t'complex128'\n];\n\n\n// EXPORTS //\n\nmodule.exports = DTYPES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type of an array.\n*\n* @module @stdlib/array/dtype\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dtype = require( '@stdlib/array/dtype' );\n*\n* var arr = new Float64Array( 10 );\n*\n* var dt = dtype( arr );\n* // returns 'float64'\n*\n* dt = dtype( {} );\n* // returns null\n*\n* dt = dtype( 'beep' );\n* // returns null\n*/\n\n// MODULES //\n\nvar dtype = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns an array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Int16Array = require( './../../int16' );\nvar Int32Array = require( './../../int32' );\nvar Int8Array = require( './../../int8' );\nvar Uint16Array = require( './../../uint16' );\nvar Uint32Array = require( './../../uint32' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'generic': Array, // TODO: replace with `stdlib` pkg\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray,\n\t'complex64': Complex64Array,\n\t'complex128': Complex128Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Array constructors.\n*\n* @module @stdlib/array/ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/ctors' );\n*\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar getType = require( './../../dtype' );\nvar ctors = require( './../../ctors' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar format = require( '@stdlib/string/format' );\nvar gcopy = require( '@stdlib/blas/base/gcopy' );\nvar copy = require( './../../base/copy' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether a data type is a single-precision complex floating-point number data type.\n*\n* @private\n* @param {string} dtype - data type\n* @returns {boolean} boolean indicating whether a provided data type is a single-precision complex floating-point number data type\n*\n* @example\n* var bool = isComplex64( 'float64' );\n* // returns false\n*\n* @example\n* var bool = isComplex64( 'complex64' );\n* // returns true\n*/\nfunction isComplex64( dtype ) {\n\treturn ( dtype === 'complex64' );\n}\n\n/**\n* Tests whether a data type is a double-precision complex floating-point number data type.\n*\n* @private\n* @param {string} dtype - data type\n* @returns {boolean} boolean indicating whether a provided data type is a double-precision complex floating-point number data type\n*\n* @example\n* var bool = isComplex128( 'float64' );\n* // returns false\n*\n* @example\n* var bool = isComplex128( 'complex128' );\n* // returns true\n*/\nfunction isComplex128( dtype ) {\n\treturn ( dtype === 'complex128' );\n}\n\n\n// MAIN //\n\n/**\n* Converts an array to an array of a different data type.\n*\n* @param {Collection} x - array to convert\n* @param {string} dtype - output data type\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a recognized array data type\n* @returns {(Array|TypedArray|ComplexArray)} output array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0 ];\n*\n* var out = convert( arr, 'float64' );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction convert( x, dtype ) {\n\tvar isc64;\n\tvar ctor;\n\tvar xbuf;\n\tvar obuf;\n\tvar out;\n\tvar len;\n\tvar t;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\t// If the output data type is \"generic\", our task is relatively straightforward...\n\tif ( dtype === 'generic' ) {\n\t\treturn copy( x );\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a recognized array data type. Value: `%s`.', dtype ) );\n\t}\n\t// Cache the input array length:\n\tlen = x.length;\n\n\t// Get the input array data type:\n\tt = getType( x );\n\tisc64 = isComplex64( t );\n\n\t// Create the output array:\n\tout = new ctor( len );\n\n\t// As the output data type is not \"generic\", we need to explicitly handle complex number input arrays...\n\tif ( isc64 || isComplex128( t ) ) {\n\t\tif ( isc64 ) {\n\t\t\txbuf = reinterpret64( x, 0 );\n\t\t} else {\n\t\t\txbuf = reinterpret128( x, 0 );\n\t\t}\n\t\t// Check whether the output data type is a complex number data type...\n\t\tif ( isComplex64( dtype ) ) { // cmplx => cmplx\n\t\t\tobuf = reinterpret64( out, 0 );\n\t\t\tgcopy( len*2, xbuf, 1, obuf, 1 );\n\t\t\treturn out;\n\t\t}\n\t\tif ( isComplex128( dtype ) ) { // cmplx => cmplx\n\t\t\tobuf = reinterpret128( out, 0 );\n\t\t\tgcopy( len*2, xbuf, 1, obuf, 1 );\n\t\t\treturn out;\n\t\t}\n\t\t// We assume that the output data type is a real number data type, given that we're looking to convert a provided complex number array; in which case, we'll only extract the real components from the complex number input array...\n\t\tgcopy( len, xbuf, 2, out, 1 ); // cmplx => real\n\t\treturn out;\n\t}\n\t// Check whether we need to explicitly handle complex number output arrays...\n\tisc64 = isComplex64( dtype );\n\tif ( isc64 || isComplex128( dtype ) ) {\n\t\tif ( isc64 ) {\n\t\t\tobuf = reinterpret64( out, 0 );\n\t\t} else {\n\t\t\tobuf = reinterpret128( out, 0 );\n\t\t}\n\t\t// We assume that the input data type is a real number data type, given that we're looking to convert to a complex number array; in which case, we'll only set the real components... (WARNING: we're assuming that the output array has been zero-initialized! The imaginary components should be zero!)\n\t\tgcopy( len, x, 1, obuf, 2 ); // real => cmplx\n\t\treturn out;\n\t}\n\t// At this point, we're no longer handling complex number arrays, so we'll just assume that we can perform a straightforward copy...\n\tgcopy( len, x, 1, out, 1 ); // note: `gcopy` is assumed to support arrays using accessors\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = convert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array to an array of a different data type.\n*\n* @module @stdlib/array/convert\n*\n* @example\n* var convert = require( '@stdlib/array/convert' );\n*\n* var arr = [ 1.0, 2.0, 3.0, 4.0 ];\n*\n* var out = convert( arr, 'float64' );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getType = require( './../../dtype' );\nvar convert = require( './../../convert' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Converts an array to the same data type as a second input array.\n*\n* @param {Collection} x - array to convert\n* @param {(Array|TypedArray|ComplexArray)} y - array having the desired output data type\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must have a recognized data type\n* @returns {(Array|TypedArray|ComplexArray)} output array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0 ];\n* var y = new Float64Array( 0 );\n*\n* var out = convertSame( x, y );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction convertSame( x, y ) {\n\tvar dtype = getType( y );\n\tif ( dtype === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a recognized/supported data type. Type: `%s`. Value: `%s`.', dtype, y ) );\n\t}\n\treturn convert( x, dtype );\n}\n\n\n// EXPORTS //\n\nmodule.exports = convertSame;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an array to the same data type as a second input array.\n*\n* @module @stdlib/array/convert-same\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var convertSame = require( '@stdlib/array/convert-same' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0 ];\n* var y = new Float64Array( 0 );\n*\n* var out = convertSame( x, y );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @module @stdlib/array/dataview\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var DataView = require( '@stdlib/array/dataview' );\n*\n* var buf = new ArrayBuffer( 10 );\n* // returns <ArrayBuffer>\n*\n* var dv = new DataView( buf );\n* // returns <DataView>\n*/\n\n// MODULES //\n\nvar hasDataViewSupport = require( '@stdlib/assert/has-dataview-support' );\nvar builtin = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasDataViewSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof DataView === 'function' ) ? DataView : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isInteger = require( '@stdlib/assert/is-integer' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-object' );\nvar format = require( '@stdlib/string/format' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar round = require( '@stdlib/math/base/special/round' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\n\n\n// VARIABLES //\n\nvar timestamp = /^\\d{10}$|^\\d{13}$/;\nvar rounders = [ 'floor', 'ceil', 'round' ];\n\n\n// FUNCTIONS //\n\n/**\n* Validates a date parameter.\n*\n* @private\n* @param {*} value - value to be validated\n* @param {string} name - name to be used in error messages\n* @throws {TypeError} value must either be a date string, Date object, Unix timestamp, or JavaScript timestamp\n* @throws {Error} numeric date must be either a Unix or JavaScript timestamp\n* @returns {Date} validated date\n*/\nfunction validDate( value, name ) {\n\tvar type;\n\n\ttype = typeof value;\n\tif ( type === 'string' ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\tthrow new Error( format( 'invalid argument. Unable to parse %s date.', name.toLowerCase() ) );\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( type === 'number' ) {\n\t\tif ( !timestamp.test( value ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Numeric %s date must be either a Unix or JavaScript timestamp.', name.toLowerCase() ) );\n\t\t}\n\t\tif ( value.toString().length === 10 ) {\n\t\t\tvalue *= 1000; // sec to ms\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( !(value instanceof Date) ) {\n\t\tthrow new TypeError( format( 'invalid argument. %s date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.', name ) );\n\t}\n\treturn value;\n}\n\n\n// MAIN //\n\n/**\n* Generates an array of linearly spaced dates.\n*\n* @param {(Date|number|string)} start - start time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {(Date|number|string)} stop - stop time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {number} [length] - output array length (default: 100)\n* @param {Object} [options] - function options\n* @param {string} [options.round] - specifies how sub-millisecond times should be rounded: [ 'floor', 'ceil', 'round' ] (default: 'floor' )\n* @throws {TypeError} length argument must a positive integer\n* @throws {Error} must provide valid options\n* @returns {Array} array of dates\n*\n* @example\n* var stop = '2014-12-02T07:00:54.973Z';\n* var start = new Date( stop ) - 60000;\n*\n* var arr = datespace( start, stop, 6 );\n* // returns [...]\n*\n* @example\n* // Equivalent of Math.ceil():\n* var arr = datespace( 1417503655000, 1417503655001, 3, { 'round': 'ceil' } );\n* // returns [...]\n*\n* // Equivalent of Math.round():\n* arr = datespace( 1417503655000, 1417503655001, 3, { 'round': 'round' } );\n* // returns [...]\n*/\nfunction datespace( start, stop, length, options ) {\n\tvar opts;\n\tvar len;\n\tvar flg;\n\tvar arr;\n\tvar end;\n\tvar fcn;\n\tvar tmp;\n\tvar d;\n\tvar i;\n\n\tlen = 100;\n\tflg = true;\n\topts = {\n\t\t'round': 'floor'\n\t};\n\tstart = validDate( start, 'Start' );\n\tstop = validDate( stop, 'Stop' );\n\tif ( arguments.length > 2 ) {\n\t\tif ( arguments.length === 3 ) {\n\t\t\tif ( isObject( length ) ) {\n\t\t\t\topts = length;\n\t\t\t} else {\n\t\t\t\tlen = length;\n\n\t\t\t\t// Turn off checking the options object...\n\t\t\t\tflg = false;\n\t\t\t}\n\t\t} else {\n\t\t\topts = options;\n\t\t\tlen = length;\n\t\t}\n\t\tif ( len === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( !isInteger( len ) || len < 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t\tif ( flg ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'round' ) ) {\n\t\t\t\tif ( !isString( opts.round ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'round', opts.round ) );\n\t\t\t\t}\n\t\t\t\tif ( rounders.indexOf( opts.round ) === -1 ) {\n\t\t\t\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\".', 'round', rounders.join( '\", \"' ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tswitch ( opts.round ) {\n\tcase 'round':\n\t\tfcn = round;\n\t\tbreak;\n\tcase 'ceil':\n\t\tfcn = ceil;\n\t\tbreak;\n\tcase 'floor':\n\tdefault:\n\t\tfcn = floor;\n\t\tbreak;\n\t}\n\n\t// Calculate the increment...\n\tend = len - 1;\n\td = ( stop.getTime() - start.getTime() ) / end;\n\n\t// Build the output array...\n\tarr = new Array( len );\n\ttmp = start;\n\tarr[ 0 ] = tmp;\n\ttmp = tmp.getTime();\n\tfor ( i = 1; i < end; i++ ) {\n\t\ttmp += d;\n\t\tarr[ i ] = new Date( fcn( tmp ) );\n\t}\n\tarr[ end ] = stop;\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = datespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate an array of linearly spaced dates.\n*\n* @module @stdlib/array/datespace\n*\n* @example\n* var datespace = require( '@stdlib/array/datespace' );\n*\n* var stop = '2014-12-02T07:00:54.973Z';\n* var start = new Date( stop ) - 60000;\n*\n* var arr = datespace( start, stop, 6 );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar datespace = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = datespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of array data types.\n*\n* @returns {StringArray} list of array data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'generic', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c', 'complex64', 'complex128' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of array data types.\n*\n* @module @stdlib/array/dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'generic', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c', 'complex128', 'complex64' ]\n*/\n\n// MODULES //\n\nvar dtypes = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar ctors = require( './../../ctors' );\nvar gfill = require( '@stdlib/blas/ext/base/gfill' );\nvar filled = require( './../../base/filled' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar iterLength = require( '@stdlib/iter/length' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Creates a filled \"generic\" array from an iterator.\n*\n* @private\n* @param {Iterator} it - iterator\n* @param {*} value - fill value\n* @returns {Array} filled array\n*/\nfunction filledIterator( it, value ) {\n\tvar arr;\n\tvar v;\n\n\tarr = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n/**\n* Fills an array exposing accessors for getting and setting array elements.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {*} value - fill value\n* @returns {Collection} input array\n*/\nfunction filledAccessors( arr, value ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tarr.set( value, i );\n\t}\n\treturn arr;\n}\n\n\n// MAIN //\n\n/**\n* Creates a filled array.\n*\n* @param {*} [value] - fill value\n* @param {(NonNegativeInteger|TypedArray|ArrayLikeObject|ArrayBuffer|Iterable)} [arg] - a length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @throws {TypeError} must provide a length, typed array, array-like object, buffer, or iterable\n* @throws {Error} creating a generic array from an `ArrayBuffer` is not supported\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = filledarray();\n* // returns <Float64Array>\n*\n* @example\n* var arr = filledarray( 1.0, 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1.0, 2, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1.0, 2, 'generic' );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1.0, [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1, [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 1, 1 ]\n*\n* @example\n* var arr1 = filledarray( 2, [ 5, 3 ], 'int32' );\n* var arr2 = filledarray( 1.0, arr1 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr1 = filledarray( 2, [ 5, 3 ], 'int32' );\n* var arr2 = filledarray( 1, arr1, 'uint32' );\n* // returns <Uint32Array>[ 1, 1 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0, 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 8 );\n* // returns <Float64Array>[ 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 8, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarray( 1.0, buf, 8, 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarray( 1, buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 1, 1 ]\n*/\nfunction filledarray() {\n\tvar value;\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\tvar arr;\n\tvar len;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tnargs -= 1;\n\tif ( nargs >= 0 && isString( arguments[ nargs ] ) ) {\n\t\tdtype = arguments[ nargs ];\n\t\tnargs -= 1;\n\t} else {\n\t\tdtype = 'float64';\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( dtype === 'generic' ) {\n\t\tif ( nargs <= 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tvalue = arguments[ 0 ];\n\t\targ = arguments[ 1 ];\n\t\tif ( nargs === 1 ) {\n\t\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\t\tlen = arg;\n\t\t\t} else if ( isCollection( arg ) ) {\n\t\t\t\tlen = arg.length;\n\t\t\t}\n\t\t\tif ( len !== void 0 ) {\n\t\t\t\treturn filled( value, len );\n\t\t\t}\n\t\t\tif ( isArrayBuffer( arg ) ) {\n\t\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t\t}\n\t\t\tif ( isObject( arg ) ) {\n\t\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\treturn filledIterator( arg, value );\n\t\t\t}\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) { // length || array-like || ArrayBuffer || iterable\n\t\targ = arguments[ 1 ];\n\t\tif ( isCollection( arg ) ) {\n\t\t\tarr = new ctor( arg.length );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isNonNegativeInteger( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isObject( arg ) ) {\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tarr = new ctor( iterLength( arg ) );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t}\n\t} else if ( nargs === 2 ) {\n\t\tarr = new ctor( arguments[1], arguments[2] ); // (ArrayBuffer, byteOffset)\n\t} else {\n\t\tarr = new ctor( arguments[1], arguments[2], arguments[3] ); // (ArrayBuffer, byteOffset, length)\n\t}\n\tif ( arr.length > 0 ) {\n\t\tif ( /^complex/.test( dtype ) ) {\n\t\t\tfilledAccessors( arr, arguments[ 0 ] );\n\t\t} else {\n\t\t\tgfill( arr.length, arguments[ 0 ], arr, 1 );\n\t\t}\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = filledarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled array.\n*\n* @module @stdlib/array/filled\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr = filledarray();\n* // returns <Float64Array>\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr = filledarray( 1.0, 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr = filledarray( 1.0, 2, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr = filledarray( 1.0, 2, 'generic' );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr = filledarray( 1.0, [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr = filledarray( 1, [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 1, 1 ]\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr1 = filledarray( 10, [ 5, 3 ], 'int32' );\n* var arr2 = filledarray( 1.0, arr1 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var arr1 = filledarray( 1, [ 5, 3 ], 'int32' );\n* var arr2 = filledarray( 2, arr1, 'uint32' );\n* // returns <Uint32Array>[ 2, 2 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0, 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 8 );\n* // returns <Float64Array>[ 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 8, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarray( 1.0, buf, 8, 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarray = require( '@stdlib/array/filled' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarray( 1, buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 1, 1 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isObject = require( '@stdlib/assert/is-object' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar ctors = require( './../../ctors' );\nvar gfillBy = require( '@stdlib/blas/ext/base/gfill-by' );\nvar filledArray = require( './../../base/filled-by' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol/iterator' );\nvar iterLength = require( '@stdlib/iter/length' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar DEFAULT_DTYPE = 'float64';\n\n\n// FUNCTIONS //\n\n/**\n* Creates a filled \"generic\" array from an iterator.\n*\n* @private\n* @param {Iterable} it - iterator\n* @param {Callback} clbk - callback function\n* @param {*} thisArg - callback function execution context\n* @returns {Array} filled array\n*/\nfunction filledArrayIterator( it, clbk, thisArg ) {\n\tvar arr;\n\tvar i;\n\tvar v;\n\n\tarr = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tarr.push( clbk.call( thisArg, i ) );\n\t}\n\treturn arr;\n}\n\n/**\n* Fills an array exposing accessors for getting and setting array elements.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {Callback} clbk - callback function\n* @param {*} thisArg - callback function execution context\n* @returns {Collection} input array\n*/\nfunction filledAccessors( arr, clbk, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tarr.set( clbk.call( thisArg, i ), i );\n\t}\n\treturn arr;\n}\n\n\n// MAIN //\n\n/**\n* Creates a filled array according to a provided callback function.\n*\n* @param {(NonNegativeInteger|TypedArray|ArrayLikeObject|ArrayBuffer|Iterable)} [arg] - a length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @param {Callback} [clbk] - callback to invoke\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} must provide a recognized data type\n* @throws {TypeError} must provide a length, typed array, array-like object, buffer, or iterable\n* @throws {TypeError} callback argument must be a function.\n* @throws {Error} creating a generic array from an `ArrayBuffer` is not supported\n* @returns {(TypedArray|Array)} array or typed array\n*\n* @example\n* var arr = filledarrayBy();\n* // returns <Float64Array>\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, 'generic', clbk );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( [ 0.5, 0.5 ], clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1;\n* }\n*\n* var arr = filledarrayBy( [ 5, -3 ], 'int32', clbk );\n* // returns <Int32Array>[ 1, 1 ]\n*\n* @example\n* function clbk1() {\n*     return 10;\n* }\n*\n* function clbk2() {\n*     return 1.0;\n* }\n*\n* var arr1 = filledarrayBy( [ 5, 3 ], 'int32', clbk1 );\n* var arr2 = filledarrayBy( arr1, clbk2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk1() {\n*     return 1.0;\n* }\n*\n* function clbk2() {\n*     return 2;\n* }\n*\n* var arr1 = filledarrayBy( [ 5, 3 ], 'int32', clbk1 );\n* var arr2 = filledarrayBy( arr1, 'uint32', clbk2 );\n* // returns <Uint32Array>[ 2, 2 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0, 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 8, clbk );\n* // returns <Float64Array>[ 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 8, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarrayBy( buf, 8, 2, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* function clbk() {\n*     return 1;\n* }\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarrayBy( buf, 8, 2, 'int32', clbk );\n* // returns <Int32Array>[ 1, 1 ]\n*/\nfunction filledarrayBy() {\n\tvar thisArg;\n\tvar nargs;\n\tvar dtype;\n\tvar clbk;\n\tvar ctor;\n\tvar arr;\n\tvar len;\n\tvar arg;\n\n\tnargs = arguments.length;\n\n\t// If we weren't provided any arguments, return an empty array...\n\tif ( nargs === 0 ) {\n\t\tctor = ctors( DEFAULT_DTYPE );\n\t\treturn new ctor( 0 );\n\t}\n\t// Check if we were provided a dtype as the first argument...\n\tdtype = arguments[ 0 ];\n\tif ( isString( dtype ) ) {\n\t\t// Invoking this function with arguments `f( dtype, clbk[, thisArg] )` is not allowed (otherwise, we'd need to also allow `f( clbk[, thisArg] )`)...\n\t\tif ( nargs > 1 ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t\t}\n\t\tctor = ctors( dtype );\n\t\tif ( ctor === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t\t}\n\t\t// Return an empty array having the specified dtype:\n\t\treturn new ctor( 0 );\n\t}\n\t// For all other supported invocations, we need at least two arguments...\n\tif ( nargs < 2 ) {\n\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t}\n\t// At this point, we need to do some argument juggling...\n\tnargs -= 1; // henceforth, the number of available arguments is `nargs+1`\n\n\t// Determine whether the last argument is a callback or \"this\" context...\n\tif ( isFunction( arguments[ nargs ] ) ) {\n\t\t// If the last argument is a function, we need to check the next-to-last argument, and, if the next-to-last argument is a function, assume that the next-to-last argument is the callback and the last argument is a \"this\" context...\n\t\tif ( isFunction( arguments[ nargs-1 ] ) ) {\n\t\t\tthisArg = arguments[ nargs ];\n\t\t\tnargs -= 1;\n\t\t\tclbk = arguments[ nargs ];\n\n\t\t\t// Check if we were provided only a callback and a \"this\" context..\n\t\t\tif ( nargs === 0 ) {\n\t\t\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t\t\t}\n\t\t} else {\n\t\t\t// \"this\" context is left undefined...\n\t\t\tclbk = arguments[ nargs ];\n\t\t}\n\t}\n\t// If we were provided 3 or more arguments and the last argument was not a function, assume that we were provided a callback and a \"this\" context...\n\telse if ( nargs >= 2 ) {\n\t\tthisArg = arguments[ nargs ];\n\t\tnargs -= 1;\n\t\tclbk = arguments[ nargs ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t}\n\t// If were were only provided 2 arguments and the last argument was not a function, we've been provided an insufficient number of arguments...\n\telse {\n\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t}\n\t// Now that we've processed the callback arguments, let's continue working backward to see if we've been provided a `dtype` argument...\n\tnargs -= 1;\n\tif ( nargs >= 0 && isString( arguments[ nargs ] ) ) {\n\t\tdtype = arguments[ nargs ];\n\t\tnargs -= 1;\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\t// At this point, we've resolved the output array data type, and now we can actually create the output array...\n\tif ( dtype === 'generic' ) {\n\t\targ = arguments[ 0 ];\n\t\tif ( nargs === 0 ) {\n\t\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\t\tlen = arg;\n\t\t\t} else if ( isCollection( arg ) ) {\n\t\t\t\tlen = arg.length;\n\t\t\t}\n\t\t\tif ( len !== void 0 ) {\n\t\t\t\treturn filledArray( len, clbk, thisArg );\n\t\t\t}\n\t\t\tif ( isArrayBuffer( arg ) ) {\n\t\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t\t}\n\t\t\tif ( isObject( arg ) ) {\n\t\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\treturn filledArrayIterator( arg, clbk, thisArg );\n\t\t\t}\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t}\n\tif ( nargs === 0 ) { // length || array-like || ArrayBuffer || iterable\n\t\targ = arguments[ 0 ];\n\t\tif ( isCollection( arg ) ) {\n\t\t\tarr = new ctor( arg.length );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isNonNegativeInteger( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isObject( arg ) ) {\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tarr = new ctor( iterLength( arg ) );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t}\n\t} else if ( nargs === 1 ) {\n\t\tarr = new ctor( arguments[0], arguments[1] ); // (ArrayBuffer, byteOffset)\n\t} else {\n\t\tarr = new ctor( arguments[0], arguments[1], arguments[2] ); // (ArrayBuffer, byteOffset, length)\n\t}\n\tif ( arr.length > 0 ) {\n\t\tif ( /^complex/.test( dtype ) ) {\n\t\t\tfilledAccessors( arr, clbk, thisArg );\n\t\t} else {\n\t\t\tgfillBy( arr.length, arr, 1, callback );\n\t\t}\n\t}\n\treturn arr;\n\n\t/**\n\t* Callback which wraps a provided callback and is invoked for each array element.\n\t*\n\t* @private\n\t* @param {*} value - element value\n\t* @param {NonNegativeInteger} aidx - array index\n\t* @param {NonNegativeInteger} sidx - strided index\n\t* @param {Collection} array - input array/collection\n\t* @returns {*} callback return value\n\t*/\n\tfunction callback( value, aidx ) {\n\t\treturn clbk.call( thisArg, aidx );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = filledarrayBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled array according to a provided callback function.\n*\n* @module @stdlib/array/filled-by\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* var arr = filledarrayBy();\n* // returns <Float64Array>\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, 'generic', clbk );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( [ 0.5, 0.5 ], clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1;\n* }\n*\n* var arr = filledarrayBy( [ 5, -3 ], 'int32', clbk );\n* // returns <Int32Array>[ 1, 1 ]\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk1() {\n*     return 10;\n* }\n*\n* function clbk2() {\n*     return 1.0;\n* }\n*\n* var arr1 = filledarrayBy( [ 5, 3 ], 'int32', clbk1 );\n* var arr2 = filledarrayBy( arr1, clbk2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk1() {\n*     return 1.0;\n* }\n*\n* function clbk2() {\n*     return 2;\n* }\n*\n* var arr1 = filledarrayBy( [ 5, 3 ], 'int32', clbk1 );\n* var arr2 = filledarrayBy( arr1, 'uint32', clbk2 );\n* // returns <Uint32Array>[ 2, 2 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0, 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 8, clbk );\n* // returns <Float64Array>[ 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 8, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarrayBy( buf, 8, 2, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var filledarrayBy = require( '@stdlib/array/filled-by' );\n*\n* function clbk() {\n*     return 1;\n* }\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarrayBy( buf, 8, 2, 'int32', clbk );\n* // returns <Int32Array>[ 1, 1 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Creates (or fills) an array from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} [out] - output array\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} iterator argument must be an iterator\n* @throws {TypeError} callback argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2array( iter );\n* // returns <Array>\n*/\nfunction iterator2array() {\n\tvar iterator;\n\tvar thisArg;\n\tvar fcn;\n\tvar out;\n\tvar len;\n\tvar set;\n\tvar i;\n\tvar v;\n\n\titerator = arguments[ 0 ];\n\tif ( arguments.length > 1 ) {\n\t\tif ( isCollection( arguments[ 1 ] ) ) {\n\t\t\tout = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Iterator argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\ti = -1;\n\tif ( out === void 0 ) {\n\t\tout = [];\n\t\tif ( fcn ) {\n\t\t\twhile ( true ) {\n\t\t\t\ti += 1;\n\t\t\t\tv = iterator.next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tout.push( fcn.call( thisArg, v.value, i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tout.push( v.value );\n\t\t}\n\t\treturn out;\n\t}\n\tlen = out.length;\n\tset = arraylike2object( out ).setter;\n\tif ( fcn ) {\n\t\twhile ( i < len-1 ) {\n\t\t\ti += 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i < len-1 ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create (or fill) an array from an iterator.\n*\n* @module @stdlib/array/from-iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterator2array = require( '@stdlib/array/from-iterator' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2array( iter );\n* // returns <Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar ctors = require( './../../ctors' );\nvar afill = require( './../../base/filled' );\nvar gfill = require( '@stdlib/blas/ext/base/gfill' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Creates a filled array having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {*} value - fill value\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = full( 2, 1.0 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = full( 2, 1.0, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction full( length, value ) {\n\tvar dtype;\n\tvar ctor;\n\tvar out;\n\tif ( !isNonNegativeInteger( length ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', length ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tdtype = arguments[ 2 ];\n\t} else {\n\t\tdtype = 'float64';\n\t}\n\tif ( dtype === 'generic' ) {\n\t\treturn afill( value, length );\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tout = new ctor( length );\n\n\t// TODO: revisit the following, as using `gfill` is not the most performant, especially for large arrays. We have two options: (1) use a native add-on which delegates to an appropriate C function which performs the loop or (2) use @stdlib/blas/ext/base/(d|s|c|z)fill functions which use native add-ons. The latter option is not great, as we only get perf boosts for large arrays for a select number of dtypes. The former option is more work, as we may need to write a bespoke add-on for handling the argument signature and the various types that `value` can assume (e.g., number, complex, etc). If we had a generic strided `copy` package with an add-on, we could wrap the value as a single element strided array with a stride of `0` and copy from `x` to `y`, and thus would not need to write a bespoke add-on. Note, however, that calling into a native add-on is not free. For shorter arrays, we'll likely observe a perf hit in Node.js. For now, we focus on just getting something working...\n\tgfill( length, value, out, 1 );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = full;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled array having a specified length.\n*\n* @module @stdlib/array/full\n*\n* @example\n* var full = require( '@stdlib/array/full' );\n*\n* var arr = full( 2, 1.0 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var full = require( '@stdlib/array/full' );\n*\n* var arr = full( 2, 1.0, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\nvar dtype = require( './../../dtype' );\nvar full = require( './../../full' );\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar Complex64 = require( '@stdlib/complex/float32' );\n\n\n// MAIN //\n\n/**\n* Creates a filled array having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {number} value - fill value\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} third argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = fullLike( [ 0.0, 0.0 ], 1.0 );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var arr = fullLike( [ 0.0, 0.0 ], 1.0, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction fullLike( x, value ) {\n\tvar dt;\n\tvar v;\n\n\tdt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tdt = arguments[ 2 ];\n\t}\n\tif ( typeof value === 'number' ) {\n\t\tif ( dt === 'complex128' ) {\n\t\t\tv = new Complex128( value, 0.0 );\n\t\t} else if ( dt === 'complex64' ) {\n\t\t\tv = new Complex64( value, 0.0 );\n\t\t} else {\n\t\t\tv = value;\n\t\t}\n\t} else {\n\t\tv = value;\n\t}\n\treturn full( x.length, v, dt );\n}\n\n\n// EXPORTS //\n\nmodule.exports = fullLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled array having the same length and data type as a provided input array.\n*\n* @module @stdlib/array/full-like\n*\n* @example\n* var fullLike = require( '@stdlib/array/full-like' );\n*\n* var arr = fullLike( [ 0.0, 0.0 ], 1.0 );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var fullLike = require( '@stdlib/array/full-like' );\n*\n* var arr = fullLike( [ 0.0, 0.0 ], 1.0, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar format = require( '@stdlib/string/format' );\nvar MAX_LENGTH = require( '@stdlib/constants/uint32/max' );\nvar gen = require( './../../base/incrspace' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array using a provided increment.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @param {number} [increment=1] - increment\n* @throws {TypeError} first argument must be numeric\n* @throws {TypeError} second argument must be numeric\n* @throws {TypeError} third argument must be numeric\n* @throws {RangeError} length of created array must be less than `4294967295` (`2**32 - 1`)\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar len;\n\tvar inc;\n\tif ( !isNumber( x1 ) || isnan( x1 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Start must be numeric. Value: `%s`.', x1 ) );\n\t}\n\tif ( !isNumber( x2 ) || isnan( x2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Stop must be numeric. Value: `%s`.', x2 ) );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tinc = 1;\n\t} else {\n\t\tinc = increment;\n\t\tif ( !isNumber( inc ) || isnan( inc ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Increment must be numeric. Value: `%s`.', inc ) );\n\t\t}\n\t}\n\tlen = ceil( ( x2-x1 ) / inc );\n\tif ( len > MAX_LENGTH ) {\n\t\tthrow new RangeError( 'invalid arguments. Generated array exceeds maximum array length.' );\n\t}\n\treturn gen( x1, x2, inc );\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array using a provided increment.\n*\n* @module @stdlib/array/incrspace\n*\n* @example\n* var incrspace = require( '@stdlib/array/incrspace' );\n*\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns a floating-point typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Complex128Array = require( './../../complex128' );\nvar Complex64Array = require( './../../complex64' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'complex128': Complex128Array,\n\t'complex64': Complex64Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Floating-point typed array constructors.\n*\n* @module @stdlib/array/typed-float-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-float-ctors' );\n*\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced array over a specified interval.\n*\n* @private\n* @param {number} start - start of interval\n* @param {number} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Array} linearly spaced array\n*\n* @example\n* var arr = linspace( 0, 100, 6, true );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*\n* @example\n* var arr = linspace( 0, 100, 5, false );\n* // returns [ 0, 20, 40, 60, 80 ]\n*/\nfunction linspace( start, stop, len, endpoint ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\treturn [ stop ];\n\t\t}\n\t\treturn [ start ];\n\t}\n\tarr = [ start ];\n\n\t// Calculate the increment:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\td = ( stop-start ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( start + (d*i) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tarr.push( stop );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced complex number array over a specified interval.\n*\n* @private\n* @param {string} dt1 - start value data type\n* @param {(number|ComplexLike)} start - start of interval\n* @param {string} dt2 - stop value data type\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Array} linearly spaced array\n*/\nfunction linspace( dt1, start, dt2, stop, len, endpoint ) {\n\tvar cmplx;\n\tvar isf32;\n\tvar arr;\n\tvar re1;\n\tvar re2;\n\tvar im1;\n\tvar im2;\n\tvar re;\n\tvar im;\n\tvar dr;\n\tvar di;\n\tvar N;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tisf32 = 0;\n\tif ( dt1 === 'float64' ) {\n\t\tre1 = start;\n\t\tim1 = 0.0;\n\t} else if ( dt1 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre1 = realf( start );\n\t\tim1 = imagf( start );\n\t} else {\n\t\tre1 = real( start );\n\t\tim1 = imag( start );\n\t}\n\tif ( dt2 === 'float64' ) {\n\t\tre2 = stop;\n\t\tim2 = 0.0;\n\t} else if ( dt2 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre2 = realf( stop );\n\t\tim2 = imagf( stop );\n\t} else {\n\t\tre2 = real( stop );\n\t\tim2 = imag( stop );\n\t}\n\t// Determine which complex number constructor to use according to type promotion rules:\n\tif ( isf32 === 2 ) {\n\t\tcmplx = Complex64;\n\t} else {\n\t\tcmplx = Complex128;\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\treturn [ new cmplx( re2, im2 ) ];\n\t\t}\n\t\treturn [ new cmplx( re1, im1 ) ];\n\t}\n\tarr = [ new cmplx( re1, im1 ) ];\n\n\t// Calculate the increments:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\tdr = ( re2-re1 ) / N;\n\tdi = ( im2-im1 ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tre = re1 + (dr*i);\n\t\tim = im1 + (di*i);\n\t\tarr.push( new cmplx( re, im ) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tarr.push( new cmplx( re2, im2 ) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced sequence over a specified interval and assigns the results to a provided output array.\n*\n* @private\n* @param {TypedArray} out - output array\n* @param {number} start - start of interval\n* @param {number} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {TypedArray} linearly spaced array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var out = new Float64Array( 6 );\n* var arr = linspace( out, 0, 100, out.length, true );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var out = new Float64Array( 5 );\n* var arr = linspace( out, 0, 100, out.length, false );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0 ]\n*/\nfunction linspace( out, start, stop, len, endpoint ) {\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tout[ 0 ] = stop;\n\t\t} else {\n\t\t\tout[ 0 ] = start;\n\t\t}\n\t\treturn out;\n\t}\n\tout[ 0 ] = start;\n\n\t// Calculate the increment:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\td = ( stop-start ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tout[ i ] = start + (d*i);\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tout[ N ] = stop;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced complex number sequence over a specified interval and assigns the results to a provided output array strided view.\n*\n* @private\n* @param {(Float32Array|Float64Array)} out - output array strided view\n* @param {string} dt1 - start value data type\n* @param {(number|ComplexLike)} start - start of interval\n* @param {string} dt2 - stop value data type\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {(Float32Array|Float64Array)} complex number array view\n*/\nfunction linspace( out, dt1, start, dt2, stop, len, endpoint ) {\n\tvar re1;\n\tvar re2;\n\tvar im1;\n\tvar im2;\n\tvar dr;\n\tvar di;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\tif ( dt1 === 'float64' ) {\n\t\tre1 = start;\n\t\tim1 = 0.0;\n\t} else if ( dt1 === 'complex64' ) {\n\t\tre1 = realf( start );\n\t\tim1 = imagf( start );\n\t} else {\n\t\tre1 = real( start );\n\t\tim1 = imag( start );\n\t}\n\tif ( dt2 === 'float64' ) {\n\t\tre2 = stop;\n\t\tim2 = 0.0;\n\t} else if ( dt2 === 'complex64' ) {\n\t\tre2 = realf( stop );\n\t\tim2 = imagf( stop );\n\t} else {\n\t\tre2 = real( stop );\n\t\tim2 = imag( stop );\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tout[ 0 ] = re2;\n\t\t\tout[ 1 ] = im2;\n\t\t} else {\n\t\t\tout[ 0 ] = re1;\n\t\t\tout[ 1 ] = im1;\n\t\t}\n\t\treturn out;\n\t}\n\tout[ 0 ] = re1;\n\tout[ 1 ] = im1;\n\n\t// Calculate the increments:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\tdr = ( re2-re1 ) / N;\n\tdi = ( im2-im1 ) / N;\n\n\t// Generate linearly spaced complex numbers:\n\tj = 2;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tout[ j ] = re1 + (dr*i);\n\t\tout[ j+1 ] = im1 + (di*i);\n\t\tj += 2;\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tout[ j ] = re2;\n\t\tout[ j+1 ] = im2;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.dtype] - output array data type\n* @param {boolean} [options.endpoint] - boolean indicating whether the `stop` value in the output array\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'endpoint': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'dtype' ) ) {\n\t\topts.dtype = options.dtype;\n\t\tif ( !isString( opts.dtype ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'dtype', opts.dtype ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'endpoint' ) ) {\n\t\topts.endpoint = options.endpoint;\n\t\tif ( !isBoolean( opts.endpoint ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'endpoint', opts.endpoint ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar dtype = require( '@stdlib/complex/dtype' );\nvar ctors = require( './../../typed-float-ctors' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar format = require( '@stdlib/string/format' );\nvar genreal = require( './generic_real.js' );\nvar gencmplx = require( './generic_complex.js' );\nvar typedreal = require( './typed_real.js' );\nvar typedcmplx = require( './typed_complex.js' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced array over a specified interval.\n*\n* @param {(number|ComplexLike)} start - start of interval\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {Options} [options] - options\n* @param {string} [options.dtype] - output array data type\n* @param {boolean} [options.endpoint=true] - boolean indicating whether to include the `stop` value in the output array\n* @throws {TypeError} first argument must be either a real or complex number\n* @throws {TypeError} second argument must be either a real or complex number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} last argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} the output array data type must be a complex number data type or \"generic\" when either `start` or `stop` is a complex number\n* @throws {TypeError} the output array data type must be a real or complex floating-point number data type or \"generic\"\n* @returns {(Array|TypedArray|ComplexArray)} linearly spaced array\n*\n* @example\n* var arr = linspace( 0, 100, 6, {\n*     'dtype': 'generic'\n* });\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\nfunction linspace( start, stop, len ) {\n\tvar opts;\n\tvar ctor;\n\tvar err;\n\tvar out;\n\tvar dt1;\n\tvar dt2;\n\tvar flg;\n\n\tif ( typeof start === 'object' ) {\n\t\tdt1 = dtype( start );\n\t\tif ( dt1 === null ) {\n\t\t\tif ( !isComplexLike( start ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t\t\t}\n\t\t\tdt1 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t} else {\n\t\tdt1 = 'float64';\n\t}\n\tif ( typeof stop === 'object' ) {\n\t\tdt2 = dtype( stop );\n\t\tif ( dt2 === null ) {\n\t\t\tif ( !isComplexLike( stop ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t\t\t}\n\t\t\tdt2 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t} else {\n\t\tdt2 = 'float64';\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\topts = {\n\t\t'endpoint': defaults.endpoint\n\t};\n\tif ( dt1 === dt2 ) {\n\t\topts.dtype = dt1; // one of 'float64' || 'complex64' || 'complex128'\n\t} else {\n\t\t// If dtypes are different, then at least one is a complex number. According to type promotion rules, for all possible dtype permutations, the default output data type should be 'complex128'...\n\t\topts.dtype = 'complex128';\n\t}\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, arguments[ 3 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.dtype === 'generic' ) {\n\t\tif ( flg ) {\n\t\t\treturn gencmplx( dt1, start, dt2, stop, len, opts.endpoint );\n\t\t}\n\t\treturn genreal( start, stop, len, opts.endpoint );\n\t}\n\tctor = ctors( opts.dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. `%s` option must be a real or complex floating-point data type or \"generic\". Option: `%s`.', 'dtype', opts.dtype ) );\n\t}\n\tout = new ctor( len );\n\tif ( opts.dtype === 'complex64' ) {\n\t\ttypedcmplx( reinterpret64( out, 0 ), dt1, start, dt2, stop, len, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( opts.dtype === 'complex128' ) {\n\t\ttypedcmplx( reinterpret128( out, 0 ), dt1, start, dt2, stop, len, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( flg ) {\n\t\tthrow new TypeError( 'invalid arguments. If either of the first two arguments are complex numbers, the output array data type must be a complex number data type or \"generic\".' );\n\t}\n\treturn typedreal( out, start, stop, len, opts.endpoint );\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar real = require( '@stdlib/complex/real' );\nvar imag = require( '@stdlib/complex/imag' );\nvar realf = require( '@stdlib/complex/realf' );\nvar imagf = require( '@stdlib/complex/imagf' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced complex number sequence over a specified interval and assigns results to a provided output array.\n*\n* @private\n* @param {Object} out - output array object\n* @param {ArrayLikeObject} out.data - output array data\n* @param {Function} out.setter - accessor for setting array elements\n* @param {string} dt1 - start value data type\n* @param {ComplexLike} start - start of interval\n* @param {string} dt2 - stop value data type\n* @param {ComplexLike} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Object} output array object\n*/\nfunction linspace( out, dt1, start, dt2, stop, len, endpoint ) {\n\tvar cmplx;\n\tvar isf32;\n\tvar re1;\n\tvar re2;\n\tvar im1;\n\tvar im2;\n\tvar set;\n\tvar buf;\n\tvar re;\n\tvar im;\n\tvar dr;\n\tvar di;\n\tvar N;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\tisf32 = 0;\n\tif ( dt1 === 'float64' ) {\n\t\tre1 = start;\n\t\tim1 = 0.0;\n\t} else if ( dt1 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre1 = realf( start );\n\t\tim1 = imagf( start );\n\t} else {\n\t\tre1 = real( start );\n\t\tim1 = imag( start );\n\t}\n\tif ( dt2 === 'float64' ) {\n\t\tre2 = stop;\n\t\tim2 = 0.0;\n\t} else if ( dt2 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre2 = realf( stop );\n\t\tim2 = imagf( stop );\n\t} else {\n\t\tre2 = real( stop );\n\t\tim2 = imag( stop );\n\t}\n\t// Determine which complex number constructor to use according to type promotion rules:\n\tif ( isf32 === 2 ) {\n\t\tcmplx = Complex64;\n\t} else {\n\t\tcmplx = Complex128;\n\t}\n\t// Cache array object references:\n\tbuf = out.data;\n\tset = out.setter;\n\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tset( buf, 0, new cmplx( re2, im2 ) );\n\t\t} else {\n\t\t\tset( buf, 0, new cmplx( re1, im1 ) );\n\t\t}\n\t\treturn out;\n\t}\n\tset( buf, 0, new cmplx( re1, im1 ) );\n\n\t// Calculate the increments:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\tdr = ( re2-re1 ) / N;\n\tdi = ( im2-im1 ) / N;\n\n\t// Generate the linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tre = re1 + (dr*i);\n\t\tim = im1 + (di*i);\n\t\tset( buf, i, new cmplx( re, im ) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tset( buf, N, new cmplx( re2, im2 ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced sequence over a specified interval and assigns results to a provided output array.\n*\n* @private\n* @param {Object} out - output array object\n* @param {ArrayLikeObject} out.data - output array data\n* @param {Function} out.setter - accessor for setting array elements\n* @param {number} start - start of interval\n* @param {number} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Object} output array object\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* function set( buf, i, v ) {\n*     buf[ i ] = v * 2.0;\n* }\n*\n* var out = new Float64Array( 6 );\n* var obj = {\n*     'data': out,\n*     'setter': set\n* };\n* linspace( obj, 0, 100, out.length, true );\n*\n* var arr = obj.data;\n* // returns <Float64Array>[ 0.0, 40.0, 80.0, 120.0, 160.0, 200.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* function set( buf, i, v ) {\n*     buf[ i ] = v * 2.0;\n* }\n*\n* var out = new Float64Array( 5 );\n* var obj = {\n*     'data': out,\n*     'setter': set\n* };\n* linspace( obj, 0, 100, out.length, false );\n*\n* var arr = obj.data;\n* // returns <Float64Array>[ 0.0, 40.0, 80.0, 120.0, 160.0 ]\n*/\nfunction linspace( out, start, stop, len, endpoint ) {\n\tvar buf;\n\tvar set;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\t// Cache array object references:\n\tbuf = out.data;\n\tset = out.setter;\n\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tset( buf, 0, stop );\n\t\t} else {\n\t\t\tset( buf, 0, start );\n\t\t}\n\t\treturn out;\n\t}\n\tset( buf, 0, start );\n\n\t// Calculate the increment:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\td = ( stop-start ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tset( buf, i, start + (d*i) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tset( buf, N, stop );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar dtype = require( '@stdlib/complex/dtype' );\nvar adtype = require( './../../dtype' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar acccmplx = require( './accessors_complex.js' );\nvar accreal = require( './accessors_real.js' );\nvar typedcmplx = require( './typed_complex.js' );\nvar typedreal = require( './typed_real.js' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced sequence over a specified interval and assigns the results to a provided output array.\n*\n* @param {(number|ComplexLike)} start - start of interval\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {Collection} out - output array\n* @param {Options} [options] - options\n* @param {boolean} [options.endpoint=true] - boolean indicating whether to include the `stop` value in the output array\n* @throws {TypeError} first argument must be either a real or complex number\n* @throws {TypeError} second argument must be either a real or complex number\n* @throws {TypeError} third argument must be an array-like object\n* @throws {TypeError} last argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} the output array data type must be a complex number data type or \"generic\" when either `start` or `stop` is a complex number\n* @returns {Collection} output array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var out = new Float64Array( 6 );\n* var arr = linspace( 0, 100, out );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*/\nfunction linspace( start, stop, out ) {\n\tvar opts;\n\tvar err;\n\tvar dt1;\n\tvar dt2;\n\tvar flg;\n\tvar odt;\n\tvar o;\n\n\tif ( typeof start === 'object' ) {\n\t\tdt1 = dtype( start );\n\t\tif ( dt1 === null ) {\n\t\t\tif ( !isComplexLike( start ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t\t\t}\n\t\t\tdt1 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t} else {\n\t\tdt1 = 'float64';\n\t}\n\tif ( typeof stop === 'object' ) {\n\t\tdt2 = dtype( stop );\n\t\tif ( dt2 === null ) {\n\t\t\tif ( !isComplexLike( stop ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t\t\t}\n\t\t\tdt2 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t} else {\n\t\tdt2 = 'float64';\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\topts = {\n\t\t'endpoint': defaults.endpoint\n\t};\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, arguments[ 3 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\todt = adtype( out );\n\tif ( odt === null ) {\n\t\todt = 'generic';\n\t}\n\tif ( odt === 'complex64' ) {\n\t\ttypedcmplx( reinterpret64( out, 0 ), dt1, start, dt2, stop, out.length, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( odt === 'complex128' ) {\n\t\ttypedcmplx( reinterpret128( out, 0 ), dt1, start, dt2, stop, out.length, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( flg ) {\n\t\tif ( odt === 'generic' ) {\n\t\t\to = arraylike2object( out );\n\t\t\tacccmplx( o, dt1, start, dt2, stop, out.length, opts.endpoint );\n\t\t\treturn out;\n\t\t}\n\t\tthrow new TypeError( 'invalid arguments. If either of the first two arguments are complex numbers, the output array must be a complex number array or a \"generic\" array-like object.' );\n\t}\n\to = arraylike2object( out );\n\tif ( o.accessors ) {\n\t\taccreal( o, start, stop, out.length, opts.endpoint );\n\t\treturn out;\n\t}\n\ttypedreal( out, start, stop, out.length, opts.endpoint );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced array.\n*\n* @module @stdlib/array/linspace\n*\n* @example\n* var linspace = require( '@stdlib/array/linspace' );\n*\n* var arr = linspace( 0, 100, 6 );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*\n* @example\n* var linspace = require( '@stdlib/array/linspace' );\n*\n* var arr = linspace( 0, 100, 5, {\n*     'endpoint': false\n* });\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var linspace = require( '@stdlib/array/linspace' );\n*\n* var arr = new Float64Array( 6 );\n* var out = linspace.assign( 0, 100, out );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var linspace = require( '@stdlib/array/linspace' );\n*\n* var arr = new Float64Array( 5 );\n* var out = linspace.assign( 0, 100, out, {\n*     'endpoint': false\n* });\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar assign = require( './assign.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar isnan = require( '@stdlib/math/base/assert/is-nan' );\nvar gen = require( './../../base/logspace' );\n\n\n// MAIN //\n\n/**\n* Generates a logarithmically spaced numeric array.\n*\n* @param {number} a - exponent of start value\n* @param {number} b - exponent of end value\n* @param {NonNegativeInteger} [len=10] - length of output array\n* @throws {TypeError} first argument must be numeric\n* @throws {TypeError} second argument must be numeric\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Array} logarithmically spaced numeric array\n*\n* @example\n* var arr = logspace( 0, 2, 6 );\n* // returns [ 1, ~2.5, ~6.31, ~15.85, ~39.81, 100 ]\n*/\nfunction logspace( a, b, len ) {\n\tif ( !isNumber( a ) || isnan( a ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Exponent of start value must be numeric. Value: `%s`.', a ) );\n\t}\n\tif ( !isNumber( b ) || isnan( b ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Exponent of stop value must be numeric. Value: `%s`.', b ) );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tlen = 10;\n\t} else if ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\treturn gen( a, b, len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = logspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a logarithmically spaced numeric array.\n*\n* @module @stdlib/array/logspace\n*\n* @example\n* var logspace = require( '@stdlib/array/logspace' );\n*\n* var arr = logspace( 0, 2, 6 );\n* // returns [ 1, ~2.5, ~6.31, ~15.85, ~39.81, 100 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar isNegativeZero = require( '@stdlib/math/base/assert/is-negative-zero' );\nvar isComplexLike = require( '@stdlib/assert/is-complex-like' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar FLOAT32_SMALLEST_SUBNORMAL = require( '@stdlib/constants/float32/smallest-subnormal' ); // eslint-disable-line id-length\nvar FLOAT32_MAX_SAFE_INTEGER = require( '@stdlib/constants/float32/max-safe-integer' );\nvar FLOAT32_MIN_SAFE_INTEGER = require( '@stdlib/constants/float32/min-safe-integer' );\nvar INT8_MIN = require( '@stdlib/constants/int8/min' );\nvar INT16_MIN = require( '@stdlib/constants/int16/min' );\nvar INT32_MIN = require( '@stdlib/constants/int32/min' );\nvar UINT8_MAX = require( '@stdlib/constants/uint8/max' );\nvar UINT16_MAX = require( '@stdlib/constants/uint16/max' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\n\n\n// FUNCTIONS //\n\n/**\n* Returns the minimum floating-point array data type of the closest \"kind\" necessary for storing a provided scalar.\n*\n* @private\n* @param {number} value - real value\n* @returns {string} array data type\n*/\nfunction minFloatDataType( value ) {\n\tif ( value !== value || value === PINF || value === NINF ) {\n\t\treturn 'float32';\n\t}\n\tif ( isInteger( value ) ) {\n\t\tif ( value >= FLOAT32_MIN_SAFE_INTEGER && value <= FLOAT32_MAX_SAFE_INTEGER ) { // eslint-disable-line max-len\n\t\t\treturn 'float32';\n\t\t}\n\t\treturn 'float64';\n\t}\n\t// Assume that if we are provided a tiny value, we don't want to underflow to zero by storing as `float32`...\n\tif (\n\t\tvalue > -FLOAT32_SMALLEST_SUBNORMAL &&\n\t\tvalue < FLOAT32_SMALLEST_SUBNORMAL\n\t) {\n\t\treturn 'float64';\n\t}\n\t// Any number which reaches this point is less than the maximum single-precision floating-point number, as floating-point format supports a limited number of decimals (e.g., (1.0+EPS)*10**15 => 1000000000000000.2, which is less than ~3.4e38)...\n\treturn 'float32';\n}\n\n\n// MAIN //\n\n/**\n* Returns the minimum array data type of the closest \"kind\" necessary for storing a provided scalar value.\n*\n* @param {*} value - scalar value\n* @returns {string} array data type\n*\n* @example\n* var dt = minDataType( 3.141592653589793 );\n* // returns 'float32'\n*\n* @example\n* var dt = minDataType( 3 );\n* // returns 'uint8'\n*/\nfunction minDataType( value ) {\n\tif ( typeof value !== 'number' ) {\n\t\tif ( isComplexLike( value ) ) {\n\t\t\tif ( minFloatDataType( value.re ) === 'float64' || minFloatDataType( value.im ) === 'float64' ) {\n\t\t\t\treturn 'complex128';\n\t\t\t}\n\t\t\treturn 'complex64';\n\t\t}\n\t\treturn 'generic';\n\t}\n\tif ( value !== value || value === PINF || value === NINF ) {\n\t\treturn 'float32';\n\t}\n\tif ( isInteger( value ) ) {\n\t\tif ( value === 0 && isNegativeZero( value ) ) {\n\t\t\treturn 'float32';\n\t\t}\n\t\tif ( value < 0 ) {\n\t\t\tif ( value >= INT8_MIN ) {\n\t\t\t\treturn 'int8';\n\t\t\t}\n\t\t\tif ( value >= INT16_MIN ) {\n\t\t\t\treturn 'int16';\n\t\t\t}\n\t\t\tif ( value >= INT32_MIN ) {\n\t\t\t\treturn 'int32';\n\t\t\t}\n\t\t\treturn 'float64';\n\t\t}\n\t\tif ( value <= UINT8_MAX ) {\n\t\t\treturn 'uint8';\n\t\t}\n\t\tif ( value <= UINT16_MAX ) {\n\t\t\treturn 'uint16';\n\t\t}\n\t\tif ( value <= UINT32_MAX ) {\n\t\t\treturn 'uint32';\n\t\t}\n\t\treturn 'float64';\n\t}\n\t// Assume that if we are provided a tiny value, we don't want to underflow to zero by storing as `float32`...\n\tif (\n\t\tvalue > -FLOAT32_SMALLEST_SUBNORMAL &&\n\t\tvalue < FLOAT32_SMALLEST_SUBNORMAL\n\t) {\n\t\treturn 'float64';\n\t}\n\t// Any number which reaches this point is less than the maximum single-precision floating-point number, as floating-point format supports a limited number of decimals (e.g., (1.0+EPS)*10**15 => 1000000000000000.2, which is less than ~3.4e38)...\n\treturn 'float32';\n}\n\n\n// EXPORTS //\n\nmodule.exports = minDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the minimum array data type of the closest \"kind\" necessary for storing a provided scalar value.\n*\n* @module @stdlib/array/min-dtype\n*\n* @example\n* var minDataType = require( '@stdlib/array/min-dtype' );\n*\n* var dt = minDataType( 3.141592653589793 );\n* // returns 'float32'\n*\n* dt = minDataType( 3 );\n* // returns 'uint8'\n*/\n\n// MODULES //\n\nvar minDataType = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar NEXT_DTYPES = require( './next_dtypes.json' );\n\n\n// FUNCTIONS //\n\n/**\n* Generates a table.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( NEXT_DTYPES );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tout[ dtypes[i] ] = NEXT_DTYPES[ dtypes[i] ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns the next larger array data type of the same kind.\n*\n* @param {string} [dtype] - array data type\n* @returns {(Object|string|integer|null)} next larger data type(s) or null\n*\n* @example\n* var dt = nextDataType( 'float32' );\n* // returns 'float64'\n*/\nfunction nextDataType( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateTable();\n\t}\n\tif ( hasOwnProp( NEXT_DTYPES, dtype ) ) {\n\t\treturn NEXT_DTYPES[ dtype ];\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nextDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the next larger array data type of the same kind.\n*\n* @module @stdlib/array/next-dtype\n*\n* @example\n* var nextDataType = require( '@stdlib/array/next-dtype' );\n*\n* var dt = nextDataType( 'float32' );\n* // returns 'float64'\n*/\n\n// MODULES //\n\nvar nextDataType = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = nextDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar full = require( './../../full' );\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( 1.0, 0.0 );\nvar Z64 = new Complex64( 1.0, 0.0 );\n\n\n// MAIN //\n\n/**\n* Creates an array filled with ones and having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = ones( 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = ones( 2, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction ones( length ) {\n\tvar dtype;\n\tvar value;\n\n\tif ( arguments.length > 1 ) {\n\t\tdtype = arguments[ 1 ];\n\t} else {\n\t\tdtype = 'float64';\n\t}\n\tif ( dtype === 'complex128' ) {\n\t\tvalue = Z128;\n\t} else if ( dtype === 'complex64' ) {\n\t\tvalue = Z64;\n\t} else {\n\t\tvalue = 1;\n\t}\n\treturn full( length, value, dtype );\n}\n\n\n// EXPORTS //\n\nmodule.exports = ones;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an array filled with ones and having a specified length.\n*\n* @module @stdlib/array/ones\n*\n* @example\n* var ones = require( '@stdlib/array/ones' );\n*\n* var arr = ones( 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var ones = require( '@stdlib/array/ones' );\n*\n* var arr = ones( 2, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar dtype = require( './../../dtype' );\nvar full = require( './../../full' );\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( 1.0, 0.0 );\nvar Z64 = new Complex64( 1.0, 0.0 );\n\n\n// MAIN //\n\n/**\n* Creates an array filled with ones and having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = onesLike( [ 0.0, 0.0 ] );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var arr = onesLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction onesLike( x ) {\n\tvar dt;\n\tvar v;\n\n\tdt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t}\n\tif ( dt === 'complex128' ) {\n\t\tv = Z128;\n\t} else if ( dt === 'complex64' ) {\n\t\tv = Z64;\n\t} else {\n\t\tv = 1.0;\n\t}\n\treturn full( x.length, v, dt );\n}\n\n\n// EXPORTS //\n\nmodule.exports = onesLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an array filled with ones and having the same length and data type as a provided input array.\n*\n* @module @stdlib/array/ones-like\n*\n* @example\n* var onesLike = require( '@stdlib/array/ones-like' );\n*\n* var arr = onesLike( [ 0.0, 0.0 ] );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var onesLike = require( '@stdlib/array/ones-like' );\n*\n* var arr = onesLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns a typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Int16Array = require( './../../int16' );\nvar Int32Array = require( './../../int32' );\nvar Int8Array = require( './../../int8' );\nvar Uint16Array = require( './../../uint16' );\nvar Uint32Array = require( './../../uint32' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray,\n\t'complex64': Complex64Array,\n\t'complex128': Complex128Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructors.\n*\n* @module @stdlib/array/typed-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-ctors' );\n*\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.highWaterMark] - maximum total memory which can be allocated\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'highWaterMark': 1024\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'highWaterMark' ) ) {\n\t\topts.highWaterMark = options.highWaterMark;\n\t\tif ( !isNonNegativeInteger( opts.highWaterMark ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'highWaterMark', opts.highWaterMark ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Initializes a cache for pooled typed array buffers.\n*\n* @private\n* @param {NonNegativeInteger} n - base-2 logarithm of the maximum typed array size\n* @returns {ArrayArray} initialized cache\n*/\nfunction pool( n ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < n+1; i++ ) {\n\t\tout.push( [] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\nvar isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\nvar isComplex64Array = require( '@stdlib/assert/is-complex64array' );\nvar isComplex128Array = require( '@stdlib/assert/is-complex128array' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar ctors = require( './../../typed-ctors' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar ArrayBuffer = require( './../../buffer' );\nvar ceil = require( '@stdlib/math/base/special/ceil' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar ceil2 = require( '@stdlib/math/base/special/ceil2' );\nvar log2 = require( '@stdlib/math/base/special/log2' );\nvar min = require( '@stdlib/math/base/special/min' );\nvar defaults = require( './defaults.json' );\nvar validate = require( './validate.js' );\nvar createPool = require( './pool.js' );\nvar BYTES_PER_ELEMENT = require( './bytes_per_element.json' );\n\n\n// VARIABLES //\n\nvar Complex64Array = ctors( 'complex64' );\nvar Complex128Array = ctors( 'complex128' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array is a single-precision complex floating-point number array.\n*\n* @private\n* @param {Collection} arr - input array\n* @returns {boolean} boolean indicating whether an input array is a single-precision complex floating-point number array\n*/\nfunction isCmplx64Array( arr ) {\n\treturn ( arr instanceof Complex64Array );\n}\n\n/**\n* Tests whether an array is a double-precision complex floating-point number array.\n*\n* @private\n* @param {Collection} arr - input array\n* @returns {boolean} boolean indicating whether an input array is a double-precision complex floating-point number array\n*/\nfunction isCmplx128Array( arr ) {\n\treturn ( arr instanceof Complex128Array );\n}\n\n\n// MAIN //\n\n/**\n* Creates a typed array pool.\n*\n* @param {Options} [options] - pool options\n* @param {NonNegativeInteger} [options.highWaterMark] - maximum total memory which can be allocated\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} allocator\n*\n* @example\n* var typedarraypool = factory();\n*\n* // Allocate an array of doubles:\n* var arr = typedarraypool( 5, 'float64' );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* arr[ 0 ] = 3.14;\n* arr[ 1 ] = 3.14;\n*\n* // ...\n*\n* // Free the allocated memory to be used in a future allocation:\n* typedarraypool.free( arr );\n*/\nfunction factory( options ) {\n\tvar nbytes;\n\tvar pool;\n\tvar opts;\n\tvar err;\n\n\topts = copy( defaults );\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tpool = createPool( ceil( log2( opts.highWaterMark ) ) );\n\tnbytes = 0;\n\n\tsetReadOnly( malloc, 'malloc', malloc ); // circular reference\n\tsetReadOnly( malloc, 'calloc', calloc );\n\tsetReadOnly( malloc, 'free', free );\n\tsetReadOnly( malloc, 'clear', clear );\n\tsetReadOnly( malloc, 'highWaterMark', opts.highWaterMark );\n\tsetReadOnlyAccessor( malloc, 'nbytes', getBytes );\n\n\treturn malloc;\n\n\t/**\n\t* Returns the number of allocated bytes.\n\t*\n\t* @private\n\t* @returns {NonNegativeInteger} number of allocated bytes\n\t*/\n\tfunction getBytes() {\n\t\treturn nbytes;\n\t}\n\n\t/**\n\t* Returns an array buffer.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} n - number of bytes\n\t* @returns {(ArrayBuffer|null)} array buffer or null\n\t*/\n\tfunction arraybuffer( n ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\t// Convert the number of bytes to an index in our pool table:\n\t\ti = log2( n );\n\n\t\t// If we already have an available array buffer, use it...\n\t\tif ( i < pool.length && pool[ i ].length ) {\n\t\t\treturn pool[ i ].pop();\n\t\t}\n\t\t// Before allocating a new array buffer, ensure that we have not exceeded the maximum number of bytes we are allowed to allocate...\n\t\tif ( nbytes+n > opts.highWaterMark ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf = new ArrayBuffer( n );\n\n\t\t// Update the running counter of allocated bytes:\n\t\tnbytes += n;\n\n\t\treturn buf;\n\t}\n\n\t/**\n\t* Returns a typed array.\n\t*\n\t* @private\n\t* @param {Function} ctor - typed array constructor\n\t* @param {NonNegativeInteger} len - view length\n\t* @param {string} dtype - data type\n\t* @returns {(TypedArray|null)} typed array or null\n\t*/\n\tfunction typedarray( ctor, len, dtype ) {\n\t\tvar buf;\n\t\tif ( len === 0 ) {\n\t\t\treturn new ctor( 0 );\n\t\t}\n\t\tbuf = arraybuffer( ceil2( len )*BYTES_PER_ELEMENT[ dtype ] );\n\t\tif ( buf === null ) {\n\t\t\treturn buf;\n\t\t}\n\t\treturn new ctor( buf, 0, len );\n\t}\n\n\t/**\n\t* Returns an uninitialized typed array.\n\t*\n\t* ## Notes\n\t*\n\t* -   Memory is **not** initialized.\n\t* -   Memory is lazily allocated.\n\t* -   If the function returns `null`, the function was unable to allocate a new typed array from the typed array pool (most likely due to insufficient memory).\n\t*\n\t* @private\n\t* @param {(NonNegativeInteger|Collection)} [arg] - an array length or an array-like object\n\t* @param {string} [dtype=\"float64\"] - data type\n\t* @throws {TypeError} must provide a valid array length or an array-like object\n\t* @throws {TypeError} must provide a recognized data type\n\t* @returns {(TypedArray|null)} typed array or null\n\t*/\n\tfunction malloc() {\n\t\tvar nargs;\n\t\tvar dtype;\n\t\tvar ctor;\n\t\tvar arr;\n\t\tvar out;\n\t\tvar set;\n\t\tvar get;\n\t\tvar len;\n\t\tvar i;\n\n\t\tnargs = arguments.length;\n\t\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\t\tnargs -= 1;\n\t\t\tdtype = arguments[ nargs ];\n\t\t} else {\n\t\t\tdtype = 'float64';\n\t\t}\n\t\tctor = ctors( dtype );\n\t\tif ( ctor === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t\t}\n\t\tif ( nargs <= 0 ) {\n\t\t\treturn new ctor( 0 );\n\t\t}\n\t\t// Check if provided a typed array length...\n\t\tif ( isNonNegativeInteger( arguments[ 0 ] ) ) {\n\t\t\treturn typedarray( ctor, arguments[ 0 ], dtype );\n\t\t}\n\t\t// Check if provided an array-like object containing data elements...\n\t\tif ( isCollection( arguments[ 0 ] ) ) {\n\t\t\tarr = arguments[ 0 ];\n\t\t\tlen = arr.length;\n\t\t\tif ( isComplex128Array( arr ) ) {\n\t\t\t\tarr = reinterpret128( arr, 0 );\n\t\t\t} else if ( isComplex64Array( arr ) ) {\n\t\t\t\tarr = reinterpret64( arr, 0 );\n\t\t\t} else if ( /^complex/.test( dtype ) ) {\n\t\t\t\t// Assume we've been provided an array of interleaved real and imaginary components...\n\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\tout = typedarray( ctor, len, dtype );\n\t\t\tif ( out === null ) {\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\tif ( isCmplx128Array( out ) || isCmplx64Array( out ) ) {\n\t\t\t\tout.set( arr );\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// Wrap the arrays in order to account for the possibility that `arr` is a complex number array. As we don't prohibit other \"unsafe\" casts (e.g., providing a `Float64Array` and specifying a `dtype` of `uint8`), we don't prohibit providing a complex number array and specifying a real `dtype`. The results will probably be unexpected/gibberish, but I am not sure we should be overly pedantic in ensuring user's don't do ill-advised things...\n\t\t\tget = arraylike2object( arr ).getter;\n\t\t\tset = arraylike2object( out ).setter;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tset( out, i, get( arr, i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array length or an array-like object. Value: `%s`.', arguments[ 0 ] ) );\n\t}\n\n\t/**\n\t* Returns a zero-initialized typed array.\n\t*\n\t* ## Notes\n\t*\n\t* -   If the function returns `null`, the function was unable to allocate a new typed array from the typed array pool (most likely due to insufficient memory).\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} [len=0] - array length\n\t* @param {string} [dtype=\"float64\"] - data type\n\t* @throws {TypeError} must provide a valid array length\n\t* @throws {TypeError} must provide a recognized data type\n\t* @returns {(TypedArray|null)} typed array or null\n\t*/\n\tfunction calloc() {\n\t\tvar nargs;\n\t\tvar out;\n\t\tvar tmp;\n\t\tvar i;\n\n\t\tnargs = arguments.length;\n\t\tif ( nargs === 0 ) {\n\t\t\tout = malloc();\n\t\t} else if ( nargs === 1 ) {\n\t\t\tout = malloc( arguments[ 0 ] );\n\t\t} else {\n\t\t\tout = malloc( arguments[ 0 ], arguments[ 1 ] );\n\t\t}\n\t\tif ( out !== null ) {\n\t\t\t// Initialize the memory...\n\t\t\tif ( isCmplx128Array( out ) ) {\n\t\t\t\ttmp = reinterpret128( out, 0 );\n\t\t\t} else if ( isCmplx64Array( out ) ) {\n\t\t\t\ttmp = reinterpret64( out, 0 );\n\t\t\t} else {\n\t\t\t\ttmp = out;\n\t\t\t}\n\t\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\t\ttmp[ i ] = 0.0;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Frees a typed array or typed array buffer.\n\t*\n\t* ## Notes\n\t*\n\t* -   Implicitly, we support providing non-internally allocated arrays and array buffer (e.g., \"freeing\" a typed array allocated in userland); however, the freed array buffer is likely to have excess capacity when compared to other members in its pool.\n\t*\n\t* @private\n\t* @param {(TypedArray|ArrayBuffer)} buf - typed array or array buffer to free\n\t* @throws {TypeError} must provide a typed array or typed array buffer\n\t* @returns {boolean} boolean indicating whether the typed array or array buffer was successfully freed\n\t*/\n\tfunction free( buf ) {\n\t\tvar n;\n\t\tvar p;\n\t\tvar i;\n\t\tif ( isTypedArrayLike( buf ) && buf.buffer ) {\n\t\t\tbuf = buf.buffer;\n\t\t} else if ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array or typed array buffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tif ( buf.byteLength > 0 ) {\n\t\t\tn = floor( log2( buf.byteLength ) );\n\n\t\t\t// Prohibit \"freeing\" array buffers which would potentially allow users to circumvent high water mark limits:\n\t\t\tn = min( pool.length-1, n );\n\n\t\t\t// Ensure that we do not attempt to free the same buffer more than once...\n\t\t\tp = pool[ n ];\n\t\t\tfor ( i = 0; i < p.length; i++ ) {\n\t\t\t\tif ( p[ i ] === buf ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add the buffer to our pool of free buffers:\n\t\t\tp.push( buf );\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t* Clears the typed array pool allowing garbage collection of previously allocated (and currently free) array buffers.\n\t*\n\t* @private\n\t*/\n\tfunction clear() {\n\t\tvar i;\n\t\tfor ( i = 0; i < pool.length; i++ ) {\n\t\t\tpool[ i ].length = 0;\n\t\t}\n\t\tnbytes = 0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array pool.\n*\n* @module @stdlib/array/pool\n*\n* @example\n* var typedarraypool = require( '@stdlib/array/pool' );\n*\n* // Allocate an array of doubles:\n* var arr = typedarraypool( 5, 'float64' );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* arr[ 0 ] = 3.14;\n* arr[ 1 ] = 3.14;\n*\n* // ...\n*\n* // Free the allocated memory to be used in a future allocation:\n* typedarraypool.free( arr );\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\n/**\n* Returns an uninitialized typed array.\n*\n* ## Notes\n*\n* -   Memory is **not** initialized.\n* -   Memory is lazily allocated.\n* -   If the function returns `null`, the function was unable to allocate a new typed array from the typed array pool (most likely due to insufficient memory).\n*\n* @name typedarraypool\n* @type {Function}\n* @param {(NonNegativeInteger|ArrayLikeObject)} [arg] - an array length or an array-like object\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a valid array length or an array-like object\n* @throws {TypeError} must provide a recognized data type\n* @returns {(TypedArray|null)} typed array or null\n*\n* @example\n* // Allocate an array of doubles:\n* var arr = typedarraypool( 5, 'float64' );\n* // e.g., returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* arr[ 0 ] = 3.14;\n* arr[ 1 ] = 3.14;\n*\n* // ...\n*\n* // Free the allocated memory to be used in a future allocation:\n* typedarraypool.free( arr );\n*/\nvar typedarraypool = factory();\n\n\n// EXPORTS //\n\nmodule.exports = typedarraypool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar PROMOTION_RULES = require( './promotion_rules.json' );\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of promotion rules.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( PROMOTION_RULES );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = PROMOTION_RULES[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns the array data type with the smallest size and closest \"kind\" to which array data types can be safely cast.\n*\n* @param {string} [dtype1] - array data type\n* @param {string} [dtype2] - array data type\n* @returns {(Object|integer|string|null)} promotion rule(s) or null\n*\n* @example\n* var table = promotionRules();\n* // returns {...}\n*\n* @example\n* var dt = promotionRules( 'float32', 'uint32' );\n* // returns 'float64'\n*\n* @example\n* var dt = promotionRules( 'float32', 'foo' );\n* // returns null\n*/\nfunction promotionRules( dtype1, dtype2 ) {\n\tvar o;\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( hasOwnProp( PROMOTION_RULES, dtype1 ) ) {\n\t\to = PROMOTION_RULES[ dtype1 ];\n\t\tif ( hasOwnProp( o, dtype2 ) ) {\n\t\t\treturn o[ dtype2 ];\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = promotionRules;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the array data type with the smallest size and closest \"kind\" to which array data types can be safely cast.\n*\n* @module @stdlib/array/promotion-rules\n*\n* @example\n* var promotionRules = require( '@stdlib/array/promotion-rules' );\n*\n* var table = promotionRules();\n* // returns {...}\n*\n* var dt = promotionRules( 'float32', 'uint32' );\n* // returns 'float64'\n*\n* dt = promotionRules( 'float32', 'foo' );\n* // returns null\n*/\n\n// MODULES //\n\nvar promotionRules = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = promotionRules;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar ctors = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized typed array.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|TypedArray)} value or typed array\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n*\n* var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\n*\n* var arr = parseJSON( str, reviver );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*/\nfunction reviver( key, value ) {\n\tvar ctor;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisArray( value.data )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\treturn new ctor( value.data );\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Int16Array = require( './../../int16' );\nvar Int32Array = require( './../../int32' );\nvar Int8Array = require( './../../int8' );\nvar Uint16Array = require( './../../uint16' );\nvar Uint32Array = require( './../../uint32' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'Float64Array': Float64Array,\n\t'Float32Array': Float32Array,\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array,\n\t'Int16Array': Int16Array,\n\t'Uint16Array': Uint16Array,\n\t'Int8Array': Int8Array,\n\t'Uint8Array': Uint8Array,\n\t'Uint8ClampedArray': Uint8ClampedArray,\n\t'Complex64Array': Complex64Array,\n\t'Complex128Array': Complex128Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar SAFE_CASTS = require( './safe_casts.json' );\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of safe casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of safe casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of array data types to which a provided array data type can be safely cast.\n*\n* @param {string} [dtype] - array data type\n* @returns {(Object|StringArray|null)} list of array data types or null\n*\n* @example\n* var list = safeCasts( 'float32' );\n* // returns [...]\n*/\nfunction safeCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = safeCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized typed array.\n*\n* @module @stdlib/array/reviver\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n* var reviver = require( '@stdlib/array/reviver' );\n*\n* var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\n*\n* var arr = parseJSON( str, reviver );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar SAME_KIND_CASTS = require( './same_kind_casts.json' );\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of same \"kind\" casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAME_KIND_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAME_KIND_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of same \"kind\" casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAME_KIND_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAME_KIND_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of array data types to which a provided array data type can be safely cast or cast within the same \"kind\".\n*\n* @param {string} [dtype] - array data type\n* @returns {(Object|StringArray|null)} list of array data types or null\n*\n* @example\n* var list = sameKindCasts( 'float32' );\n* // returns [...]\n*/\nfunction sameKindCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sameKindCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of array data types to which a provided array data type can be safely cast.\n*\n* @module @stdlib/array/safe-casts\n*\n* @example\n* var safeCasts = require( '@stdlib/array/safe-casts' );\n*\n* var list = safeCasts( 'float32' );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar safeCasts = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = safeCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of array data types to which a provided array data type can be safely cast or cast within the same \"kind\".\n*\n* @module @stdlib/array/same-kind-casts\n*\n* @example\n* var sameKindCasts = require( '@stdlib/array/same-kind-casts' );\n*\n* var list = sameKindCasts( 'float32' );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar sameKindCasts = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = sameKindCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// FUNCTIONS //\n\n/**\n* Recursively (and eagerly) attempts to resolve nested array dimensions.\n*\n* @private\n* @param {Array} shape - output array\n* @param {ArrayLikeObject} arr - array\n* @returns {Array} shape array\n*/\nfunction recurse( shape, arr ) {\n\tvar v = arr[ 0 ];\n\tif ( isArrayLikeObject( v ) ) {\n\t\tshape.push( v.length );\n\t\trecurse( shape, v );\n\t}\n\treturn shape;\n}\n\n/**\n* Recursively verifies that all nested arrays have consistent dimensions.\n*\n* @private\n* @param {PositiveInteger} ndims - number of dimensions\n* @param {Array} shape - shape array\n* @param {NonNegativeInteger} d - dimension\n* @param {ArrayLikeObject} arr - array element to verify\n* @param {boolean} flg - boolean indicating whether to continue recursing\n* @returns {NonNegativeInteger} number of consistent dimensions\n*/\nfunction check( ndims, shape, d, arr, flg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\n\t// Get the size of the current dimension:\n\tlen = shape[ d ];\n\n\t// Ensure that each array element is an array of the same size:\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\n\t\t// If the array element is not an array or is not the same size, we have found an inconsistent dimension:\n\t\tif ( !isArrayLikeObject( v ) || v.length !== len ) {\n\t\t\t// `d` is one more than the index of the last consistent dimension and thus equal to the number of consistent dimensions:\n\t\t\treturn d;\n\t\t}\n\t\t// Recursively examine nested elements:\n\t\tif ( flg ) {\n\t\t\tv = check( ndims, shape, d+1, v, d+1 < ndims-1 );\n\t\t\tif ( v < ndims ) {\n\t\t\t\t// Propagate the number of consistent dimensions up the recursion chain...\n\t\t\t\treturn v;\n\t\t\t}\n\t\t}\n\t}\n\treturn ndims;\n}\n\n\n// MAIN //\n\n/**\n* Determines (nested) array dimensions.\n*\n* @param {ArrayLikeObject} arr - array\n* @throws {TypeError} must provide an array\n* @returns {Array} array shape\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3, 3 ]\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], null ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*/\nfunction arrayShape( arr ) {\n\tvar shape;\n\tvar ndims;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t}\n\t// Initialize the shape/dimensions array:\n\tshape = [ arr.length ];\n\n\t// Eagerly determine array dimensions:\n\trecurse( shape, arr );\n\tndims = shape.length;\n\n\t// Check that all array element dimensions are consistent:\n\tif ( ndims > 1 ) {\n\t\t// If `check()` returns a value less than `ndims`, trim off the inconsistent dimensions:\n\t\tshape.length = check( ndims, shape, 1, arr, ndims > 2 );\n\t}\n\treturn shape;\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayShape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine (nested) array dimensions.\n*\n* @module @stdlib/array/shape\n*\n* @example\n* var arrayShape = require( '@stdlib/array/shape' );\n*\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3, 3 ]\n*\n* @example\n* var arrayShape = require( '@stdlib/array/shape' );\n*\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*\n* @example\n* var arrayShape = require( '@stdlib/array/shape' );\n*\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], null ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Constructor returning an object used to represent a generic, fixed-length raw binary data buffer which can be used to create views of shared memory.\n*\n* @param {NonNegativeInteger} size - number of bytes\n* @throws {Error} not implemented\n*/\nfunction polyfill( size ) { // eslint-disable-line no-unused-vars\n\tthrow new Error( 'The current environment does not support SharedArrayBuffers, and, unfortunately, SharedArrayBuffers cannot be polyfilled. For shared memory applications, upgrade your runtime environment to one which supports SharedArrayBuffers.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor returning an object used to represent a generic, fixed-length raw binary data buffer which can be used to create views of shared memory.\n*\n* @module @stdlib/array/shared-buffer\n*\n* @example\n* var ctor = require( '@stdlib/array/shared-buffer' );\n*\n* var buf;\n* try {\n*     buf = new ctor( 10 );\n*     // returns <SharedArrayBuffer>\n* } catch ( err ) {\n*     console.log( 'Environment does not support SharedArrayBuffers.' );\n* }\n*/\n\n// MODULES //\n\nvar hasSharedArrayBufferSupport = require( '@stdlib/assert/has-sharedarraybuffer-support' ); // eslint-disable-line id-length\nvar builtin = require( './sharedarraybuffer.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasSharedArrayBufferSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof SharedArrayBuffer === 'function' ) ? SharedArrayBuffer : null; // eslint-disable-line stdlib/require-globals, no-undef\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which repeatedly iterates over each element in an array-like object.\n*\n* @param {Collection} src - input value\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {integer} [options.dir=1] - iteration direction\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction circarray2iterator( src ) {\n\tvar thisArg;\n\tvar options;\n\tvar count;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\topts = {\n\t\t'iter': 1e308, // ~infinity\n\t\t'dir': 1       // left to right iteration\n\t};\n\tif ( arguments.length > 1 ) {\n\t\tif ( isObject( arguments[ 1 ] ) ) {\n\t\t\toptions = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\t\topts.iter = options.iter;\n\t\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'dir' ) ) {\n\t\t\t\topts.dir = options.dir;\n\t\t\t\tif ( options.dir !== 1 && options.dir !== -1 ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either `1` or `-1`. Option: `%s`.', 'dir', options.dir ) );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a function or an options object. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tif ( opts.dir === 1 ) {\n\t\t\ti = -1;\n\t\t\tsetReadOnly( iter, 'next', next1a );\n\t\t} else {\n\t\t\ti = src.length;\n\t\t\tsetReadOnly( iter, 'next', next1b );\n\t\t}\n\t} else if ( opts.dir === 1 ) {\n\t\ti = -1;\n\t\tsetReadOnly( iter, 'next', next2a );\n\t} else {\n\t\ti = src.length;\n\t\tsetReadOnly( iter, 'next', next2b );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn circarray2iterator( src, opts, fcn, thisArg );\n\t\t}\n\t\treturn circarray2iterator( src, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = circarray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which repeatedly iterates over the elements of an array-like object.\n*\n* @module @stdlib/array/to-circular-iterator\n*\n* @example\n* var circarray2iterator = require( '@stdlib/array/to-circular-iterator' );\n*\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in an array-like object.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = array2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction array2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn array2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn array2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = array2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from an array-like object.\n*\n* @module @stdlib/array/to-iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = array2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each element in an array-like object.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with iterating from left to right is when elements are pushed onto the beginning (end) of an array. In other words, iterating from left to right combined with `[].push()` is consistent with iterating from right to left combined with `[].unshift()`.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = array2iteratorRight( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction array2iteratorRight( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar len;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\tlen = src.length;\n\ti = len;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\tif ( FLG || i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\tif ( FLG || i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn array2iteratorRight( src, fcn, thisArg );\n\t\t}\n\t\treturn array2iteratorRight( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = array2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from an array-like object, iterating from right to left.\n*\n* @module @stdlib/array/to-iterator-right\n*\n* @example\n* var array2iteratorRight = require( '@stdlib/array/to-iterator-right' );\n*\n* var iter = array2iteratorRight( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar instanceOf = require( '@stdlib/assert/instance-of' );\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar CTORS = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( './../../int8' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\nvar Int16Array = require( './../../int16' );\nvar Uint16Array = require( './../../uint16' );\nvar Int32Array = require( './../../int32' );\nvar Uint32Array = require( './../../uint32' );\nvar Float32Array = require( './../../float32' );\nvar Float64Array = require( './../../float64' );\nvar Complex64Array = require( './../../complex64' );\nvar Complex128Array = require( './../../complex128' );\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ]\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( '@stdlib/assert/is-typed-array' );\nvar isComplexTypedArray = require( '@stdlib/assert/is-complex-typed-array' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar format = require( '@stdlib/string/format' );\nvar typeName = require( './type.js' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = toJSON( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction toJSON( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array. Value: `%s`.', arr ) );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of a typed array.\n*\n* @module @stdlib/array/to-json\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var toJSON = require( '@stdlib/array/to-json' );\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = toJSON( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in a sparse array-like object.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = sparsearray2iterator( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*/\nfunction sparsearray2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar len;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tlen = src.length;\n\t\ti += 1;\n\t\twhile ( i < len && get( src, i ) === void 0 ) {\n\t\t\ti += 1;\n\t\t}\n\t\tif ( i >= len ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar len;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tlen = src.length;\n\t\ti += 1;\n\t\twhile ( i < len && get( src, i ) === void 0 ) {\n\t\t\ti += 1;\n\t\t}\n\t\tif ( i >= len ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn sparsearray2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn sparsearray2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = sparsearray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from a sparse array-like value.\n*\n* @module @stdlib/array/to-sparse-iterator\n*\n* @example\n* var sparsearray2iterator = require( '@stdlib/array/to-sparse-iterator' );\n*\n* var iter = sparsearray2iterator( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each element in a sparse array-like object.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with iterating from left to right is when elements are pushed onto the beginning (end) of an array. In other words, iterating from left to right combined with `[].push()` is consistent with iterating from right to left combined with `[].unshift()`.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = sparsearray2iteratorRight( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 1\n*/\nfunction sparsearray2iteratorRight( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar len;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\tlen = src.length;\n\ti = len;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\twhile ( i >= 0 && get( src, i ) === void 0 ) {\n\t\t\ti -= 1;\n\t\t}\n\t\tif ( i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\twhile ( i >= 0 && get( src, i ) === void 0 ) {\n\t\t\ti -= 1;\n\t\t}\n\t\tif ( i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn sparsearray2iteratorRight( src, fcn, thisArg );\n\t\t}\n\t\treturn sparsearray2iteratorRight( src );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = sparsearray2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from a sparse array-like value, iterating from right to left.\n*\n* @module @stdlib/array/to-sparse-iterator-right\n*\n* @example\n* var sparsearray2iteratorRight = require( '@stdlib/array/to-sparse-iterator-right' );\n*\n* var iter = sparsearray2iteratorRight( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 1\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over elements in an array-like object according to specified stride parameters.\n*\n* @param {NonNegativeInteger} N - number of values to iterate\n* @param {Collection} src - input value\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @throws {TypeError} fifth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var values = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n*\n* var N = 4;\n* var stride = -2;\n* var offset = 6;\n*\n* var iter = stridedarray2iterator( N, values, stride, offset );\n*\n* var v = iter.next().value;\n* // returns 7\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction stridedarray2iterator( N, src, stride, offset ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar idx;\n\tvar get;\n\tvar i;\n\tif ( !isNonNegativeInteger( N ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t}\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( !isInteger( stride ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', stride ) );\n\t}\n\tif ( !isNonNegativeInteger( offset ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t}\n\tif ( arguments.length > 4 ) {\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tidx = offset;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = fcn.call( thisArg, get( src, idx ), idx, i, src );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = get( src, idx );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn stridedarray2iterator( N, src, stride, offset, fcn, thisArg ); // eslint-disable-line max-len\n\t\t}\n\t\treturn stridedarray2iterator( N, src, stride, offset );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = stridedarray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from a strided array-like value.\n*\n* @module @stdlib/array/to-strided-iterator\n*\n* @example\n* var stridedarray2iterator = require( '@stdlib/array/to-strided-iterator' );\n*\n* var values = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n*\n* var N = 4;\n* var stride = -2;\n* var offset = 6;\n*\n* var iter = stridedarray2iterator( N, values, stride, offset );\n*\n* var v = iter.next().value;\n* // returns 7\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in an array-like object view.\n*\n* @param {Collection} src - input value\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=src.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be either an integer (starting index) or a function\n* @throws {TypeError} third argument must be either an integer (ending index) or a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = arrayview2iterator( [ 1, 2, 3, 4 ], 1, 3 );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction arrayview2iterator( src ) {\n\tvar thisArg;\n\tvar begin;\n\tvar nargs;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar end;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 1 ) {\n\t\tbegin = 0;\n\t\tend = src.length;\n\t} else if ( nargs === 2 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 1 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t}\n\t\tend = src.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tthisArg = arguments[ 2 ];\n\t\t} else if ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = arguments[ 2 ];\n\t\t}\n\t} else { // nargs >= 4\n\t\tbegin = arguments[ 1 ];\n\t\tend = arguments[ 2 ];\n\t\tfcn = arguments[ 3 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 4 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an integer (starting index) or a callback function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (ending index) or a callback function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = src.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > src.length ) {\n\t\tend = src.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = src.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\ti = begin - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += 1;\n\t\tif ( FLG || i >= end ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, i-begin, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += 1;\n\t\tif ( FLG || i >= end ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn arrayview2iterator( src, begin, end, fcn, thisArg );\n\t\t}\n\t\treturn arrayview2iterator( src, begin, end );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayview2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from an array-like object view.\n*\n* @module @stdlib/array/to-view-iterator\n*\n* @example\n* var arrayview2iterator = require( '@stdlib/array/to-view-iterator' );\n*\n* var iter = arrayview2iterator( [ 1, 2, 3, 4 ], 1, 3 );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar iteratorSymbol = require( '@stdlib/symbol/iterator' );\nvar arraylike2object = require( './../../base/arraylike2object' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each element in an array-like object view.\n*\n* @param {Collection} src - input value\n* @param {integer} [begin=0] - starting **view** index (inclusive)\n* @param {integer} [end=src.length] - ending **view** index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be either an integer (starting index) or a function\n* @throws {TypeError} third argument must be either an integer (ending index) or a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = arrayview2iteratorRight( [ 1, 2, 3, 4 ], 1, 3 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction arrayview2iteratorRight( src ) {\n\tvar thisArg;\n\tvar begin;\n\tvar nargs;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar end;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 1 ) {\n\t\tbegin = 0;\n\t\tend = src.length;\n\t} else if ( nargs === 2 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 1 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t}\n\t\tend = src.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tthisArg = arguments[ 2 ];\n\t\t} else if ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = arguments[ 2 ];\n\t\t}\n\t} else { // nargs >= 4\n\t\tbegin = arguments[ 1 ];\n\t\tend = arguments[ 2 ];\n\t\tfcn = arguments[ 3 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 4 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an integer (starting vie windex) or a callback function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (ending view index) or a callback function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = src.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > src.length ) {\n\t\tend = src.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = src.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\ti = end;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti -= 1;\n\t\tif ( FLG || i < begin ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, end-i-1, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti -= 1;\n\t\tif ( FLG || i < begin ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn arrayview2iteratorRight( src, begin, end, fcn, thisArg );\n\t\t}\n\t\treturn arrayview2iteratorRight( src, begin, end );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayview2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator from an array-like object view, iterating from right to left.\n*\n* @module @stdlib/array/to-view-iterator-right\n*\n* @example\n* var arrayview2iteratorRight = require( '@stdlib/array/to-view-iterator-right' );\n*\n* var iter = arrayview2iteratorRight( [ 1, 2, 3, 4 ], 1, 3 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar ctors = require( './../../typed-ctors' );\nvar reinterpret128 = require( '@stdlib/strided/base/reinterpret-complex128' );\nvar reinterpret64 = require( '@stdlib/strided/base/reinterpret-complex64' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar Complex64Array = ctors( 'complex64' );\nvar Complex128Array = ctors( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Creates a typed array.\n*\n* @param {(NonNegativeInteger|ComplexArray|TypedArray|ArrayLikeObject|ArrayBuffer)} [arg] - a length, typed array, array-like object, or buffer\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {(ComplexArray|TypedArray)} typed array\n*\n* @example\n* var arr = typedarray();\n* // returns <Float64Array>\n*\n* @example\n* var arr = typedarray( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = typedarray( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = typedarray( [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 0.5, 0.5 ]\n*\n* @example\n* var arr = typedarray( [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 5, -3 ]\n*\n* @example\n* var arr1 = typedarray( [ 5, 3 ], 'int32' );\n* var arr2 = typedarray( arr1 );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var arr1 = typedarray( [ 5, 3 ], 'int32' );\n* var arr2 = typedarray( arr1, 'uint32' );\n* // returns <Uint32Array>[ 5, 3 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0, 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 8 );\n* // returns <Float64Array>[ 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 8, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = typedarray( buf, 8, 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = typedarray( buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 0, 0 ]\n*/\nfunction typedarray() {\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\tnargs -= 1;\n\t\tdtype = arguments[ nargs ];\n\t} else {\n\t\tdtype = 'float64';\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) {\n\t\targ = arguments[ 0 ];\n\n\t\t// Note: the following checks are not particularly robust, as `instanceof` will fail for cross-realm instances...\n\t\tif ( arg instanceof Complex64Array ) {\n\t\t\targ = reinterpret64( arg, 0 );\n\t\t} else if ( arg instanceof Complex128Array ) {\n\t\t\targ = reinterpret128( arg, 0 );\n\t\t}\n\t\treturn new ctor( arg );\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn new ctor( arguments[0], arguments[1] );\n\t}\n\treturn new ctor( arguments[0], arguments[1], arguments[2] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a typed array.\n*\n* @module @stdlib/array/typed\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr = typedarray();\n* // returns <Float64Array>\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr = typedarray( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr = typedarray( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr = typedarray( [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 0.5, 0.5 ]\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr = typedarray( [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 5, -3 ]\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr1 = typedarray( [ 5, 3 ], 'int32' );\n* var arr2 = typedarray( arr1 );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var arr1 = typedarray( [ 5, 3 ], 'int32' );\n* var arr2 = typedarray( arr1, 'uint32' );\n* // returns <Uint32Array>[ 5, 3 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0, 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 8 );\n* // returns <Float64Array>[ 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 8, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = typedarray( buf, 8, 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var typedarray = require( '@stdlib/array/typed' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = typedarray( buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 0, 0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns a complex typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'complex128' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128Array = require( './../../complex128' );\nvar Complex64Array = require( './../../complex64' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'complex128': Complex128Array,\n\t'complex64': Complex64Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Complex typed array constructors.\n*\n* @module @stdlib/array/typed-complex-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-complex-ctors' );\n*\n* var ctor = ctors( 'complex128' );\n* // returns <Function>\n*\n* ctor = ctors( 'float64' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar ctors = require( './../../typed-complex-ctors' );\n\n\n// MAIN //\n\n/**\n* Creates a complex number typed array.\n*\n* @param {(NonNegativeInteger|ComplexArray|ArrayLikeObject|ArrayBuffer)} [arg] - a length, typed array, array-like object, or buffer\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"complex128\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {ComplexArray} typed array\n*\n* @example\n* var arr = complexarray();\n* // returns <Complex128Array>\n*\n* @example\n* var arr = complexarray( 2 );\n* // returns <Complex128Array>\n*\n* @example\n* var arr = complexarray( 2, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var arr = complexarray( [ 0.5, 0.5 ] );\n* // returns <Complex128Array>\n*\n* @example\n* var arr = complexarray( [ 5.0, -3.0 ], 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var arr1 = complexarray( [ 5.0, 3.0 ], 'complex64' );\n* var arr2 = complexarray( arr1 );\n* // returns <Complex128Array>\n*\n* @example\n* var arr1 = complexarray( [ 5.0, 3.0 ], 'complex128' );\n* var arr2 = complexarray( arr1, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf );\n* // returns <Complex128Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 16 );\n* // returns <Complex128Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 16, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = complexarray( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = complexarray( buf, 16, 2, 'complex64' );\n* // returns <Complex64Array>\n*/\nfunction complexarray() {\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\n\tnargs = arguments.length;\n\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\tnargs -= 1;\n\t\tdtype = arguments[ nargs ];\n\t} else {\n\t\tdtype = 'complex128';\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) {\n\t\treturn new ctor( arguments[0] );\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn new ctor( arguments[0], arguments[1] );\n\t}\n\treturn new ctor( arguments[0], arguments[1], arguments[2] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = complexarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a complex number typed array.\n*\n* @module @stdlib/array/typed-complex\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr = complexarray();\n* // returns <Complex128Array>\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr = complexarray( 2 );\n* // returns <Complex128Array>\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr = complexarray( 2, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr = complexarray( [ 0.5, 0.5 ] );\n* // returns <Complex128Array>\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr = complexarray( [ 5.0, -3.0 ], 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr1 = complexarray( [ 5.0, 3.0 ], 'complex64' );\n* var arr2 = complexarray( arr1 );\n* // returns <Complex128Array>\n*\n* @example\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var arr1 = complexarray( [ 5.0, 3.0 ], 'complex128' );\n* var arr2 = complexarray( arr1, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf );\n* // returns <Complex128Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 16 );\n* // returns <Complex128Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 16, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = complexarray( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var complexarray = require( '@stdlib/array/typed-complex' );\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = complexarray( buf, 16, 2, 'complex64' );\n* // returns <Complex64Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of complex typed array data types.\n*\n* @returns {StringArray} list of complex typed array data types\n*\n* @example\n* var list = dtypes();\n* // returns [ 'complex64', 'complex128' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of complex typed array data types.\n*\n* @module @stdlib/array/typed-complex-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-complex-dtypes' );\n*\n* var list = dtypes();\n* // returns [ 'complex64', 'complex128' ]\n*/\n\n// MODULES //\n\nvar dtypes = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array data types.\n*\n* @returns {StringArray} list of typed array data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c', 'complex128', 'complex64' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array data types.\n*\n* @module @stdlib/array/typed-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c', 'complex128', 'complex64' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array floating-point data types.\n*\n* @returns {StringArray} list of typed array floating-point data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'complex64', 'complex128' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array floating-point data types.\n*\n* @module @stdlib/array/typed-float-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-float-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'complex64', 'complex128' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns an integer-valued typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'int32' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'int' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int16Array = require( './../../int16' );\nvar Int32Array = require( './../../int32' );\nvar Int8Array = require( './../../int8' );\nvar Uint16Array = require( './../../uint16' );\nvar Uint32Array = require( './../../uint32' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Integer-valued typed array constructors.\n*\n* @module @stdlib/array/typed-integer-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-integer-ctors' );\n*\n* var ctor = ctors( 'int32' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array integer data types.\n*\n* @returns {StringArray} list of typed array integer data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array integer data types.\n*\n* @module @stdlib/array/typed-integer-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-integer-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar ctors = require( './../../typed-ctors' );\n\n\n// MAIN //\n\n/**\n* Creates a typed array.\n*\n* @param {(NonNegativeInteger|TypedArray|ArrayLikeObject|ArrayBuffer)} [arg] - a length, typed array, array-like object, or buffer\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {TypedArray} typed array\n*\n* @example\n* var arr = realarray();\n* // returns <Float64Array>\n*\n* @example\n* var arr = realarray( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = realarray( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = realarray( [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 0.5, 0.5 ]\n*\n* @example\n* var arr = realarray( [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 5, -3 ]\n*\n* @example\n* var arr1 = realarray( [ 5, 3 ], 'int32' );\n* var arr2 = realarray( arr1 );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var arr1 = realarray( [ 5, 3 ], 'int32' );\n* var arr2 = realarray( arr1, 'uint32' );\n* // returns <Uint32Array>[ 5, 3 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0, 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 8 );\n* // returns <Float64Array>[ 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 8, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = realarray( buf, 8, 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = realarray( buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 0, 0 ]\n*/\nfunction realarray() {\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\n\tnargs = arguments.length;\n\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\tnargs -= 1;\n\t\tdtype = arguments[ nargs ];\n\t} else {\n\t\tdtype = 'float64';\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) {\n\t\treturn new ctor( arguments[0] );\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn new ctor( arguments[0], arguments[1] );\n\t}\n\treturn new ctor( arguments[0], arguments[1], arguments[2] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = realarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a typed array.\n*\n* @module @stdlib/array/typed-real\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr = realarray();\n* // returns <Float64Array>\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr = realarray( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr = realarray( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr = realarray( [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 0.5, 0.5 ]\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr = realarray( [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 5, -3 ]\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr1 = realarray( [ 5, 3 ], 'int32' );\n* var arr2 = realarray( arr1 );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var arr1 = realarray( [ 5, 3 ], 'int32' );\n* var arr2 = realarray( arr1, 'uint32' );\n* // returns <Uint32Array>[ 5, 3 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0, 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 8 );\n* // returns <Float64Array>[ 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 8, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = realarray( buf, 8, 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var realarray = require( '@stdlib/array/typed-real' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = realarray( buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 0, 0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns a typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\nvar Int16Array = require( './../../int16' );\nvar Int32Array = require( './../../int32' );\nvar Int8Array = require( './../../int8' );\nvar Uint16Array = require( './../../uint16' );\nvar Uint32Array = require( './../../uint32' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructors.\n*\n* @module @stdlib/array/typed-real-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-real-ctors' );\n*\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array data types.\n*\n* @returns {StringArray} list of typed array data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array data types.\n*\n* @module @stdlib/array/typed-real-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-real-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns a real-valued floating-point typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( './../../float64' );\nvar Float32Array = require( './../../float32' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Real-valued floating-point typed array constructors.\n*\n* @module @stdlib/array/typed-real-float-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-real-float-ctors' );\n*\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array real-valued floating-point data types.\n*\n* @returns {StringArray} list of typed array real-valued floating-point data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array real-valued floating-point data types.\n*\n* @module @stdlib/array/typed-real-float-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-real-float-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns a signed integer typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'int32' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'int' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int16Array = require( './../../int16' );\nvar Int32Array = require( './../../int32' );\nvar Int8Array = require( './../../int8' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Signed integer typed array constructors.\n*\n* @module @stdlib/array/typed-signed-integer-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-signed-integer-ctors' );\n*\n* var ctor = ctors( 'int32' );\n* // returns <Function>\n*\n* ctor = ctors( 'int' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array signed integer data types.\n*\n* @returns {StringArray} list of typed array signed integer data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'int16', 'int32', 'int8' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array signed integer data types.\n*\n* @module @stdlib/array/typed-signed-integer-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-signed-integer-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'int16', 'int32', 'int8' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar table = require( './ctors.js' );\n\n\n// MAIN //\n\n/**\n* Returns an unsigned integer typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'uint32' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'uint' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint16Array = require( './../../uint16' );\nvar Uint32Array = require( './../../uint32' );\nvar Uint8Array = require( './../../uint8' );\nvar Uint8ClampedArray = require( './../../uint8c' );\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Unsigned integer typed array constructors.\n*\n* @module @stdlib/array/typed-unsigned-integer-ctors\n*\n* @example\n* var ctors = require( '@stdlib/array/typed-unsigned-integer-ctors' );\n*\n* var ctor = ctors( 'uint32' );\n* // returns <Function>\n*\n* ctor = ctors( 'uint' );\n* // returns null\n*/\n\n// MODULES //\n\nvar ctors = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DTYPES = require( './dtypes.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array unsigned integer data types.\n*\n* @returns {StringArray} list of typed array unsigned integer data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of typed array unsigned integer data types.\n*\n* @module @stdlib/array/typed-unsigned-integer-dtypes\n*\n* @example\n* var dtypes = require( '@stdlib/array/typed-unsigned-integer-dtypes' );\n*\n* var list = dtypes();\n* // e.g., returns [ 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar ctors = require( './../../ctors' );\nvar gzeros = require( './../../base/zeros' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled array having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = zeros( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = zeros( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*/\nfunction zeros( length ) {\n\tvar dtype;\n\tvar ctor;\n\tif ( !isNonNegativeInteger( length ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', length ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdtype = arguments[ 1 ];\n\t} else {\n\t\tdtype = 'float64';\n\t}\n\tif ( dtype === 'generic' ) {\n\t\treturn gzeros( length );\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\treturn new ctor( length ); // WARNING: we assume that, apart from 'generic', the constructors for supported array data types are zero-filled by default\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a zero-filled array having a specified length.\n*\n* @module @stdlib/array/zeros\n*\n* @example\n* var zeros = require( '@stdlib/array/zeros' );\n*\n* var arr = zeros( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var zeros = require( '@stdlib/array/zeros' );\n*\n* var arr = zeros( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\nvar dtype = require( './../../dtype' );\nvar zeros = require( './../../zeros' );\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled array having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = zerosLike( [ 0.0, 0.0 ] );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var arr = zerosLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*/\nfunction zerosLike( x ) {\n\tvar dt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t}\n\treturn zeros( x.length, dt );\n}\n\n\n// EXPORTS //\n\nmodule.exports = zerosLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a zero-filled array having the same length and data type as a provided input array.\n*\n* @module @stdlib/array/zeros-like\n*\n* @example\n* var zerosLike = require( '@stdlib/array/zeros-like' );\n*\n* var arr = zerosLike( [ 0.0, 0.0 ] );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var zerosLike = require( '@stdlib/array/zeros-like' );\n*\n* var arr = zerosLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name base\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base}\n*/\nsetReadOnly( ns, 'base', require( './../base' ) );\n\n/**\n* @name ArrayBuffer\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/buffer}\n*/\nsetReadOnly( ns, 'ArrayBuffer', require( './../buffer' ) );\n\n/**\n* @name Complex64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/complex64}\n*/\nsetReadOnly( ns, 'Complex64Array', require( './../complex64' ) );\n\n/**\n* @name Complex128Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/complex128}\n*/\nsetReadOnly( ns, 'Complex128Array', require( './../complex128' ) );\n\n/**\n* @name convertArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/convert}\n*/\nsetReadOnly( ns, 'convertArray', require( './../convert' ) );\n\n/**\n* @name convertArraySame\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/convert-same}\n*/\nsetReadOnly( ns, 'convertArraySame', require( './../convert-same' ) );\n\n/**\n* @name arrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/ctors}\n*/\nsetReadOnly( ns, 'arrayCtors', require( './../ctors' ) );\n\n/**\n* @name DataView\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/dataview}\n*/\nsetReadOnly( ns, 'DataView', require( './../dataview' ) );\n\n/**\n* @name datespace\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/datespace}\n*/\nsetReadOnly( ns, 'datespace', require( './../datespace' ) );\n\n/**\n* @name arrayDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/dtype}\n*/\nsetReadOnly( ns, 'arrayDataType', require( './../dtype' ) );\n\n/**\n* @name arrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/dtypes}\n*/\nsetReadOnly( ns, 'arrayDataTypes', require( './../dtypes' ) );\n\n/**\n* @name filledarray\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/filled}\n*/\nsetReadOnly( ns, 'filledarray', require( './../filled' ) );\n\n/**\n* @name filledarrayBy\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/filled-by}\n*/\nsetReadOnly( ns, 'filledarrayBy', require( './../filled-by' ) );\n\n/**\n* @name Float32Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/float32}\n*/\nsetReadOnly( ns, 'Float32Array', require( './../float32' ) );\n\n/**\n* @name Float64Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/float64}\n*/\nsetReadOnly( ns, 'Float64Array', require( './../float64' ) );\n\n/**\n* @name iterator2array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/from-iterator}\n*/\nsetReadOnly( ns, 'iterator2array', require( './../from-iterator' ) );\n\n/**\n* @name afull\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/full}\n*/\nsetReadOnly( ns, 'afull', require( './../full' ) );\n\n/**\n* @name afullLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/full-like}\n*/\nsetReadOnly( ns, 'afullLike', require( './../full-like' ) );\n\n/**\n* @name incrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/incrspace}\n*/\nsetReadOnly( ns, 'incrspace', require( './../incrspace' ) );\n\n/**\n* @name Int8Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/int8}\n*/\nsetReadOnly( ns, 'Int8Array', require( './../int8' ) );\n\n/**\n* @name Int16Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/int16}\n*/\nsetReadOnly( ns, 'Int16Array', require( './../int16' ) );\n\n/**\n* @name Int32Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/int32}\n*/\nsetReadOnly( ns, 'Int32Array', require( './../int32' ) );\n\n/**\n* @name linspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/linspace}\n*/\nsetReadOnly( ns, 'linspace', require( './../linspace' ) );\n\n/**\n* @name logspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/logspace}\n*/\nsetReadOnly( ns, 'logspace', require( './../logspace' ) );\n\n/**\n* @name arrayMinDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/min-dtype}\n*/\nsetReadOnly( ns, 'arrayMinDataType', require( './../min-dtype' ) );\n\n/**\n* @name arrayNextDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/next-dtype}\n*/\nsetReadOnly( ns, 'arrayNextDataType', require( './../next-dtype' ) );\n\n/**\n* @name aones\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/ones}\n*/\nsetReadOnly( ns, 'aones', require( './../ones' ) );\n\n/**\n* @name aonesLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/ones-like}\n*/\nsetReadOnly( ns, 'aonesLike', require( './../ones-like' ) );\n\n/**\n* @name typedarraypool\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/pool}\n*/\nsetReadOnly( ns, 'typedarraypool', require( './../pool' ) );\n\n/**\n* @name arrayPromotionRules\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/promotion-rules}\n*/\nsetReadOnly( ns, 'arrayPromotionRules', require( './../promotion-rules' ) );\n\n/**\n* @name reviveTypedArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/reviver}\n*/\nsetReadOnly( ns, 'reviveTypedArray', require( './../reviver' ) );\n\n/**\n* @name arraySafeCasts\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/safe-casts}\n*/\nsetReadOnly( ns, 'arraySafeCasts', require( './../safe-casts' ) );\n\n/**\n* @name arraySameKindCasts\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/same-kind-casts}\n*/\nsetReadOnly( ns, 'arraySameKindCasts', require( './../same-kind-casts' ) );\n\n/**\n* @name arrayShape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/shape}\n*/\nsetReadOnly( ns, 'arrayShape', require( './../shape' ) );\n\n/**\n* @name SharedArrayBuffer\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/shared-buffer}\n*/\nsetReadOnly( ns, 'SharedArrayBuffer', require( './../shared-buffer' ) );\n\n/**\n* @name circarray2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-circular-iterator}\n*/\nsetReadOnly( ns, 'circarray2iterator', require( './../to-circular-iterator' ) );\n\n/**\n* @name array2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-iterator}\n*/\nsetReadOnly( ns, 'array2iterator', require( './../to-iterator' ) );\n\n/**\n* @name array2iteratorRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-iterator-right}\n*/\nsetReadOnly( ns, 'array2iteratorRight', require( './../to-iterator-right' ) );\n\n/**\n* @name typedarray2json\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-json}\n*/\nsetReadOnly( ns, 'typedarray2json', require( './../to-json' ) );\n\n/**\n* @name sparsearray2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-sparse-iterator}\n*/\nsetReadOnly( ns, 'sparsearray2iterator', require( './../to-sparse-iterator' ) );\n\n/**\n* @name sparsearray2iteratorRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-sparse-iterator-right}\n*/\nsetReadOnly( ns, 'sparsearray2iteratorRight', require( './../to-sparse-iterator-right' ) );\n\n/**\n* @name stridedarray2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-strided-iterator}\n*/\nsetReadOnly( ns, 'stridedarray2iterator', require( './../to-strided-iterator' ) );\n\n/**\n* @name arrayview2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-view-iterator}\n*/\nsetReadOnly( ns, 'arrayview2iterator', require( './../to-view-iterator' ) );\n\n/**\n* @name arrayview2iteratorRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-view-iterator-right}\n*/\nsetReadOnly( ns, 'arrayview2iteratorRight', require( './../to-view-iterator-right' ) );\n\n/**\n* @name typedarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed}\n*/\nsetReadOnly( ns, 'typedarray', require( './../typed' ) );\n\n/**\n* @name complexarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-complex}\n*/\nsetReadOnly( ns, 'complexarray', require( './../typed-complex' ) );\n\n/**\n* @name complexarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-complex-ctors}\n*/\nsetReadOnly( ns, 'complexarrayCtors', require( './../typed-complex-ctors' ) );\n\n/**\n* @name complexarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-complex-dtypes}\n*/\nsetReadOnly( ns, 'complexarrayDataTypes', require( './../typed-complex-dtypes' ) );\n\n/**\n* @name typedarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-ctors}\n*/\nsetReadOnly( ns, 'typedarrayCtors', require( './../typed-ctors' ) );\n\n/**\n* @name typedarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-dtypes}\n*/\nsetReadOnly( ns, 'typedarrayDataTypes', require( './../typed-dtypes' ) );\n\n/**\n* @name floatarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-float-ctors}\n*/\nsetReadOnly( ns, 'floatarrayCtors', require( './../typed-float-ctors' ) );\n\n/**\n* @name floatarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-float-dtypes}\n*/\nsetReadOnly( ns, 'floatarrayDataTypes', require( './../typed-float-dtypes' ) );\n\n/**\n* @name intarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-integer-ctors}\n*/\nsetReadOnly( ns, 'intarrayCtors', require( './../typed-integer-ctors' ) );\n\n/**\n* @name intarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-integer-dtypes}\n*/\nsetReadOnly( ns, 'intarrayDataTypes', require( './../typed-integer-dtypes' ) );\n\n/**\n* @name realarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real}\n*/\nsetReadOnly( ns, 'realarray', require( './../typed-real' ) );\n\n/**\n* @name realarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-ctors}\n*/\nsetReadOnly( ns, 'realarrayCtors', require( './../typed-real-ctors' ) );\n\n/**\n* @name realarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-dtypes}\n*/\nsetReadOnly( ns, 'realarrayDataTypes', require( './../typed-real-dtypes' ) );\n\n/**\n* @name realarrayFloatCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-float-ctors}\n*/\nsetReadOnly( ns, 'realarrayFloatCtors', require( './../typed-real-float-ctors' ) );\n\n/**\n* @name realarrayFloatDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-float-dtypes}\n*/\nsetReadOnly( ns, 'realarrayFloatDataTypes', require( './../typed-real-float-dtypes' ) );\n\n/**\n* @name intarraySignedCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-signed-integer-ctors}\n*/\nsetReadOnly( ns, 'intarraySignedCtors', require( './../typed-signed-integer-ctors' ) );\n\n/**\n* @name intarraySignedDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-signed-integer-dtypes}\n*/\nsetReadOnly( ns, 'intarraySignedDataTypes', require( './../typed-signed-integer-dtypes' ) );\n\n/**\n* @name intarrayUnsignedCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-unsigned-integer-ctors}\n*/\nsetReadOnly( ns, 'intarrayUnsignedCtors', require( './../typed-unsigned-integer-ctors' ) );\n\n/**\n* @name intarrayUnsignedDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-unsigned-integer-dtypes}\n*/\nsetReadOnly( ns, 'intarrayUnsignedDataTypes', require( './../typed-unsigned-integer-dtypes' ) );\n\n/**\n* @name Uint8Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint8}\n*/\nsetReadOnly( ns, 'Uint8Array', require( './../uint8' ) );\n\n/**\n* @name Uint8ClampedArray\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint8c}\n*/\nsetReadOnly( ns, 'Uint8ClampedArray', require( './../uint8c' ) );\n\n/**\n* @name Uint16Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint16}\n*/\nsetReadOnly( ns, 'Uint16Array', require( './../uint16' ) );\n\n/**\n* @name Uint32Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint32}\n*/\nsetReadOnly( ns, 'Uint32Array', require( './../uint32' ) );\n\n/**\n* @name azeros\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/zeros}\n*/\nsetReadOnly( ns, 'azeros', require( './../zeros' ) );\n\n/**\n* @name azerosLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/zeros-like}\n*/\nsetReadOnly( ns, 'azerosLike', require( './../zeros-like' ) );\n\n/**\n* @name constants\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/constants/array}\n*/\nsetReadOnly( ns, 'constants', require( '@stdlib/constants/array' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],"names":["getIndexed","x","idx","getAccessor","get","setIndexed","value","setAccessor","set","lib","bool","Boolean","data","accessors","getter","setter","arraylike2object","require$$0","obj","xbuf","out","len","i","length","push","indexed","arr","clbk","thisArg","call","ceil","x1","x2","increment","N","d","pow","a","b","filled","setReadOnly","ns","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","builtin","ArrayBuffer","polyfill","Error","Float32Array","isArrayLikeObject","isComplexLike","realf","imagf","format","from_iterator","it","v","z","next","done","TypeError","from_iterator_map","from_array","buf","j","isNonNegativeInteger","isPrimitive","isCollection","isArrayBuffer","isObject","isArray","isFunction","isEven","isInteger","hasIteratorSymbolSupport","ITERATOR_SYMBOL","require$$11","require$$12","setReadOnlyAccessor","require$$13","require$$14","Complex64","require$$15","require$$16","require$$17","require$$18","reinterpret64","require$$19","reinterpret128","require$$20","require$$21","fromIterator","require$$22","fromIteratorMap","require$$23","fromArray","require$$24","BYTES_PER_ELEMENT","HAS_ITERATOR_SYMBOL","isComplexArray","Complex64Array","constructor","name","_length","_buffer","isComplexArrayConstructor","isComplex64Array","isComplex128Array","byteOffset","nargs","arguments","this","RangeError","byteLength","src","tmp","flg","args","prototype","buffer","target","start","copyWithin","self","iter","FLG","entries","sbuf","Float64Array","real","imag","Complex128","Complex128Array","ctor2dtype","Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","isBuffer","constructorName","CTORS","DTYPES","NTYPES","table","float64","float32","generic","int16","int32","int8","uint16","uint32","uint8","uint8c","complex64","complex128","main","dtype","getType","ctors","gcopy","copy","isComplex64","isComplex128","isc64","ctor","obuf","t","convert","y","DataView","hasOwnProp","isString","floor","round","timestamp","rounders","validDate","type","Date","parse","toLowerCase","test","toString","stop","options","opts","end","fcn","indexOf","join","getTime","slice","gfill","iterLength","filledIterator","filledAccessors","arg","gfillBy","filledArray","filledArrayIterator","callback","aidx","isIteratorLike","iterator","afill","full","dt","isNumber","isnan","MAX_LENGTH","gen","inc","generic_real","endpoint","generic_complex","dt1","dt2","cmplx","isf32","re1","re2","im1","im2","re","im","dr","di","typed_real","typed_complex","isBoolean","validate_1","genreal","gencmplx","typedreal","typedcmplx","validate","defaults","err","accessors_complex","accessors_real","adtype","acccmplx","accreal","odt","o","isNegativeZero","PINF","NINF","FLOAT32_SMALLEST_SUBNORMAL","FLOAT32_MAX_SAFE_INTEGER","FLOAT32_MIN_SAFE_INTEGER","INT8_MIN","INT16_MIN","INT32_MIN","UINT8_MAX","UINT16_MAX","UINT32_MAX","minFloatDataType","objectKeys","NEXT_DTYPES","generateTable","dtypes","ntypes","Z128","Z64","highWaterMark","pool_1","n","isTypedArrayLike","ceil2","log2","min","createPool","isCmplx64Array","isCmplx128Array","factory_1","nbytes","pool","malloc","calloc","free","clear","getBytes","arraybuffer","pop","typedarray","p","PROMOTION_RULES","generateFullTable","dtype1","dtype2","TABLE","key","SAFE_CASTS","SAME_KIND_CASTS","recurse","shape","check","ndims","SharedArrayBuffer","size","iteratorSymbol","circarray2iterator","count","dir","next1a","next1b","next2a","next2b","factory","array2iterator","next1","next2","array2iteratorRight","instanceOf","ctorName","getPrototypeOf","isTypedArray","isComplexTypedArray","typeName","sparsearray2iterator","sparsearray2iteratorRight","stridedarray2iterator","stride","offset","arrayview2iterator","begin","finish","arrayview2iteratorRight","gzeros","zeros","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48","require$$49","require$$50","require$$51","require$$52","require$$53","require$$54","require$$55","require$$56","require$$57","require$$58","require$$59","require$$60","require$$61","require$$62","require$$63","require$$64","require$$65","require$$66","require$$67","require$$68","require$$69","require$$70"],"mappings":";;mvOAqCA,ICfIA,GCQJ,SAAiBC,EAAGC,GACnB,OAAOD,EAAGC,IDRPC,GEOJ,SAAiBF,EAAGC,GACnB,OAAOD,EAAEG,IAAKF,IFPXG,GGMJ,SAAiBJ,EAAGC,EAAKI,GACxBL,EAAGC,GAAQI,GHNRC,GDKJ,SAAiBN,EAAGC,EAAKI,GACxBL,EAAEO,IAAKF,EAAOJ,ICiCf,IIzBAO,GJYA,SAA2BR,GAC1B,IAAIS,EAAOC,QAASV,EAAEG,KAAOH,EAAEO,KAC/B,MAAO,CACNI,KAAQX,EACRY,UAAaH,EACbI,OAAU,EAAWX,GAAcH,GACnCe,OAAU,EAAWR,GAAcF,KKnCjCW,GAAmBC,GAyGvB,ICxFAR,GDyEA,SAAeR,GACd,IAAIiB,EAIJ,OADAA,EAAMF,GAAkBf,IACfY,UApEV,SAAoBZ,GACnB,IAAIkB,EACAC,EACAC,EACAjB,EACAkB,EAaJ,IAVAH,EAAOlB,EAAEW,KAGTR,EAAMH,EAAEa,OAGRO,EAAMF,EAAKI,OAGXH,EAAM,GACAE,EAAI,EAAGA,EAAID,EAAKC,IACrBF,EAAII,KAAMpB,EAAKe,EAAMG,IAEtB,OAAOF,EAgDCP,CAAWK,GAhCpB,SAAkBjB,GACjB,IAAImB,EACAC,EACAC,EAIJ,IAFAD,EAAMpB,EAAEsB,OACRH,EAAM,GACAE,EAAI,EAAGA,EAAID,EAAKC,IACrBF,EAAII,KAAMvB,EAAGqB,IAEd,OAAOF,EAyBAK,CAASxB,IErEjB,ICPAQ,GDRA,SAAiBH,EAAOe,GACvB,IAAIK,EACAJ,EAIJ,IADAI,EAAM,GACAJ,EAAI,EAAGA,EAAID,EAAKC,IACrBI,EAAIF,KAAMlB,GAEX,OAAOoB,GEKR,ICXAjB,GDJA,SAAmBY,EAAKM,EAAMC,GAC7B,IAAIF,EACAJ,EAIJ,IADAI,EAAM,GACAJ,EAAI,EAAGA,EAAID,EAAKC,IACrBI,EAAIF,KAAMG,EAAKE,KAAMD,EAASN,IAE/B,OAAOI,GEvBJI,GAAOb,EAoCX,ICnBAR,GDAA,SAAoBsB,EAAIC,EAAIC,GAC3B,IAAIP,EACAL,EACAC,EAGJ,IADAD,EAAMS,IAAQE,EAAGD,GAAOE,KACZ,EACX,MAAO,CAAEF,GAGV,IADAL,EAAM,CAAEK,GACFT,EAAI,EAAGA,EAAID,EAAKC,IACrBI,EAAIF,KAAMO,EAAME,EAAUX,GAE3B,OAAOI,GEOR,ICpBAjB,GDLA,SAAmBsB,EAAIC,EAAIX,GAC1B,IAAIK,EACAQ,EACAC,EACAb,EAEJ,GAAa,IAARD,EACJ,MAAO,GAQR,IAJAc,GAAMH,EAAGD,IADTG,EAAIb,EAAM,GAIVK,EAAM,CAAEK,GACFT,EAAI,EAAGA,EAAIY,EAAGZ,IACnBI,EAAIF,KAAMO,EAAMI,EAAEb,GAGnB,OADAI,EAAIF,KAAMQ,GACHN,GE/BJU,GAAMnB,EA0CV,ICzBAR,GDAA,SAAmB4B,EAAGC,EAAGjB,GACxB,IAAIK,EACAQ,EACAC,EACAb,EAEJ,GAAa,IAARD,EACJ,MAAO,GAQR,IAJAc,GAAMG,EAAED,IADRH,EAAIb,EAAM,GAIVK,EAAM,CAAEU,GAAK,GAAIC,IACXf,EAAI,EAAGA,EAAIY,EAAGZ,IACnBI,EAAIF,KAAMY,GAAK,GAAIC,EAAGF,EAAEb,IAGzB,OADAI,EAAIF,KAAMY,GAAK,GAAIE,IACZZ,GEpCJa,GAAStB,GAsBb,ICLAR,GDFA,SAAeY,GACd,OAAOkB,GAAQ,EAAKlB,IEcrB,ICbAZ,GDNA,SAAoBsB,EAAIC,GACvB,IAAIN,EACAL,EACAC,EAGJ,IADAD,EAAMW,EAAKD,IACC,EACX,MAAO,CAAEA,GAGV,IADAL,EAAM,CAAEK,GACFT,EAAI,EAAGA,EAAID,EAAKC,IACrBI,EAAIF,KAAMO,EAAKT,GAEhB,OAAOI,GExBJa,GAAStB,GAsBb,ICLAR,GDFA,SAAgBY,GACf,OAAOkB,GAAQ,EAAKlB,IEZrBmB,GAAAvB,EAUAwB,GAAA,GASAD,GAAAC,GAAA,mBAAAC,IASAF,GAAAC,GAAA,OAAAE,IASAH,GAAAC,GAAA,SAAAG,IASAJ,GAAAC,GAAA,WAAAI,IASAL,GAAAC,GAAA,YAAAK,IASAN,GAAAC,GAAA,WAAAM,IASAP,GAAAC,GAAA,WAAAO,IASAR,GAAAC,GAAA,OAAAQ,IASAT,GAAAC,GAAA,YAAAS,IASAV,GAAAC,GAAA,QAAAU,IAKA,IAAA1C,GAAAgC,GC/FA,ICDIW,GCbgC,mBAAhBC,YAA+BA,iBAAc,EDc7DC,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB4BQ,IASpBmC,GAEAE,GETR,ICDIF,GCbiC,mBAAjBI,aAAgCA,kBAAe,EDc/DF,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB6BQ,IASrBmC,GAEAE,GEvBJG,GAAoBxC,EACpByC,GAAgBhB,EAChBiB,GAAQhB,EACRiB,GAAQhB,EACRiB,GAAShB,EAsCb,IAAAiB,GA1BA,SAAuBC,GACtB,IAAI3C,EACA4C,EACAC,EAGJ,IADA7C,EAAM,KAEL4C,EAAID,EAAGG,QACAC,MAIP,GADAF,EAAID,EAAE1D,MACDmD,GAAmBQ,IAAOA,EAAE1C,QAAU,EAC1CH,EAAII,KAAMyC,EAAG,GAAKA,EAAG,QACf,CAAA,IAAKP,GAAeO,GAG1B,OAAO,IAAIG,UAAWP,GAAQ,kJAAmJI,IAFjL7C,EAAII,KAAMmC,GAAOM,GAAKL,GAAOK,IAK/B,OAAO7C,GCpCJqC,GAAoBxC,EACpByC,GAAgBhB,EAChBiB,GAAQhB,EACRiB,GAAQhB,EACRiB,GAAShB,EA2Cb,IAAAwB,GA7BA,SAA0BN,EAAIpC,EAAMC,GACnC,IAAIR,EACA4C,EACAC,EACA3C,EAIJ,IAFAF,EAAM,GACNE,GAAK,IAEJ0C,EAAID,EAAGG,QACAC,MAKP,GAFA7C,GAAK,EACL2C,EAAItC,EAAKE,KAAMD,EAASoC,EAAE1D,MAAOgB,GAC5BmC,GAAmBQ,IAAOA,EAAE1C,QAAU,EAC1CH,EAAII,KAAMyC,EAAG,GAAKA,EAAG,QACf,CAAA,IAAKP,GAAeO,GAG1B,OAAO,IAAIG,UAAWP,GAAQ,+IAAgJI,IAF9K7C,EAAII,KAAMmC,GAAOM,GAAKL,GAAOK,IAK/B,OAAO7C,GCzCJsC,GAAgBzC,EAChB0C,GAAQjB,EACRkB,GAAQjB,EAoCZ,IAAA2B,GAvBA,SAAoBC,EAAK7C,GACxB,IAAIL,EACA2C,EACA1C,EACAkD,EAIJ,IAFAnD,EAAMK,EAAIH,OACViD,EAAI,EACElD,EAAI,EAAGA,EAAID,EAAKC,IAAM,CAE3B,GADA0C,EAAItC,EAAKJ,IACHoC,GAAeM,GACpB,OAAO,KAERO,EAAKC,GAAMb,GAAOK,GAClBO,EAAKC,EAAE,GAAMZ,GAAOI,GACpBQ,GAAK,EAEN,OAAOD,GC9BRE,GAAAxD,EAAAyD,YACAjB,GAAAf,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAW,GAAAV,EACAgC,GAAA/B,EACAgC,GAAA/B,EACAgC,GAAA/B,EACAgC,GAAAC,EACA5C,GAAA6C,EACAC,GAAAC,EACA/B,GAAAgC,GACAC,GAAAC,EACA7B,GAAA8B,EACAhC,GAAAiC,EACAhC,GAAAiC,EACAC,GAAAC,EACAC,GAAAC,EACAjF,GAAAkF,GACAC,GAAAC,GACAC,GAAAC,GACAC,GAAAC,GAKAC,GAAA,EAAAjD,GAAAiD,kBACAC,GAAAxB,KAYA,SAAAyB,GAAArG,GACA,OACAA,aAAAsG,IAEA,iBAAAtG,GACA,OAAAA,IAEA,mBAAAA,EAAAuG,YAAAC,MACA,oBAAAxG,EAAAuG,YAAAC,OAEA,iBAAAxG,EAAAyG,SAGA,iBAAAzG,EAAA0G,QAYA,SAAAC,GAAA3G,GACA,OACAA,IAAAsG,IAGA,oBAAAtG,EAAAwG,KAWA,SAAAI,GAAA5G,GACA,MACA,iBAAAA,GACA,OAAAA,GACA,mBAAAA,EAAAuG,YAAAC,MACAxG,EAAAmG,oBAAAA,GAWA,SAAAU,GAAA7G,GACA,MACA,iBAAAA,GACA,OAAAA,GACA,oBAAAA,EAAAuG,YAAAC,MACAxG,EAAAmG,oBAAA,EAAAA,GA2EA,SAAAG,KACA,IAAAQ,EACAC,EACA9C,EACAlD,EAGA,GADAgG,EAAAC,UAAA/F,SACAgG,gBAAAX,IACA,OAAA,IAAAS,EACA,IAAAT,GAEA,IAAAS,EACA,IAAAT,GAAAU,UAAA,IAEA,IAAAD,EACA,IAAAT,GAAAU,UAAA,GAAAA,UAAA,IAEA,IAAAV,GAAAU,UAAA,GAAAA,UAAA,GAAAA,UAAA,IAGA,GAAA,IAAAD,EACA9C,EAAA,IAAAf,GAAA,QACA,GAAA,IAAA6D,EACA,GAAA5C,GAAA6C,UAAA,IACA/C,EAAA,IAAAf,GAAA,EAAA8D,UAAA,SACA,GAAA3C,GAAA2C,UAAA,IAKA,IAHAjG,GADAkD,EAAA+C,UAAA,IACA/F,SAGAuD,GAAAP,IAAAb,GAAAa,EAAA,KAEA,GAAA,QADAA,EAAAgC,GAAA,IAAA/C,GAAA,EAAAnC,GAAAkD,IACA,CAEA,IAAAS,GAAA3D,GACA,MAAA,IAAAmG,WAAA3D,GAAA,mHAAAxC,IAGAkD,EAAA,IAAAf,GAAA8D,UAAA,SAEA,CACA,GAAAJ,GAAA3C,GACAA,EAAAuB,GAAAvB,EAAA,QACA,GAAA4C,GAAA5C,GACAA,EAAAyB,GAAAzB,EAAA,QACA,IAAAS,GAAA3D,GACA,MAAA,IAAAmG,WAAA3D,GAAA,mIAAAxC,IAEAkD,EAAA,IAAAf,GAAAe,QAEA,GAAAK,GAAA0C,UAAA,IAAA,CAEA,IAAArC,IADAV,EAAA+C,UAAA,IACAG,WAAAhB,IACA,MAAA,IAAAe,WAAA3D,GAAA,2FAAA4C,GAAAlC,EAAAkD,aAEAlD,EAAA,IAAAf,GAAAe,OACA,CAAA,IAAAM,GAAAyC,UAAA,IAkBA,MAAA,IAAAlD,UAAAP,GAAA,qHAAAyD,UAAA,KAhBA,GADA/C,EAAA+C,UAAA,IACA,IAAAZ,GACA,MAAA,IAAAtC,UAAAP,GAAA,mJAAAU,IAEA,IAAAQ,GAAAR,EAAAY,KACA,MAAA,IAAAf,UAAAP,GAAA,qHAAAU,IAGA,GADAA,EAAAA,EAAAY,OACAJ,GAAAR,EAAAL,MACA,MAAA,IAAAE,UAAAP,GAAA,qHAAAU,IAGA,IADAA,EAAA4B,GAAA5B,cACAhB,MACA,MAAAgB,EAEAA,EAAA,IAAAf,GAAAe,OAIA,CAEA,IAAAK,GADAL,EAAA+C,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,yEAAAU,IAGA,IAAAE,GADA2C,EAAAE,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,4EAAAuD,IAEA,IAAAnC,GAAAmC,EAAAX,IACA,MAAA,IAAAe,WAAA3D,GAAA,yEAAA4C,GAAAW,IAEA,GAAA,IAAAC,EAAA,CAEA,GADAhG,EAAAkD,EAAAkD,WAAAL,GACAnC,GAAA5D,EAAAoF,IACA,MAAA,IAAAe,WAAA3D,GAAA,sGAAA4C,GAAApF,IAEAkD,EAAA,IAAAf,GAAAe,EAAA6C,OACA,CAEA,IAAA3C,GADApD,EAAAiG,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,uEAAAxC,IAEA,GAAAA,EAAAoF,GAAAlC,EAAAkD,WAAAL,EACA,MAAA,IAAAI,WAAA3D,GAAA,iJAAAxC,EAAAoF,KAEAlC,EAAA,IAAAf,GAAAe,EAAA6C,EAAA,EAAA/F,IAMA,OAHAmB,GAAA+E,KAAA,UAAAhD,GACA/B,GAAA+E,KAAA,UAAAhD,EAAAhD,OAAA,GAEAgG,KAgBA/E,GAAAoE,GAAA,oBAAAH,IAeAjE,GAAAoE,GAAA,OAAA,kBAmDApE,GAAAoE,GAAA,QAAA,SAAAc,GACA,IAAA9F,EACAyF,EACA1F,EACAP,EACAmD,EACAoD,EACAtG,EACAuG,EACA5D,EACA1C,EACAkD,EACA,IAAAO,GAAAwC,MACA,MAAA,IAAAnD,UAAA,6DAEA,IAAA6C,GAAAM,MACA,MAAA,IAAAnD,UAAA,6DAGA,IADAiD,EAAAC,UAAA/F,QACA,EAAA,CAEA,IAAAwD,GADApD,EAAA2F,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,qEAAAlC,IAEA0F,EAAA,IACAzF,EAAA0F,UAAA,IAGA,GAAAX,GAAAe,GAAA,CAEA,GADArG,EAAAqG,EAAAnG,OACAI,EAAA,CAIA,IAFA4C,GADAnD,EAAA,IAAAmG,KAAAlG,IACA2F,QACAxC,EAAA,EACAlD,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAEA,GADA0C,EAAArC,EAAAE,KAAAD,EAAA8F,EAAAtH,IAAAkB,GAAAA,GACAoC,GAAAM,GACAO,EAAAC,GAAAb,GAAAK,GACAO,EAAAC,EAAA,GAAAZ,GAAAI,OACA,CAAA,KAAAP,GAAAO,IAAAA,EAAAzC,QAAA,GAIA,MAAA,IAAA6C,UAAAP,GAAA,+IAAAG,IAHAO,EAAAC,GAAAR,EAAA,GACAO,EAAAC,EAAA,GAAAR,EAAA,GAIAQ,GAAA,EAEA,OAAApD,EAEA,OAAA,IAAAmG,KAAAG,GAEA,GAAA/C,GAAA+C,GAAA,CACA,GAAA/F,EAAA,CAOA,IAJAN,EAAAqG,EAAAnG,OACAoG,EAAA3G,GAAA0G,GAGApG,EAAA,EAAAA,EAAAD,EAAAC,IACA,IAAAoC,GAAAiE,EAAA7G,OAAA4G,EAAApG,IAAA,CACAsG,GAAA,EACA,MAIA,GAAAA,EAAA,CACA,IAAA5C,GAAA3D,GACA,MAAA,IAAAmG,WAAA3D,GAAA,gGAAAxC,IAIA,IADAkD,GADAnD,EAAA,IAAAmG,KAAAlG,EAAA,IACA2F,QACA1F,EAAA,EAAAA,EAAAD,EAAAC,IACAiD,EAAAjD,GAAAK,EAAAE,KAAAD,EAAA+F,EAAA7G,OAAA4G,EAAApG,GAAAA,GAEA,OAAAF,EAMA,IAFAmD,GADAnD,EAAA,IAAAmG,KAAAlG,IACA2F,QACAxC,EAAA,EACAlD,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAEA,GADA0C,EAAArC,EAAAE,KAAAD,EAAA+F,EAAA7G,OAAA4G,EAAApG,GAAAA,GACAoC,GAAAM,GACAO,EAAAC,GAAAb,GAAAK,GACAO,EAAAC,EAAA,GAAAZ,GAAAI,OACA,CAAA,KAAAP,GAAAO,IAAAA,EAAAzC,QAAA,GAIA,MAAA,IAAA6C,UAAAP,GAAA,+IAAAG,IAHAO,EAAAC,GAAAR,EAAA,GACAO,EAAAC,EAAA,GAAAR,EAAA,GAIAQ,GAAA,EAEA,OAAApD,EAEA,OAAA,IAAAmG,KAAAG,GAEA,GAAA7C,GAAA6C,IAAAhB,IAAA3B,GAAA2C,EAAAvC,KAAA,CAEA,GADAZ,EAAAmD,EAAAvC,OACAJ,GAAAR,EAAAL,MACA,MAAA,IAAAE,UAAAP,GAAA,6FAAA6D,IAOA,IAJAC,EADAhG,EACA0E,GAAA9B,EAAA5C,EAAAC,GAEAuE,GAAA5B,cAEAhB,MACA,MAAAoE,EAKA,IADApD,GADAnD,EAAA,IAAAmG,KADAlG,EAAAsG,EAAApG,OAAA,IAEAyF,QACA1F,EAAA,EAAAA,EAAAD,EAAAC,IACAiD,EAAAjD,GAAAqG,EAAArG,GAEA,OAAAF,EAEA,MAAA,IAAAgD,UAAAP,GAAA,6FAAA6D,OAqBAlF,GAAAoE,GAAA,MAAA,WACA,IAAAiB,EACAvG,EACA,IAAAyD,GAAAwC,MACA,MAAA,IAAAnD,UAAA,6DAEA,IAAA6C,GAAAM,MACA,MAAA,IAAAnD,UAAA,6DAGA,IADAyD,EAAA,GACAvG,EAAA,EAAAA,EAAAgG,UAAA/F,OAAAD,IACAuG,EAAArG,KAAA8F,UAAAhG,IAEA,OAAA,IAAAiG,KAAAM,MAiBAvC,GAAAsB,GAAAkB,UAAA,UAAA,WACA,OAAAP,KAAAP,QAAAe,UAiBAzC,GAAAsB,GAAAkB,UAAA,cAAA,WACA,OAAAP,KAAAP,QAAAS,cAiBAnC,GAAAsB,GAAAkB,UAAA,cAAA,WACA,OAAAP,KAAAP,QAAAI,cAkBA5E,GAAAoE,GAAAkB,UAAA,oBAAAlB,GAAAH,mBAuCAjE,GAAAoE,GAAAkB,UAAA,cAAA,SAAAE,EAAAC,GACA,IAAAtB,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAQA,OALA,IAAAkD,UAAA/F,OACAgG,KAAAP,QAAAkB,WAAA,EAAAF,EAAA,EAAAC,GAEAV,KAAAP,QAAAkB,WAAA,EAAAF,EAAA,EAAAC,EAAA,EAAAX,UAAA,IAEAC,QAsCA/E,GAAAoE,GAAAkB,UAAA,WAAA,WACA,IAAAC,EACAI,EACAC,EACA/G,EACAgH,EACA/G,EACAkD,EACA,IAAAmC,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAkBA,OAhBA+D,EAAAZ,KACAQ,EAAAR,KAAAP,QACA3F,EAAAkG,KAAAR,QAGAzF,GAAA,EACAkD,GAAA,EAIAhC,GADA4F,EAAA,GACA,QAcA,WACA,IAAAnE,EAEA,GADA3C,GAAA,EACA+G,GAAA/G,GAAAD,EACA,MAAA,CACA8C,MAAA,GAKA,OADAF,EAAA,IAAAwB,GAAAsC,EADAvD,GAAA,GACAuD,EAAAvD,EAAA,IACA,CACAlE,MAAA,CAAAgB,EAAA2C,GACAE,MAAA,MAzBA3B,GAAA4F,EAAA,UAoCA,SAAA9H,GAEA,GADA+H,GAAA,EACAf,UAAA/F,OACA,MAAA,CACAjB,MAAAA,EACA6D,MAAA,GAGA,MAAA,CACAA,MAAA,MA3CAgB,IACA3C,GAAA4F,EAAAjD,IAoDA,WACA,OAAAgD,EAAAG,aAnDAF,KA8FA5F,GAAAoE,GAAAkB,UAAA,OAAA,SAAA5H,GACA,IAAAqE,EACA,IAAAoC,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAEA,IAAAK,GAAAvE,GACA,MAAA,IAAAkE,UAAAP,GAAA,qEAAA3D,IAEA,KAAAA,GAAAqH,KAAAR,SAKA,OAFAxC,EAAAgD,KAAAP,QAEA,IAAAvB,GAAAlB,EADArE,GAAA,GACAqE,EAAArE,EAAA,OAiBAoF,GAAAsB,GAAAkB,UAAA,UAAA,WACA,OAAAP,KAAAR,WAkEAvE,GAAAoE,GAAAkB,UAAA,OAAA,SAAAxH,GAEA,IAAAiI,EACArI,EACAqE,EACAoD,EACAC,EACA1F,EACA8B,EACA1C,EACAkD,EACA,IAAAmC,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAGA,GADAG,EAAAgD,KAAAP,QACAM,UAAA/F,OAAA,GAEA,IAAAkD,GADAvE,EAAAoH,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,+EAAA3D,SAGAA,EAAA,EAEA,GAAAwD,GAAApD,GAAA,CACA,GAAAJ,GAAAqH,KAAAR,QACA,MAAA,IAAAS,WAAA3D,GAAA,kEAAA3D,IAKA,OAFAqE,EADArE,GAAA,GACAyD,GAAArD,QACAiE,EAAArE,EAAA,GAAA0D,GAAAtD,IAGA,GAAAqG,GAAArG,GAAA,CAEA,GAAAJ,GADAgC,EAAA5B,EAAAyG,SACAQ,KAAAR,QACA,MAAA,IAAAS,WAAA,0FAMA,GAJAe,EAAAjI,EAAA0G,QAGAxC,EAAAD,EAAA6C,WAAAlH,EAAAuG,GAEA8B,EAAAR,SAAAxD,EAAAwD,QAEAQ,EAAAnB,WAAA5C,GACA+D,EAAAnB,WAAAmB,EAAAd,WAAAjD,EAEA,CAGA,IADAmD,EAAA,IAAAnE,GAAA+E,EAAAhH,QACAD,EAAA,EAAAA,EAAAiH,EAAAhH,OAAAD,IACAqG,EAAArG,GAAAiH,EAAAjH,GAEAiH,EAAAZ,EAIA,IAFAzH,GAAA,EACAsE,EAAA,EACAlD,EAAA,EAAAA,EAAAY,EAAAZ,IACAiD,EAAArE,GAAAqI,EAAA/D,GACAD,EAAArE,EAAA,GAAAqI,EAAA/D,EAAA,GACAtE,GAAA,EACAsE,GAAA,MA7BA,CAiCA,IAAAG,GAAArE,GA2DA,MAAA,IAAA8D,UAAAP,GAAA,kIAAAvD,IAxDA,IADA4B,EAAA5B,EAAAiB,OACAD,EAAA,EAAAA,EAAAY,EAAAZ,IACA,IAAAoC,GAAApD,EAAAgB,IAAA,CACAsG,GAAA,EACA,MAIA,GAAAA,EAAA,CACA,IAAA5C,GAAA9C,GACA,MAAA,IAAAsF,WAAA3D,GAAA,6GAAA3B,IAEA,GAAAhC,EAAAgC,EAAA,EAAAqF,KAAAR,QACA,MAAA,IAAAS,WAAA,0FAMA,GAJAe,EAAAjI,EAGAkE,EAAAD,EAAA6C,WAAAlH,EAAAuG,GAEA8B,EAAAR,SAAAxD,EAAAwD,QAEAQ,EAAAnB,WAAA5C,GACA+D,EAAAnB,WAAAmB,EAAAd,WAAAjD,EAEA,CAGA,IADAmD,EAAA,IAAAnE,GAAAtB,GACAZ,EAAA,EAAAA,EAAAY,EAAAZ,IACAqG,EAAArG,GAAAiH,EAAAjH,GAEAiH,EAAAZ,EAKA,IAHAzH,GAAA,EACAgC,GAAA,EACAsC,EAAA,EACAlD,EAAA,EAAAA,EAAAY,EAAAZ,IACAiD,EAAArE,GAAAqI,EAAA/D,GACAD,EAAArE,EAAA,GAAAqI,EAAA/D,EAAA,GACAtE,GAAA,EACAsE,GAAA,EAEA,OAGA,GAAAtE,EAAAgC,EAAAqF,KAAAR,QACA,MAAA,IAAAS,WAAA,0FAGA,IADAtH,GAAA,EACAoB,EAAA,EAAAA,EAAAY,EAAAZ,IACA0C,EAAA1D,EAAAgB,GACAiD,EAAArE,GAAAyD,GAAAK,GACAO,EAAArE,EAAA,GAAA0D,GAAAI,GACA9D,GAAA,MAYA,ICl8BAO,GDk8BAmG,GE3/BA,ICDIxD,GCbiC,mBAAjBoF,aAAgCA,kBAAe,EDc/DlF,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB6BQ,IASrBmC,GAEAE,GEvBJG,GAAoBxC,EACpByC,GAAgBhB,EAChBmB,GAASlB,EACT8F,GAAO7F,EACP8F,GAAO7F,EAsCX,IAAAiB,GA1BA,SAAuBC,GACtB,IAAI3C,EACA4C,EACAC,EAGJ,IADA7C,EAAM,KAEL4C,EAAID,EAAGG,QACAC,MAIP,GADAF,EAAID,EAAE1D,MACDmD,GAAmBQ,IAAOA,EAAE1C,QAAU,EAC1CH,EAAII,KAAMyC,EAAG,GAAKA,EAAG,QACf,CAAA,IAAKP,GAAeO,GAG1B,OAAO,IAAIG,UAAWP,GAAQ,kJAAmJI,IAFjL7C,EAAII,KAAMiH,GAAMxE,GAAKyE,GAAMzE,IAK7B,OAAO7C,GCpCJqC,GAAoBxC,EACpByC,GAAgBhB,EAChBmB,GAASlB,EACT8F,GAAO7F,EACP8F,GAAO7F,EA2CX,IAAAwB,GA7BA,SAA0BN,EAAIpC,EAAMC,GACnC,IAAIR,EACA4C,EACAC,EACA3C,EAIJ,IAFAF,EAAM,GACNE,GAAK,IAEJ0C,EAAID,EAAGG,QACAC,MAKP,GAFA7C,GAAK,EACL2C,EAAItC,EAAKE,KAAMD,EAASoC,EAAE1D,MAAOgB,GAC5BmC,GAAmBQ,IAAOA,EAAE1C,QAAU,EAC1CH,EAAII,KAAMyC,EAAG,GAAKA,EAAG,QACf,CAAA,IAAKP,GAAeO,GAG1B,OAAO,IAAIG,UAAWP,GAAQ,+IAAgJI,IAF9K7C,EAAII,KAAMiH,GAAMxE,GAAKyE,GAAMzE,IAK7B,OAAO7C,GCzCJsC,GAAgBzC,EAChBwH,GAAO/F,EACPgG,GAAO/F,EAoCX,IAAA2B,GAvBA,SAAoBC,EAAK7C,GACxB,IAAIL,EACA2C,EACA1C,EACAkD,EAIJ,IAFAnD,EAAMK,EAAIH,OACViD,EAAI,EACElD,EAAI,EAAGA,EAAID,EAAKC,IAAM,CAE3B,GADA0C,EAAItC,EAAKJ,IACHoC,GAAeM,GACpB,OAAO,KAERO,EAAKC,GAAMiE,GAAMzE,GACjBO,EAAKC,EAAE,GAAMkE,GAAM1E,GACnBQ,GAAK,EAEN,OAAOD,GC9BRE,GAAAxD,EAAAyD,YACAjB,GAAAf,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAiC,GAAAhC,EACAW,GAAAV,EACAgC,GAAA/B,EACAgC,GAAA/B,EACAgC,GAAA/B,EACAgC,GAAAC,EACA5C,GAAA6C,EACAC,GAAAC,EACAiD,GAAAhD,GACAmD,GAAAjD,EACA+C,GAAA9C,EACA+C,GAAA9C,EACAE,GAAAD,EACAG,GAAAD,EACA/E,GAAAiF,GACApC,GAAAqC,EACAC,GAAAC,GACAC,GAAAC,GACAC,GAAAC,GAKAC,GAAA,EAAA+B,GAAA/B,kBACAC,GAAAxB,KAYA,SAAAyB,GAAArG,GACA,OACAA,aAAAsI,IAEA,iBAAAtI,GACA,OAAAA,IAEA,mBAAAA,EAAAuG,YAAAC,MACA,oBAAAxG,EAAAuG,YAAAC,OAEA,iBAAAxG,EAAAyG,SAGA,iBAAAzG,EAAA0G,QAYA,SAAAC,GAAA3G,GACA,OACAA,IAAAsI,IAGA,mBAAAtI,EAAAwG,KAWA,SAAAI,GAAA5G,GACA,MACA,iBAAAA,GACA,OAAAA,GACA,mBAAAA,EAAAuG,YAAAC,MACAxG,EAAAmG,oBAAAA,GAAA,EAWA,SAAAU,GAAA7G,GACA,MACA,iBAAAA,GACA,OAAAA,GACA,oBAAAA,EAAAuG,YAAAC,MACAxG,EAAAmG,oBAAAA,GA2EA,SAAAmC,KACA,IAAAxB,EACAC,EACA9C,EACAlD,EAGA,GADAgG,EAAAC,UAAA/F,SACAgG,gBAAAqB,IACA,OAAA,IAAAvB,EACA,IAAAuB,GAEA,IAAAvB,EACA,IAAAuB,GAAAtB,UAAA,IAEA,IAAAD,EACA,IAAAuB,GAAAtB,UAAA,GAAAA,UAAA,IAEA,IAAAsB,GAAAtB,UAAA,GAAAA,UAAA,GAAAA,UAAA,IAGA,GAAA,IAAAD,EACA9C,EAAA,IAAAiE,GAAA,QACA,GAAA,IAAAnB,EACA,GAAA5C,GAAA6C,UAAA,IACA/C,EAAA,IAAAiE,GAAA,EAAAlB,UAAA,SACA,GAAA3C,GAAA2C,UAAA,IAKA,IAHAjG,GADAkD,EAAA+C,UAAA,IACA/F,SAGAuD,GAAAP,IAAAb,GAAAa,EAAA,KAEA,GAAA,QADAA,EAAAgC,GAAA,IAAAiC,GAAA,EAAAnH,GAAAkD,IACA,CAEA,IAAAS,GAAA3D,GACA,MAAA,IAAAmG,WAAA3D,GAAA,mHAAAxC,IAGAkD,EAAA,IAAAiE,GAAAlB,UAAA,SAEA,CACA,GAAAJ,GAAA3C,GACAA,EAAAuB,GAAAvB,EAAA,QACA,GAAA4C,GAAA5C,GACAA,EAAAyB,GAAAzB,EAAA,QACA,IAAAS,GAAA3D,GACA,MAAA,IAAAmG,WAAA3D,GAAA,mIAAAxC,IAEAkD,EAAA,IAAAiE,GAAAjE,QAEA,GAAAK,GAAA0C,UAAA,IAAA,CAEA,IAAArC,IADAV,EAAA+C,UAAA,IACAG,WAAAhB,IACA,MAAA,IAAAe,WAAA3D,GAAA,2FAAA4C,GAAAlC,EAAAkD,aAEAlD,EAAA,IAAAiE,GAAAjE,OACA,CAAA,IAAAM,GAAAyC,UAAA,IAkBA,MAAA,IAAAlD,UAAAP,GAAA,qHAAAyD,UAAA,KAhBA,GADA/C,EAAA+C,UAAA,IACA,IAAAZ,GACA,MAAA,IAAAtC,UAAAP,GAAA,mJAAAU,IAEA,IAAAQ,GAAAR,EAAAY,KACA,MAAA,IAAAf,UAAAP,GAAA,qHAAAU,IAGA,GADAA,EAAAA,EAAAY,OACAJ,GAAAR,EAAAL,MACA,MAAA,IAAAE,UAAAP,GAAA,qHAAAU,IAGA,IADAA,EAAA4B,GAAA5B,cACAhB,MACA,MAAAgB,EAEAA,EAAA,IAAAiE,GAAAjE,OAIA,CAEA,IAAAK,GADAL,EAAA+C,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,yEAAAU,IAGA,IAAAE,GADA2C,EAAAE,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,4EAAAuD,IAEA,IAAAnC,GAAAmC,EAAAX,IACA,MAAA,IAAAe,WAAA3D,GAAA,yEAAA4C,GAAAW,IAEA,GAAA,IAAAC,EAAA,CAEA,GADAhG,EAAAkD,EAAAkD,WAAAL,GACAnC,GAAA5D,EAAAoF,IACA,MAAA,IAAAe,WAAA3D,GAAA,sGAAA4C,GAAApF,IAEAkD,EAAA,IAAAiE,GAAAjE,EAAA6C,OACA,CAEA,IAAA3C,GADApD,EAAAiG,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,uEAAAxC,IAEA,GAAAA,EAAAoF,GAAAlC,EAAAkD,WAAAL,EACA,MAAA,IAAAI,WAAA3D,GAAA,iJAAAxC,EAAAoF,KAEAlC,EAAA,IAAAiE,GAAAjE,EAAA6C,EAAA,EAAA/F,IAMA,OAHAmB,GAAA+E,KAAA,UAAAhD,GACA/B,GAAA+E,KAAA,UAAAhD,EAAAhD,OAAA,GAEAgG,KAgBA/E,GAAAoG,GAAA,oBAAAnC,IAeAjE,GAAAoG,GAAA,OAAA,mBAmDApG,GAAAoG,GAAA,QAAA,SAAAlB,GACA,IAAA9F,EACAyF,EACA1F,EACAP,EACAmD,EACAoD,EACAtG,EACAuG,EACA5D,EACA1C,EACAkD,EACA,IAAAO,GAAAwC,MACA,MAAA,IAAAnD,UAAA,6DAEA,IAAA6C,GAAAM,MACA,MAAA,IAAAnD,UAAA,6DAGA,IADAiD,EAAAC,UAAA/F,QACA,EAAA,CAEA,IAAAwD,GADApD,EAAA2F,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,qEAAAlC,IAEA0F,EAAA,IACAzF,EAAA0F,UAAA,IAGA,GAAAX,GAAAe,GAAA,CAEA,GADArG,EAAAqG,EAAAnG,OACAI,EAAA,CAIA,IAFA4C,GADAnD,EAAA,IAAAmG,KAAAlG,IACA2F,QACAxC,EAAA,EACAlD,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAEA,GADA0C,EAAArC,EAAAE,KAAAD,EAAA8F,EAAAtH,IAAAkB,GAAAA,GACAoC,GAAAM,GACAO,EAAAC,GAAAiE,GAAAzE,GACAO,EAAAC,EAAA,GAAAkE,GAAA1E,OACA,CAAA,KAAAP,GAAAO,IAAAA,EAAAzC,QAAA,GAIA,MAAA,IAAA6C,UAAAP,GAAA,+IAAAG,IAHAO,EAAAC,GAAAR,EAAA,GACAO,EAAAC,EAAA,GAAAR,EAAA,GAIAQ,GAAA,EAEA,OAAApD,EAEA,OAAA,IAAAmG,KAAAG,GAEA,GAAA/C,GAAA+C,GAAA,CACA,GAAA/F,EAAA,CAOA,IAJAN,EAAAqG,EAAAnG,OACAoG,EAAA3G,GAAA0G,GAGApG,EAAA,EAAAA,EAAAD,EAAAC,IACA,IAAAoC,GAAAiE,EAAA7G,OAAA4G,EAAApG,IAAA,CACAsG,GAAA,EACA,MAIA,GAAAA,EAAA,CACA,IAAA5C,GAAA3D,GACA,MAAA,IAAAmG,WAAA3D,GAAA,gGAAAxC,IAIA,IADAkD,GADAnD,EAAA,IAAAmG,KAAAlG,EAAA,IACA2F,QACA1F,EAAA,EAAAA,EAAAD,EAAAC,IACAiD,EAAAjD,GAAAK,EAAAE,KAAAD,EAAA+F,EAAA7G,OAAA4G,EAAApG,GAAAA,GAEA,OAAAF,EAMA,IAFAmD,GADAnD,EAAA,IAAAmG,KAAAlG,IACA2F,QACAxC,EAAA,EACAlD,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAEA,GADA0C,EAAArC,EAAAE,KAAAD,EAAA+F,EAAA7G,OAAA4G,EAAApG,GAAAA,GACAoC,GAAAM,GACAO,EAAAC,GAAAiE,GAAAzE,GACAO,EAAAC,EAAA,GAAAkE,GAAA1E,OACA,CAAA,KAAAP,GAAAO,IAAAA,EAAAzC,QAAA,GAIA,MAAA,IAAA6C,UAAAP,GAAA,+IAAAG,IAHAO,EAAAC,GAAAR,EAAA,GACAO,EAAAC,EAAA,GAAAR,EAAA,GAIAQ,GAAA,EAEA,OAAApD,EAEA,OAAA,IAAAmG,KAAAG,GAEA,GAAA7C,GAAA6C,IAAAhB,IAAA3B,GAAA2C,EAAAvC,KAAA,CAEA,GADAZ,EAAAmD,EAAAvC,OACAJ,GAAAR,EAAAL,MACA,MAAA,IAAAE,UAAAP,GAAA,6FAAA6D,IAOA,IAJAC,EADAhG,EACA0E,GAAA9B,EAAA5C,EAAAC,GAEAuE,GAAA5B,cAEAhB,MACA,MAAAoE,EAKA,IADApD,GADAnD,EAAA,IAAAmG,KADAlG,EAAAsG,EAAApG,OAAA,IAEAyF,QACA1F,EAAA,EAAAA,EAAAD,EAAAC,IACAiD,EAAAjD,GAAAqG,EAAArG,GAEA,OAAAF,EAEA,MAAA,IAAAgD,UAAAP,GAAA,6FAAA6D,OAqBAlF,GAAAoG,GAAA,MAAA,WACA,IAAAf,EACAvG,EACA,IAAAyD,GAAAwC,MACA,MAAA,IAAAnD,UAAA,6DAEA,IAAA6C,GAAAM,MACA,MAAA,IAAAnD,UAAA,6DAGA,IADAyD,EAAA,GACAvG,EAAA,EAAAA,EAAAgG,UAAA/F,OAAAD,IACAuG,EAAArG,KAAA8F,UAAAhG,IAEA,OAAA,IAAAiG,KAAAM,MAiBAvC,GAAAsD,GAAAd,UAAA,UAAA,WACA,OAAAP,KAAAP,QAAAe,UAiBAzC,GAAAsD,GAAAd,UAAA,cAAA,WACA,OAAAP,KAAAP,QAAAS,cAiBAnC,GAAAsD,GAAAd,UAAA,cAAA,WACA,OAAAP,KAAAP,QAAAI,cAkBA5E,GAAAoG,GAAAd,UAAA,oBAAAc,GAAAnC,mBAuCAjE,GAAAoG,GAAAd,UAAA,cAAA,SAAAE,EAAAC,GACA,IAAAtB,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAQA,OALA,IAAAkD,UAAA/F,OACAgG,KAAAP,QAAAkB,WAAA,EAAAF,EAAA,EAAAC,GAEAV,KAAAP,QAAAkB,WAAA,EAAAF,EAAA,EAAAC,EAAA,EAAAX,UAAA,IAEAC,QAsCA/E,GAAAoG,GAAAd,UAAA,WAAA,WACA,IAAAC,EACAI,EACAC,EACA/G,EACAgH,EACA/G,EACAkD,EACA,IAAAmC,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAkBA,OAhBA+D,EAAAZ,KACAQ,EAAAR,KAAAP,QACA3F,EAAAkG,KAAAR,QAGAzF,GAAA,EACAkD,GAAA,EAIAhC,GADA4F,EAAA,GACA,QAcA,WACA,IAAAnE,EAEA,GADA3C,GAAA,EACA+G,GAAA/G,GAAAD,EACA,MAAA,CACA8C,MAAA,GAKA,OADAF,EAAA,IAAA0E,GAAAZ,EADAvD,GAAA,GACAuD,EAAAvD,EAAA,IACA,CACAlE,MAAA,CAAAgB,EAAA2C,GACAE,MAAA,MAzBA3B,GAAA4F,EAAA,UAoCA,SAAA9H,GAEA,GADA+H,GAAA,EACAf,UAAA/F,OACA,MAAA,CACAjB,MAAAA,EACA6D,MAAA,GAGA,MAAA,CACAA,MAAA,MA3CAgB,IACA3C,GAAA4F,EAAAjD,IAoDA,WACA,OAAAgD,EAAAG,aAnDAF,KA8FA5F,GAAAoG,GAAAd,UAAA,OAAA,SAAA5H,GACA,IAAAqE,EACA,IAAAoC,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAEA,IAAAK,GAAAvE,GACA,MAAA,IAAAkE,UAAAP,GAAA,qEAAA3D,IAEA,KAAAA,GAAAqH,KAAAR,SAKA,OAFAxC,EAAAgD,KAAAP,QAEA,IAAA2B,GAAApE,EADArE,GAAA,GACAqE,EAAArE,EAAA,OAiBAoF,GAAAsD,GAAAd,UAAA,UAAA,WACA,OAAAP,KAAAR,WAkEAvE,GAAAoG,GAAAd,UAAA,OAAA,SAAAxH,GAEA,IAAAiI,EACArI,EACAqE,EACAoD,EACAC,EACA1F,EACA8B,EACA1C,EACAkD,EACA,IAAAmC,GAAAY,MACA,MAAA,IAAAnD,UAAA,6DAGA,GADAG,EAAAgD,KAAAP,QACAM,UAAA/F,OAAA,GAEA,IAAAkD,GADAvE,EAAAoH,UAAA,IAEA,MAAA,IAAAlD,UAAAP,GAAA,+EAAA3D,SAGAA,EAAA,EAEA,GAAAwD,GAAApD,GAAA,CACA,GAAAJ,GAAAqH,KAAAR,QACA,MAAA,IAAAS,WAAA3D,GAAA,kEAAA3D,IAKA,OAFAqE,EADArE,GAAA,GACAuI,GAAAnI,QACAiE,EAAArE,EAAA,GAAAwI,GAAApI,IAGA,GAAAqG,GAAArG,GAAA,CAEA,GAAAJ,GADAgC,EAAA5B,EAAAyG,SACAQ,KAAAR,QACA,MAAA,IAAAS,WAAA,0FAMA,GAJAe,EAAAjI,EAAA0G,QAGAxC,EAAAD,EAAA6C,WAAAlH,EAAAuG,GAEA8B,EAAAR,SAAAxD,EAAAwD,QAEAQ,EAAAnB,WAAA5C,GACA+D,EAAAnB,WAAAmB,EAAAd,WAAAjD,EAEA,CAGA,IADAmD,EAAA,IAAAa,GAAAD,EAAAhH,QACAD,EAAA,EAAAA,EAAAiH,EAAAhH,OAAAD,IACAqG,EAAArG,GAAAiH,EAAAjH,GAEAiH,EAAAZ,EAIA,IAFAzH,GAAA,EACAsE,EAAA,EACAlD,EAAA,EAAAA,EAAAY,EAAAZ,IACAiD,EAAArE,GAAAqI,EAAA/D,GACAD,EAAArE,EAAA,GAAAqI,EAAA/D,EAAA,GACAtE,GAAA,EACAsE,GAAA,MA7BA,CAiCA,IAAAG,GAAArE,GA2DA,MAAA,IAAA8D,UAAAP,GAAA,kIAAAvD,IAxDA,IADA4B,EAAA5B,EAAAiB,OACAD,EAAA,EAAAA,EAAAY,EAAAZ,IACA,IAAAoC,GAAApD,EAAAgB,IAAA,CACAsG,GAAA,EACA,MAIA,GAAAA,EAAA,CACA,IAAA5C,GAAA9C,GACA,MAAA,IAAAsF,WAAA3D,GAAA,6GAAA3B,IAEA,GAAAhC,EAAAgC,EAAA,EAAAqF,KAAAR,QACA,MAAA,IAAAS,WAAA,0FAMA,GAJAe,EAAAjI,EAGAkE,EAAAD,EAAA6C,WAAAlH,EAAAuG,GAEA8B,EAAAR,SAAAxD,EAAAwD,QAEAQ,EAAAnB,WAAA5C,GACA+D,EAAAnB,WAAAmB,EAAAd,WAAAjD,EAEA,CAGA,IADAmD,EAAA,IAAAa,GAAAtG,GACAZ,EAAA,EAAAA,EAAAY,EAAAZ,IACAqG,EAAArG,GAAAiH,EAAAjH,GAEAiH,EAAAZ,EAKA,IAHAzH,GAAA,EACAgC,GAAA,EACAsC,EAAA,EACAlD,EAAA,EAAAA,EAAAY,EAAAZ,IACAiD,EAAArE,GAAAqI,EAAA/D,GACAD,EAAArE,EAAA,GAAAqI,EAAA/D,EAAA,GACAtE,GAAA,EACAsE,GAAA,EAEA,OAGA,GAAAtE,EAAAgC,EAAAqF,KAAAR,QACA,MAAA,IAAAS,WAAA,0FAGA,IADAtH,GAAA,EACAoB,EAAA,EAAAA,EAAAY,EAAAZ,IACA0C,EAAA1D,EAAAgB,GACAiD,EAAArE,GAAAuI,GAAAzE,GACAO,EAAArE,EAAA,GAAAwI,GAAA1E,GACA9D,GAAA,MAYA,ICl8BAO,GDk8BAmI,GEt/BAC,GAlBkB,CACjBrF,aAAgB,UAChBgF,aAAgB,UAChBM,MAAS,UACTC,WAAc,QACdC,WAAc,QACdC,UAAa,OACbC,YAAe,SACfC,YAAe,SACfC,WAAc,QACdC,kBAAqB,SACrBzC,eAAkB,YAClBgC,gBAAmB,cCCpB,ICDIxF,GCbgC,mBAAhB+F,YAA+BA,iBAAc,EDc7D7F,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB4BQ,IASpBmC,GAEAE,GETR,ICDIF,GCb+B,mBAAf4F,WAA8BA,gBAAa,EDc3D1F,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB2BQ,IASnBmC,GAEAE,GETR,ICDIF,GCbgC,mBAAhB8F,YAA+BA,iBAAc,EDc7D5F,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB4BQ,IASpBmC,GAEAE,GETR,ICDIF,GCb+B,mBAAf2F,WAA8BA,gBAAa,EDc3DzF,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB2BQ,IASnBmC,GAEAE,GETR,ICDIF,GCb+B,mBAAfgG,WAA8BA,gBAAa,EDc3D9F,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB2BQ,IASnBmC,GAEAE,GETR,ICDIF,GCbsC,mBAAtBiG,kBAAqCA,uBAAoB,EDczE/F,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjBkCQ,IAS1BmC,GAEAE,GETR,ICDIF,GCb8B,mBAAd6F,UAA6BA,eAAY,EDczD3F,GDPJ,WACC,MAAM,IAAIC,MAAO,oBCqBlB9C,GAjB0BQ,IASlBmC,GAEAE,GEvBJgG,GAAWrI,EACX6D,GAAUpC,EACV6G,GAAkB5G,EAClBkG,GAAajG,GACb4G,GCYQ,CAhBOvI,GACAyB,GAEFE,GADCD,GAGDG,GADCD,GAIFI,GAFCF,GACOC,GAEHE,GACCC,IDLlBsG,GEJS,CACZ,UACA,UACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,YACA,cFFGC,GAASD,GAAOlI,OAsCpB,IGtBAd,GHEA,SAAgBH,GACf,IAAIgB,EACJ,GAAKwD,GAASxE,GACb,MAAO,UAER,GAAKgJ,GAAUhJ,GACd,OAAO,KAER,IAAMgB,EAAI,EAAGA,EAAIoI,GAAQpI,IACxB,GAAKhB,aAAiBkJ,GAAOlI,GAC5B,OAAOmI,GAAQnI,GAIjB,OAAOuH,GAAYU,GAAiBjJ,KAAa,MI1C9CqJ,GCgBQ,CACXC,QAjBkB3I,GAkBlB4I,QAjBkBnH,GAkBlBoH,QAAWhB,MACXiB,MAlBgBpH,GAmBhBqH,MAlBgBpH,GAmBhBqH,KAlBepH,GAmBfqH,OAlBiBpH,GAmBjBqH,OAlBiBpH,GAmBjBqH,MAlBgBpH,GAmBhBqH,OAlBuBpH,GAmBvBqH,UAlBoBpH,GAmBpBqH,WAlBqBpH,IDgBtB,IAAAqH,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfR0D,GAAe1D,EACfyJ,GAAUhI,GACViI,GAAQhI,GACRqD,GAAiBpD,EACjBkD,GAAgBjD,EAChBgB,GAASf,EACT8H,GAAQ7H,EACR8H,GAAO7H,GAoBX,SAAS8H,GAAaL,GACrB,MAAmB,cAAVA,EAkBV,SAASM,GAAcN,GACtB,MAAmB,eAAVA,EA6FV,IAAAD,GAxEA,SAAkBvK,EAAGwK,GACpB,IAAIO,EACAC,EACA9J,EACA+J,EACA9J,EACAC,EACA8J,EAEJ,IAAMxG,GAAc1E,GACnB,MAAM,IAAImE,UAAWP,GAAQ,8EAA+E5D,IAG7G,GAAe,YAAVwK,EACJ,OAAOI,GAAM5K,GAGd,GAAc,QADdgL,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,uFAAwF4G,IAatH,OAVApJ,EAAMpB,EAAEsB,OAIRyJ,EAAQF,GADRK,EAAIT,GAASzK,IAIbmB,EAAM,IAAI6J,EAAM5J,GAGX2J,GAASD,GAAcI,IAE1BhK,EADI6J,EACGlF,GAAe7F,EAAG,GAElB+F,GAAgB/F,EAAG,GAGtB6K,GAAaL,IACjBS,EAAOpF,GAAe1E,EAAK,GAC3BwJ,GAAW,EAAJvJ,EAAOF,EAAM,EAAG+J,EAAM,GACtB9J,GAEH2J,GAAcN,IAClBS,EAAOlF,GAAgB5E,EAAK,GAC5BwJ,GAAW,EAAJvJ,EAAOF,EAAM,EAAG+J,EAAM,GACtB9J,IAGRwJ,GAAOvJ,EAAKF,EAAM,EAAGC,EAAK,GACnBA,KAGR4J,EAAQF,GAAaL,KACPM,GAAcN,IAE1BS,EADIF,EACGlF,GAAe1E,EAAK,GAEpB4E,GAAgB5E,EAAK,GAG7BwJ,GAAOvJ,EAAKpB,EAAG,EAAGiL,EAAM,GACjB9J,IAGRwJ,GAAOvJ,EAAKpB,EAAG,EAAGmB,EAAK,GAChBA,ICnHRX,GALWQ,GCdPyJ,GAAUzJ,GACVmK,GAAU1I,GACVmB,GAASlB,EAkCb,IAAA6H,GAXA,SAAsBvK,EAAGoL,GACxB,IAAIZ,EAAQC,GAASW,GACrB,GAAe,OAAVZ,EACJ,MAAM,IAAIrG,UAAWP,GAAQ,yGAA0G4G,EAAOY,IAE/I,OAAOD,GAASnL,EAAGwK,ICTpBhK,GALWQ,GCFX,ICGImC,GCjB6B,mBAAbkI,SAA4BA,cAAW,EDkBvDhI,GDXJ,WACC,MAAM,IAAIC,MAAO,oBCyBlB9C,GAjByBQ,IASjBmC,GAEAE,GE3BJiI,GAAatK,EACbgE,GAAYvC,EACZ8I,GAAW7I,EAAsC+B,YACjDG,GAAWjC,EACXiB,GAAShB,EACT4I,GAAQ3I,EACR4I,GAAQ3I,EACRjB,GAAOkB,EAKP2I,GAAY,oBACZC,GAAW,CAAE,QAAS,OAAQ,SAelC,SAASC,GAAWvL,EAAOwG,GAC1B,IAAIgF,EAGJ,GAAc,YADdA,SAAcxL,GACW,CAExB,IADAA,EAAQyL,KAAKC,MAAO1L,KACLA,EACd,MAAM,IAAIiD,MAAOM,GAAQ,6CAA8CiD,EAAKmF,gBAE7E3L,EAAQ,IAAIyL,KAAMzL,GAEnB,GAAc,WAATwL,EAAoB,CACxB,IAAMH,GAAUO,KAAM5L,GACrB,MAAM,IAAIiD,MAAOM,GAAQ,mFAAoFiD,EAAKmF,gBAElF,KAA5B3L,EAAM6L,WAAW5K,SACrBjB,GAAS,KAEVA,EAAQ,IAAIyL,KAAMzL,GAEnB,KAAOA,aAAiByL,MACvB,MAAM,IAAI3H,UAAWP,GAAQ,gHAAiHiD,IAE/I,OAAOxG,EAuHR,ICtJAG,GDiEA,SAAoBwH,EAAOmE,EAAM7K,EAAQ8K,GACxC,IAAIC,EACAjL,EACAuG,EACAlG,EACA6K,EACAC,EACA7E,EACAxF,EACAb,EASJ,GAPAD,EAAM,IACNuG,GAAM,EACN0E,EAAO,CACNZ,MAAS,SAEVzD,EAAQ4D,GAAW5D,EAAO,SAC1BmE,EAAOP,GAAWO,EAAM,QACnB9E,UAAU/F,OAAS,EAAI,CAc3B,GAb0B,IAArB+F,UAAU/F,OACTsD,GAAUtD,GACd+K,EAAO/K,GAEPF,EAAME,EAGNqG,GAAM,IAGP0E,EAAOD,EACPhL,EAAME,GAEM,IAARF,EACJ,MAAO,GAER,IAAM4D,GAAW5D,IAASA,EAAM,EAC/B,MAAM,IAAI+C,UAAWP,GAAQ,oEAAqExC,IAEnG,GAAKuG,EAAM,CACV,IAAM/C,GAAUyH,GACf,MAAM,IAAIlI,UAAWP,GAAQ,qEAAsEyI,IAEpG,GAAKf,GAAYe,EAAM,SAAY,CAClC,IAAMd,GAAUc,EAAKZ,OACpB,MAAM,IAAItH,UAAWP,GAAQ,8DAA+D,QAASyI,EAAKZ,QAE3G,IAAyC,IAApCE,GAASa,QAASH,EAAKZ,OAC3B,MAAM,IAAInI,MAAOM,GAAQ,kEAAmE,QAAS+H,GAASc,KAAM,YAKxH,OAASJ,EAAKZ,OACd,IAAK,QACJc,EAAMd,GACN,MACD,IAAK,OACJc,EAAM1K,GACN,MAED,QACC0K,EAAMf,GAaP,IARAc,EAAMlL,EAAM,EACZc,GAAMiK,EAAKO,UAAY1E,EAAM0E,WAAcJ,EAI3C5E,EAAMM,GADNvG,EAAM,IAAIoH,MAAOzH,IAEZ,GAAMsG,EACXA,EAAMA,EAAIgF,UACJrL,EAAI,EAAGA,EAAIiL,EAAKjL,IACrBqG,GAAOxF,EACPT,EAAKJ,GAAM,IAAIyK,KAAMS,EAAK7E,IAG3B,OADAjG,EAAK6K,GAAQH,EACN1K,GEpKJ+H,sHAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXpB,GAAWvK,EAAsCyD,YACjDD,GAAuB/B,EAAmDgC,YAC1EC,GAAehC,EACfiC,GAAgBhC,EAChBiC,GAAWhC,EACXkC,GAAajC,EACb6H,GAAQ5H,GACR8J,GAAQ7J,EACRT,GAASU,GAETkC,GAAkBhC,EAClB2J,GAAa1H,EACbvB,GAASwB,EAKTqB,GAR2BxD,IAqB/B,SAAS6J,GAAgBhJ,EAAIzD,GAC5B,IAAIoB,EAIJ,IADAA,EAAM,IAEDqC,EAAGG,OACAC,MAGPzC,EAAIF,KAAMlB,GAEX,OAAOoB,EAWR,SAASsL,GAAiBtL,EAAKpB,GAC9B,IAAIgB,EACJ,IAAMA,EAAI,EAAGA,EAAII,EAAIH,OAAQD,IAC5BI,EAAIlB,IAAKF,EAAOgB,GAEjB,OAAOI,EAqMR,IAAA8I,GAtGA,WACC,IAAIlK,EACA+G,EACAoD,EACAQ,EACAvJ,EACAL,EACA4L,EAWJ,GATA5F,EAAQC,UAAU/F,QAClB8F,GAAS,IACK,GAAKmE,GAAUlE,UAAWD,KACvCoD,EAAQnD,UAAWD,GACnBA,GAAS,GAEToD,EAAQ,UAGK,QADdQ,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAErG,GAAe,YAAVA,EAAsB,CAC1B,GAAKpD,GAAS,EACb,MAAO,GAIR,GAFA/G,EAAQgH,UAAW,GACnB2F,EAAM3F,UAAW,GACF,IAAVD,EAAc,CAMlB,GALK5C,GAAsBwI,GAC1B5L,EAAM4L,EACKtI,GAAcsI,KACzB5L,EAAM4L,EAAI1L,aAEE,IAARF,EACJ,OAAOkB,GAAQjC,EAAOe,GAEvB,GAAKuD,GAAeqI,GACnB,MAAM,IAAI1J,MAAO,qFAElB,GAAKsB,GAAUoI,GAAQ,CACtB,IAA6B,IAAxBvG,GACJ,MAAM,IAAItC,UAAWP,GAAQ,sIAAuIoJ,IAErK,IAAMlI,GAAYkI,EAAK9H,KACtB,MAAM,IAAIf,UAAWP,GAAQ,wGAAyGoJ,IAGvI,GADAA,EAAMA,EAAK9H,OACLJ,GAAYkI,EAAI/I,MACrB,MAAM,IAAIE,UAAWP,GAAQ,wGAAyGoJ,IAEvI,OAAOF,GAAgBE,EAAK3M,GAE7B,MAAM,IAAI8D,UAAWP,GAAQ,wGAAyGoJ,IAChI,GAAKrI,GAAeqI,GAC1B,MAAM,IAAI1J,MAAO,qFAElB,MAAM,IAAIa,UAAWP,GAAQ,wGAAyGoJ,IAEvI,GAAK5F,GAAS,EACb,OAAO,IAAI4D,EAAM,GAElB,GAAe,IAAV5D,EAEJ,GAAK1C,GADLsI,EAAM3F,UAAW,IAEhB5F,EAAM,IAAIuJ,EAAMgC,EAAI1L,aACd,GAAKqD,GAAeqI,GAC1BvL,EAAM,IAAIuJ,EAAMgC,QACV,GAAKxI,GAAsBwI,GACjCvL,EAAM,IAAIuJ,EAAMgC,OACV,CAAA,IAAKpI,GAAUoI,GAarB,MAAM,IAAI7I,UAAWP,GAAQ,wGAAyGoJ,IAZtI,IAA6B,IAAxBvG,GACJ,MAAM,IAAItC,UAAWP,GAAQ,sIAAuIoJ,IAErK,IAAMlI,GAAYkI,EAAK9H,KACtB,MAAM,IAAIf,UAAWP,GAAQ,wGAAyGoJ,IAGvI,GADAA,EAAMA,EAAK9H,OACLJ,GAAYkI,EAAI/I,MACrB,MAAM,IAAIE,UAAWP,GAAQ,wGAAyGoJ,IAEvIvL,EAAM,IAAIuJ,EAAM6B,GAAYG,SAK7BvL,EADqB,IAAV2F,EACL,IAAI4D,EAAM3D,UAAU,GAAIA,UAAU,IAElC,IAAI2D,EAAM3D,UAAU,GAAIA,UAAU,GAAIA,UAAU,IASvD,OAPK5F,EAAIH,OAAS,IACZ,WAAW2K,KAAMzB,GACrBuC,GAAiBtL,EAAK4F,UAAW,IAEjCuF,GAAOnL,EAAIH,OAAQ+F,UAAW,GAAK5F,EAAK,IAGnCA,GC5IRjB,GALWQ,GCxGPuK,GAAWvK,EAAsCyD,YACjDD,GAAuB/B,EAAmDgC,YAC1EC,GAAehC,EACfiC,GAAgBhC,EAChBiC,GAAWhC,EACXkC,GAAajC,EACb6H,GAAQ5H,GACRmK,GAAUlK,EACVmK,GAAclK,GAEdkC,GAAkBhC,EAClB2J,GAAa1H,EACbvB,GAASwB,EAKTqB,GAR2BxD,IAuB/B,SAASkK,GAAqBrJ,EAAIpC,EAAMC,GACvC,IAAIF,EACAJ,EAKJ,IAFAI,EAAM,GACNJ,GAAK,GAEAyC,EAAGG,OACAC,MAGP7C,GAAK,EACLI,EAAIF,KAAMG,EAAKE,KAAMD,EAASN,IAE/B,OAAOI,EAYR,SAASsL,GAAiBtL,EAAKC,EAAMC,GACpC,IAAIN,EACJ,IAAMA,EAAI,EAAGA,EAAII,EAAIH,OAAQD,IAC5BI,EAAIlB,IAAKmB,EAAKE,KAAMD,EAASN,GAAKA,GAEnC,OAAOI,EAsUR,IAAA8I,GAzKA,WACC,IAAI5I,EACAyF,EACAoD,EACA9I,EACAsJ,EACAvJ,EACAL,EACA4L,EAKJ,GAAe,KAHf5F,EAAQC,UAAU/F,QAKjB,OAAO,IADP0J,EAAON,GAzNW,YA0ND,GAIlB,GAAKa,GADLf,EAAQnD,UAAW,IACM,CAExB,GAAKD,EAAQ,EACZ,MAAM,IAAIjD,UAAW,6FAGtB,GAAc,QADd6G,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAGrG,OAAO,IAAIQ,EAAM,GAGlB,GAAK5D,EAAQ,EACZ,MAAM,IAAIjD,UAAW,6FAMtB,GAAKW,GAAYuC,UAHjBD,GAAS,IAKR,GAAKtC,GAAYuC,UAAWD,EAAM,KAMjC,GALAzF,EAAU0F,UAAWD,GAErB1F,EAAO2F,UADPD,GAAS,GAIM,IAAVA,EACJ,MAAM,IAAIjD,UAAW,kGAItBzC,EAAO2F,UAAWD,OAIf,CAAA,KAAKA,GAAS,GAUlB,MAAM,IAAIjD,UAAW,6FANrB,GAHAxC,EAAU0F,UAAWD,IAGftC,GADNpD,EAAO2F,UADPD,GAAS,IAGR,MAAM,IAAIjD,UAAWP,GAAQ,uEAAwElC,IAgBvG,IARA0F,GAAS,IACK,GAAKmE,GAAUlE,UAAWD,KACvCoD,EAAQnD,UAAWD,GACnBA,GAAS,GAEToD,EArRkB,UAwRL,QADdQ,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAGrG,GAAe,YAAVA,EAAsB,CAE1B,GADAwC,EAAM3F,UAAW,GACF,IAAVD,EAAc,CAMlB,GALK5C,GAAsBwI,GAC1B5L,EAAM4L,EACKtI,GAAcsI,KACzB5L,EAAM4L,EAAI1L,aAEE,IAARF,EACJ,OAAO8L,GAAa9L,EAAKM,EAAMC,GAEhC,GAAKgD,GAAeqI,GACnB,MAAM,IAAI1J,MAAO,qFAElB,GAAKsB,GAAUoI,GAAQ,CACtB,IAA6B,IAAxBvG,GACJ,MAAM,IAAItC,UAAWP,GAAQ,sIAAuIoJ,IAErK,IAAMlI,GAAYkI,EAAK9H,KACtB,MAAM,IAAIf,UAAWP,GAAQ,wGAAyGoJ,IAGvI,GADAA,EAAMA,EAAK9H,OACLJ,GAAYkI,EAAI/I,MACrB,MAAM,IAAIE,UAAWP,GAAQ,wGAAyGoJ,IAEvI,OAAOG,GAAqBH,EAAKtL,EAAMC,GAExC,MAAM,IAAIwC,UAAWP,GAAQ,wGAAyGoJ,IAChI,GAAKrI,GAAeqI,GAC1B,MAAM,IAAI1J,MAAO,qFAElB,MAAM,IAAIa,UAAWP,GAAQ,wGAAyGoJ,IAEvI,GAAe,IAAV5F,EAEJ,GAAK1C,GADLsI,EAAM3F,UAAW,IAEhB5F,EAAM,IAAIuJ,EAAMgC,EAAI1L,aACd,GAAKqD,GAAeqI,GAC1BvL,EAAM,IAAIuJ,EAAMgC,QACV,GAAKxI,GAAsBwI,GACjCvL,EAAM,IAAIuJ,EAAMgC,OACV,CAAA,IAAKpI,GAAUoI,GAarB,MAAM,IAAI7I,UAAWP,GAAQ,wGAAyGoJ,IAZtI,IAA6B,IAAxBvG,GACJ,MAAM,IAAItC,UAAWP,GAAQ,sIAAuIoJ,IAErK,IAAMlI,GAAYkI,EAAK9H,KACtB,MAAM,IAAIf,UAAWP,GAAQ,wGAAyGoJ,IAGvI,GADAA,EAAMA,EAAK9H,OACLJ,GAAYkI,EAAI/I,MACrB,MAAM,IAAIE,UAAWP,GAAQ,wGAAyGoJ,IAEvIvL,EAAM,IAAIuJ,EAAM6B,GAAYG,SAK7BvL,EADqB,IAAV2F,EACL,IAAI4D,EAAM3D,UAAU,GAAIA,UAAU,IAElC,IAAI2D,EAAM3D,UAAU,GAAIA,UAAU,GAAIA,UAAU,IASvD,OAPK5F,EAAIH,OAAS,IACZ,WAAW2K,KAAMzB,GACrBuC,GAAiBtL,EAAKC,EAAMC,GAE5BsL,GAASxL,EAAIH,OAAQG,EAAK,EAAG2L,IAGxB3L,EAYP,SAAS2L,EAAU/M,EAAOgN,GACzB,OAAO3L,EAAKE,KAAMD,EAAS0L,KCtN7B7M,GALWQ,GCpKP8D,GAAa9D,EACb0D,GAAejC,EACf6K,GAAiB5K,EACjB3B,GAAmB4B,GACnBiB,GAAShB,EA4Gb,IAAA2H,GAlFA,WACC,IAAIgD,EACA5L,EACA4K,EACApL,EACAC,EACAb,EACAc,EACA0C,EAGJ,GADAwJ,EAAWlG,UAAW,GACjBA,UAAU/F,OAAS,EACvB,GAAKoD,GAAc2C,UAAW,KAE7B,GADAlG,EAAMkG,UAAW,GACZA,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,uEAAwE2I,IAEtG5K,EAAU0F,UAAW,QAEhB,CAEN,IAAMvC,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,uEAAwE2I,IAEtG5K,EAAU0F,UAAW,GAGvB,IAAMiG,GAAgBC,GACrB,MAAM,IAAIpJ,UAAWP,GAAQ,kGAAmG2J,IAGjI,GADAlM,GAAK,OACQ,IAARF,EAAiB,CAErB,GADAA,EAAM,GACDoL,EAAM,CACV,KACClL,GAAK,IACL0C,EAAIwJ,EAAStJ,QACNC,MAGP/C,EAAII,KAAMgL,EAAI3K,KAAMD,EAASoC,EAAE1D,MAAOgB,IAEvC,OAAOF,EAER,OACC4C,EAAIwJ,EAAStJ,QACNC,MAGP/C,EAAII,KAAMwC,EAAE1D,OAEb,OAAOc,EAIR,GAFAC,EAAMD,EAAIG,OACVf,EAAMQ,GAAkBI,GAAML,OACzByL,EAAM,CACV,KAAQlL,EAAID,EAAI,IACfC,GAAK,IACL0C,EAAIwJ,EAAStJ,QACNC,OAGP3D,EAAKY,EAAKE,EAAGkL,EAAI3K,KAAMD,EAASoC,EAAE1D,MAAOgB,IAE1C,OAAOF,EAER,KAAQE,EAAID,EAAI,IACfC,GAAK,IACL0C,EAAIwJ,EAAStJ,QACNC,OAGP3D,EAAKY,EAAKE,EAAG0C,EAAE1D,OAEhB,OAAOc,GCpFRX,GALWQ,GCjBPwD,GAAuBxD,EAAmDyD,YAC1EiG,GAAQjI,GACR+K,GAAQ9K,GACRkK,GAAQjK,EACRiB,GAAShB,EAqDb,IAAA2H,GA9BA,SAAejJ,EAAQjB,GACtB,IAAImK,EACAQ,EACA7J,EACJ,IAAMqD,GAAsBlD,GAC3B,MAAM,IAAI6C,UAAWP,GAAQ,+EAAgFtC,IAO9G,GAAe,aAJdkJ,EADInD,UAAU/F,OAAS,EACf+F,UAAW,GAEX,WAGR,OAAOmG,GAAOnN,EAAOiB,GAGtB,GAAc,QADd0J,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,gFAAiF4G,IAO/G,OALArJ,EAAM,IAAI6J,EAAM1J,GAGhBsL,GAAOtL,EAAQjB,EAAOc,EAAK,GAEpBA,GC5BRX,GALWQ,GClBP4C,GAAS5C,EACTwJ,GAAQ/H,GACRgL,GAAO/K,GACPgG,GAAa/F,EACb6C,GAAY5C,EAmDhB,IChCApC,GDIA,SAAmBR,EAAGK,GACrB,IAAIqN,EACA3J,EAGJ,GAAY,QADZ2J,EAAKlD,GAAOxK,IAEX,MAAM,IAAImE,UAAWP,GAAQ,8GAA+G5D,IAgB7I,OAdKqH,UAAU/F,OAAS,IACvBoM,EAAKrG,UAAW,IAIftD,EAFoB,iBAAV1D,EACC,eAAPqN,EACA,IAAIhF,GAAYrI,EAAO,GACT,cAAPqN,EACP,IAAIlI,GAAWnF,EAAO,GAEtBA,EAGDA,EAEEoN,GAAMzN,EAAEsB,OAAQyC,EAAG2J,IEjDvB7L,GAAOb,EACP2M,GAAWlL,EAAsCgC,YACjDmJ,GAAQlL,EACRkB,GAASjB,EACTkL,GAAajL,EACbkL,GAAMjL,GAgDV,ICpCArC,GDSA,SAAoBsB,EAAIC,EAAIC,GAC3B,IACI+L,EACJ,IAAMJ,GAAU7L,IAAQ8L,GAAO9L,GAC9B,MAAM,IAAIqC,UAAWP,GAAQ,wDAAyD9B,IAEvF,IAAM6L,GAAU5L,IAAQ6L,GAAO7L,GAC9B,MAAM,IAAIoC,UAAWP,GAAQ,uDAAwD7B,IAEtF,GAAKsF,UAAU/F,OAAS,EACvByM,EAAM,OAGN,IAAMJ,GADNI,EAAM/L,IACmB4L,GAAOG,GAC/B,MAAM,IAAI5J,UAAWP,GAAQ,4DAA6DmK,IAI5F,GADMlM,IAAQE,EAAGD,GAAOiM,GACbF,GACV,MAAM,IAAItG,WAAY,oEAEvB,OAAOuG,GAAKhM,EAAIC,EAAIgM,IE/CjBrE,GCSQ,CACXC,QAVkB3I,GAWlB4I,QAVkBnH,GAWlB6H,WAVqB5H,GAWrB2H,UAVoB1H,IDuBrB,IAAA4H,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GC2CZ,IAAAgN,GAxCA,SAAmBhG,EAAOmE,EAAM/K,EAAK6M,GACpC,IAAIxM,EACAQ,EACAC,EACAb,EAEJ,GAAa,IAARD,EACJ,MAAO,GAGR,GAAa,IAARA,EACJ,OAAK6M,EACG,CAAE9B,GAEH,CAAEnE,GAaV,IAXAvG,EAAM,CAAEuG,GAQR9F,GAAMiK,EAAKnE,IAJV/F,EADIgM,EACA7M,EAAM,EAENA,GAKCC,EAAI,EAAGA,EAAIY,EAAGZ,IACnBI,EAAIF,KAAMyG,EAAS9F,EAAEb,GAMtB,OAHK4M,GACJxM,EAAIF,KAAM4K,GAEJ1K,GCpDJ+D,GAAYxE,EACZ0H,GAAajG,EACb+F,GAAO9F,EACP+F,GAAO9F,EACPe,GAAQd,EACRe,GAAQd,EAkGZ,IAAAqL,GAjFA,SAAmBC,EAAKnG,EAAOoG,EAAKjC,EAAM/K,EAAK6M,GAC9C,IAAII,EACAC,EACA7M,EACA8M,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7M,EACAZ,EAEJ,GAAa,IAARD,EACJ,MAAO,GAgCR,GA9BAkN,EAAQ,EACK,YAARH,GACJI,EAAMvG,EACNyG,EAAM,GACa,cAARN,GACXG,GAAS,EACTC,EAAM7K,GAAOsE,GACbyG,EAAM9K,GAAOqE,KAEbuG,EAAM/F,GAAMR,GACZyG,EAAMhG,GAAMT,IAEA,YAARoG,GACJI,EAAMrC,EACNuC,EAAM,GACa,cAARN,GACXE,GAAS,EACTE,EAAM9K,GAAOyI,GACbuC,EAAM/K,GAAOwI,KAEbqC,EAAMhG,GAAM2D,GACZuC,EAAMjG,GAAM0D,IAIZkC,EADc,IAAVC,EACI9I,GAEAkD,GAGI,IAARtH,EACJ,OAAK6M,EACG,CAAE,IAAII,EAAOG,EAAKE,IAEnB,CAAE,IAAIL,EAAOE,EAAKE,IAc1B,IAZAhN,EAAM,CAAE,IAAI4M,EAAOE,EAAKE,IAQxBI,GAAOL,EAAID,IAJVtM,EADIgM,EACA7M,EAAM,EAENA,GAGL0N,GAAOJ,EAAID,GAAQxM,EAGbZ,EAAI,EAAGA,EAAIY,EAAGZ,IACnBsN,EAAKJ,EAAOM,EAAGxN,EACfuN,EAAKH,EAAOK,EAAGzN,EACfI,EAAIF,KAAM,IAAI8M,EAAOM,EAAIC,IAM1B,OAHKX,GACJxM,EAAIF,KAAM,IAAI8M,EAAOG,EAAKE,IAEpBjN,GC/BR,IAAAsN,GAzCA,SAAmB5N,EAAK6G,EAAOmE,EAAM/K,EAAK6M,GACzC,IAAIhM,EACAC,EACAb,EAEJ,GAAa,IAARD,EACJ,OAAOD,EAGR,GAAa,IAARC,EAMJ,OAJCD,EAAK,GADD8M,EACO9B,EAEAnE,EAEL7G,EAaR,IAXAA,EAAK,GAAM6G,EAQX9F,GAAMiK,EAAKnE,IAJV/F,EADIgM,EACA7M,EAAM,EAENA,GAKCC,EAAI,EAAGA,EAAIY,EAAGZ,IACnBF,EAAKE,GAAM2G,EAAS9F,EAAEb,EAMvB,OAHK4M,IACJ9M,EAAKc,GAAMkK,GAELhL,GC5DJqH,GAAOxH,EACPyH,GAAOhG,EACPiB,GAAQhB,EACRiB,GAAQhB,EA6FZ,IAAAqM,GA3EA,SAAmB7N,EAAKgN,EAAKnG,EAAOoG,EAAKjC,EAAM/K,EAAK6M,GACnD,IAAIM,EACAC,EACAC,EACAC,EACAG,EACAC,EACA7M,EACAZ,EACAkD,EAEJ,GAAa,IAARnD,EACJ,OAAOD,EAuBR,GArBa,YAARgN,GACJI,EAAMvG,EACNyG,EAAM,GACa,cAARN,GACXI,EAAM7K,GAAOsE,GACbyG,EAAM9K,GAAOqE,KAEbuG,EAAM/F,GAAMR,GACZyG,EAAMhG,GAAMT,IAEA,YAARoG,GACJI,EAAMrC,EACNuC,EAAM,GACa,cAARN,GACXI,EAAM9K,GAAOyI,GACbuC,EAAM/K,GAAOwI,KAEbqC,EAAMhG,GAAM2D,GACZuC,EAAMjG,GAAM0D,IAGA,IAAR/K,EAQJ,OAPK6M,GACJ9M,EAAK,GAAMqN,EACXrN,EAAK,GAAMuN,IAEXvN,EAAK,GAAMoN,EACXpN,EAAK,GAAMsN,GAELtN,EAgBR,IAdAA,EAAK,GAAMoN,EACXpN,EAAK,GAAMsN,EAQXI,GAAOL,EAAID,IAJVtM,EADIgM,EACA7M,EAAM,EAENA,GAGL0N,GAAOJ,EAAID,GAAQxM,EAGnBsC,EAAI,EACElD,EAAI,EAAGA,EAAIY,EAAGZ,IACnBF,EAAKoD,GAAMgK,EAAOM,EAAGxN,EACrBF,EAAKoD,EAAE,GAAMkK,EAAOK,EAAGzN,EACvBkD,GAAK,EAON,OAJK0J,IACJ9M,EAAKoD,GAAMiK,EACXrN,EAAKoD,EAAE,GAAMmK,GAEPvN,GC1FJyD,GAAW5D,EACXsK,GAAa7I,EACb8I,GAAW7I,EAAsC+B,YACjDwK,GAAYtM,GAAuC8B,YACnDb,GAAShB,EA+Cb,IAAAsM,GAtBA,SAAmB7C,EAAMD,GACxB,OAAMxH,GAAUwH,GAGXd,GAAYc,EAAS,WACzBC,EAAK7B,MAAQ4B,EAAQ5B,OACfe,GAAUc,EAAK7B,QACb,IAAIrG,UAAWP,GAAQ,8DAA+D,QAASyI,EAAK7B,QAGxGc,GAAYc,EAAS,cACzBC,EAAK4B,SAAW7B,EAAQ6B,UAClBgB,GAAW5C,EAAK4B,WACd,IAAI9J,UAAWP,GAAQ,+DAAgE,WAAYyI,EAAK4B,WAG1G,KAdC,IAAI9J,UAAWP,GAAQ,qEAAsEwI,sBC/BlG3I,GAAgBzC,EAChB2M,GAAWlL,EAAsCgC,YACjDD,GAAuB9B,EAAmD+B,YAC1EmJ,GAAQjL,EACR6H,GAAQ5H,EACR8H,GAAQ7H,GACRgD,GAAgB/C,EAChBiD,GAAiBhD,EACjBa,GAASZ,EACTmM,GAAUlM,GACVmM,GAAWlM,GACXmM,GAAYlK,GACZmK,GAAalK,GACbmK,GAAWjK,GACXkK,GAAWjK,GAgHf,IAAAgF,GAnFA,SAAmBvC,EAAOmE,EAAM/K,GAC/B,IAAIiL,EACArB,EACAyE,EACAtO,EACAgN,EACAC,EACAzG,EAEJ,GAAsB,iBAAVK,EAAqB,CAEhC,GAAa,QADbmG,EAAM3D,GAAOxC,IACO,CACnB,IAAMvE,GAAeuE,GACpB,MAAM,IAAI7D,UAAWP,GAAQ,yFAA0FoE,IAExHmG,EAAM,aAEPxG,GAAM,MACA,CAAA,IAAMgG,GAAU3F,IAAW4F,GAAO5F,GACxC,MAAM,IAAI7D,UAAWP,GAAQ,yFAA0FoE,IAEvHmG,EAAM,UAEP,GAAqB,iBAAThC,EAAoB,CAE/B,GAAa,QADbiC,EAAM5D,GAAO2B,IACO,CACnB,IAAM1I,GAAe0I,GACpB,MAAM,IAAIhI,UAAWP,GAAQ,0FAA2FuI,IAEzHiC,EAAM,aAEPzG,GAAM,MACA,CAAA,IAAMgG,GAAUxB,IAAUyB,GAAOzB,GACvC,MAAM,IAAIhI,UAAWP,GAAQ,0FAA2FuI,IAExHiC,EAAM,UAEP,IAAM5J,GAAsBpD,GAC3B,MAAM,IAAI+C,UAAWP,GAAQ,+EAAgFxC,IAW9G,IATAiL,EAAO,CACN4B,SAAYuB,GAASvB,WAGhBzD,MADD2D,IAAQC,EACCD,EAGA,aAET9G,UAAU/F,OAAS,IACvBmO,EAAMF,GAAUlD,EAAMhF,UAAW,KAEhC,MAAMoI,EAGR,GAAoB,YAAfpD,EAAK7B,MACT,OAAK7C,EACGyH,GAAUjB,EAAKnG,EAAOoG,EAAKjC,EAAM/K,EAAKiL,EAAK4B,UAE5CkB,GAASnH,EAAOmE,EAAM/K,EAAKiL,EAAK4B,UAGxC,GAAc,QADdjD,EAAON,GAAO2B,EAAK7B,QAElB,MAAM,IAAIrG,UAAWP,GAAQ,+GAAgH,QAASyI,EAAK7B,QAG5J,GADArJ,EAAM,IAAI6J,EAAM5J,GACI,cAAfiL,EAAK7B,MAET,OADA8E,GAAYzJ,GAAe1E,EAAK,GAAKgN,EAAKnG,EAAOoG,EAAKjC,EAAM/K,EAAKiL,EAAK4B,UAC/D9M,EAER,GAAoB,eAAfkL,EAAK7B,MAET,OADA8E,GAAYvJ,GAAgB5E,EAAK,GAAKgN,EAAKnG,EAAOoG,EAAKjC,EAAM/K,EAAKiL,EAAK4B,UAChE9M,EAER,GAAKwG,EACJ,MAAM,IAAIxD,UAAW,4JAEtB,OAAOkL,GAAWlO,EAAK6G,EAAOmE,EAAM/K,EAAKiL,EAAK4B,WCxH3CzI,GAAYxE,EACZ0H,GAAajG,EACb+F,GAAO9F,EACP+F,GAAO9F,EACPe,GAAQd,EACRe,GAAQd,EA4GZ,IAAA6M,GAxFA,SAAmBvO,EAAKgN,EAAKnG,EAAOoG,EAAKjC,EAAM/K,EAAK6M,GACnD,IAAII,EACAC,EACAC,EACAC,EACAC,EACAC,EACAnO,EACA+D,EAGAuK,EACAC,EACA7M,EACAZ,EAEJ,GAAa,IAARD,EACJ,OAAOD,EAoCR,GAlCAmN,EAAQ,EACK,YAARH,GACJI,EAAMvG,EACNyG,EAAM,GACa,cAARN,GACXG,GAAS,EACTC,EAAM7K,GAAOsE,GACbyG,EAAM9K,GAAOqE,KAEbuG,EAAM/F,GAAMR,GACZyG,EAAMhG,GAAMT,IAEA,YAARoG,GACJI,EAAMrC,EACNuC,EAAM,GACa,cAARN,GACXE,GAAS,EACTE,EAAM9K,GAAOyI,GACbuC,EAAM/K,GAAOwI,KAEbqC,EAAMhG,GAAM2D,GACZuC,EAAMjG,GAAM0D,IAIZkC,EADc,IAAVC,EACI9I,GAEAkD,GAGTpE,EAAMnD,EAAIR,KACVJ,EAAMY,EAAIL,OAGG,IAARM,EAMJ,OAJCb,EAAK+D,EAAK,EADN2J,EACS,IAAII,EAAOG,EAAKE,GAEhB,IAAIL,EAAOE,EAAKE,IAEvBtN,EAcR,IAZAZ,EAAK+D,EAAK,EAAG,IAAI+J,EAAOE,EAAKE,IAQ7BI,GAAOL,EAAID,IAJVtM,EADIgM,EACA7M,EAAM,EAENA,GAGL0N,GAAOJ,EAAID,GAAQxM,EAGbZ,EAAI,EAAGA,EAAIY,EAAGZ,IAGnBd,EAAK+D,EAAKjD,EAAG,IAAIgN,EAFZE,EAAOM,EAAGxN,EACVoN,EAAOK,EAAGzN,IAOhB,OAHK4M,GACJ1N,EAAK+D,EAAKrC,EAAG,IAAIoM,EAAOG,EAAKE,IAEvBvN,GCbR,IAAAwO,GA/CA,SAAmBxO,EAAK6G,EAAOmE,EAAM/K,EAAK6M,GACzC,IAAI3J,EACA/D,EACA0B,EACAC,EACAb,EAEJ,GAAa,IAARD,EACJ,OAAOD,EAOR,GAJAmD,EAAMnD,EAAIR,KACVJ,EAAMY,EAAIL,OAGG,IAARM,EAMJ,OAJCb,EAAK+D,EAAK,EADN2J,EACS9B,EAEAnE,GAEP7G,EAaR,IAXAZ,EAAK+D,EAAK,EAAG0D,GAQb9F,GAAMiK,EAAKnE,IAJV/F,EADIgM,EACA7M,EAAM,EAENA,GAKCC,EAAI,EAAGA,EAAIY,EAAGZ,IACnBd,EAAK+D,EAAKjD,EAAG2G,EAAS9F,EAAEb,GAMzB,OAHK4M,GACJ1N,EAAK+D,EAAKrC,EAAGkK,GAEPhL,GCxFJsC,GAAgBzC,EAChB2M,GAAWlL,EAAsCgC,YACjDC,GAAehC,EACfkB,GAASjB,EACTiL,GAAQhL,EACR4H,GAAQ3H,EACR+M,GAAS9M,GACT+C,GAAgB9C,EAChBgD,GAAiB/C,EACjBjC,GAAmBkC,GACnB4M,GAAW3M,GACX4M,GAAU3K,GACVmK,GAAalK,GACbiK,GAAY/J,GACZiK,GAAWhK,GACXiK,GAAW/J,GA6Gf,IC/EA8E,GAAA9H,GADAzB,EAOAuJ,GAAA,UDRA,SAAmBvC,EAAOmE,EAAMhL,GAC/B,IAAIkL,EACAoD,EACAtB,EACAC,EACAzG,EACAoI,EACAC,EAEJ,GAAsB,iBAAVhI,EAAqB,CAEhC,GAAa,QADbmG,EAAM3D,GAAOxC,IACO,CACnB,IAAMvE,GAAeuE,GACpB,MAAM,IAAI7D,UAAWP,GAAQ,yFAA0FoE,IAExHmG,EAAM,aAEPxG,GAAM,MACA,CAAA,IAAMgG,GAAU3F,IAAW4F,GAAO5F,GACxC,MAAM,IAAI7D,UAAWP,GAAQ,yFAA0FoE,IAEvHmG,EAAM,UAEP,GAAqB,iBAAThC,EAAoB,CAE/B,GAAa,QADbiC,EAAM5D,GAAO2B,IACO,CACnB,IAAM1I,GAAe0I,GACpB,MAAM,IAAIhI,UAAWP,GAAQ,0FAA2FuI,IAEzHiC,EAAM,aAEPzG,GAAM,MACA,CAAA,IAAMgG,GAAUxB,IAAUyB,GAAOzB,GACvC,MAAM,IAAIhI,UAAWP,GAAQ,0FAA2FuI,IAExHiC,EAAM,UAEP,IAAM1J,GAAcvD,GACnB,MAAM,IAAIgD,UAAWP,GAAQ,8EAA+EzC,IAK7G,GAHAkL,EAAO,CACN4B,SAAYuB,GAASvB,UAEjB5G,UAAU/F,OAAS,IACvBmO,EAAMF,GAAUlD,EAAMhF,UAAW,KAEhC,MAAMoI,EAOR,GAHa,QADbM,EAAMH,GAAQzO,MAEb4O,EAAM,WAEM,cAARA,EAEJ,OADAT,GAAYzJ,GAAe1E,EAAK,GAAKgN,EAAKnG,EAAOoG,EAAKjC,EAAMhL,EAAIG,OAAQ+K,EAAK4B,UACtE9M,EAER,GAAa,eAAR4O,EAEJ,OADAT,GAAYvJ,GAAgB5E,EAAK,GAAKgN,EAAKnG,EAAOoG,EAAKjC,EAAMhL,EAAIG,OAAQ+K,EAAK4B,UACvE9M,EAER,GAAKwG,EAAM,CACV,GAAa,YAARoI,EAGJ,OAFAC,EAAIjP,GAAkBI,GACtB0O,GAAUG,EAAG7B,EAAKnG,EAAOoG,EAAKjC,EAAMhL,EAAIG,OAAQ+K,EAAK4B,UAC9C9M,EAER,MAAM,IAAIgD,UAAW,kKAGtB,OADA6L,EAAIjP,GAAkBI,IACfP,WACNkP,GAASE,EAAGhI,EAAOmE,EAAMhL,EAAIG,OAAQ+K,EAAK4B,UACnC9M,IAERkO,GAAWlO,EAAK6G,EAAOmE,EAAMhL,EAAIG,OAAQ+K,EAAK4B,UACvC9M,MC9DR,IAAAX,GAAA+J,GCxDIoD,GAAW3M,EAAsCyD,YACjDD,GAAuB/B,EAAmDgC,YAC1Eb,GAASlB,EACTkL,GAAQjL,EACRmL,GAAMlL,GAsCV,ICzBApC,GDOA,SAAmB4B,EAAGC,EAAGjB,GACxB,IAAMuM,GAAUvL,IAAOwL,GAAOxL,GAC7B,MAAM,IAAI+B,UAAWP,GAAQ,0EAA2ExB,IAEzG,IAAMuL,GAAUtL,IAAOuL,GAAOvL,GAC7B,MAAM,IAAI8B,UAAWP,GAAQ,yEAA0EvB,IAExG,GAAKgF,UAAU/F,OAAS,EACvBF,EAAM,QACA,IAAMoD,GAAsBpD,GAClC,MAAM,IAAI+C,UAAWP,GAAQ,uEAAwExC,IAEtG,OAAO0M,GAAK1L,EAAGC,EAAGjB,IEpCf4D,GAAYhE,EACZiP,GAAiBxN,GACjBgB,GAAgBf,EAChBwN,GAAOvN,GACPwN,GAAOvN,GACPwN,GAA6BvN,GAC7BwN,GAA2BvN,GAC3BwN,GAA2BvN,GAC3BwN,GAAWvN,GACXwN,GAAYvN,GACZwN,GAAYvN,GACZwN,GAAYvL,GACZwL,GAAavL,GACbwL,GAAatL,EAYjB,SAASuL,GAAkBxQ,GAC1B,OAAKA,GAAUA,GAASA,IAAU6P,IAAQ7P,IAAU8P,GAC5C,UAEHnL,GAAW3E,GACVA,GAASiQ,IAA4BjQ,GAASgQ,GAC3C,UAED,UAIPhQ,GAAS+P,IACT/P,EAAQ+P,GAED,UAGD,UA0ER,ICjGA5P,GD2CA,SAAsBH,GACrB,MAAsB,iBAAVA,EACNoD,GAAepD,GACmB,YAAjCwQ,GAAkBxQ,EAAMsO,KAAuD,YAAjCkC,GAAkBxQ,EAAMuO,IACnE,aAED,YAED,UAEHvO,GAAUA,GAASA,IAAU6P,IAAQ7P,IAAU8P,GAC5C,UAEHnL,GAAW3E,GACA,IAAVA,GAAe4P,GAAgB5P,GAC5B,UAEHA,EAAQ,EACPA,GAASkQ,GACN,OAEHlQ,GAASmQ,GACN,QAEHnQ,GAASoQ,GACN,QAED,UAEHpQ,GAASqQ,GACN,QAEHrQ,GAASsQ,GACN,SAEHtQ,GAASuQ,GACN,SAED,UAIPvQ,GAAS+P,IACT/P,EAAQ+P,GAED,UAGD,WE/GJU,GAAa9P,GACbsK,GAAa7I,EACbsO,+KAWJ,SAASC,KACR,IAAIC,EACAC,EACA/P,EACAE,EAKJ,IAHAF,EAAM,GAEN+P,GADAD,EAASH,GAAYC,KACLzP,OACVD,EAAI,EAAGA,EAAI6P,EAAQ7P,IACxBF,EAAK8P,EAAO5P,IAAO0P,GAAaE,EAAO5P,IAExC,OAAOF,EA6BR,IAAAoJ,GAbA,SAAuBC,GACtB,OAA0B,IAArBnD,UAAU/F,OACP0P,KAEH1F,GAAYyF,GAAavG,GACtBuG,GAAavG,GAEd,MC/BRhK,GALmBQ,GCXfwE,GAAY/C,EACZgL,GAAO/K,GAKPyO,GAAO,IAPMnQ,EAOU,EAAK,GAC5BoQ,GAAM,IAAI5L,GAAW,EAAK,GA4C9B,IAAA+E,GAtBA,SAAejJ,GACd,IAAIkJ,EAeJ,OAAOiD,GAAMnM,EAPE,gBAJdkJ,EADInD,UAAU/F,OAAS,EACf+F,UAAW,GAEX,WAGA8J,GACa,cAAV3G,EACH4G,GAEA,EAEmB5G,ICvB7BhK,GALWQ,GClBPwJ,GAAQxJ,GACRyM,GAAOhL,GAEP+C,GAAY7C,EACZiB,GAAShB,EAKTuO,GAAO,IAPMzO,EAOU,EAAK,GAC5B0O,GAAM,IAAI5L,GAAW,EAAK,GA8C9B,ICjCAhF,GDSA,SAAmBR,GAClB,IAAI0N,EACA3J,EAGJ,GAAY,QADZ2J,EAAKlD,GAAOxK,IAEX,MAAM,IAAImE,UAAWP,GAAQ,8GAA+G5D,IAY7I,OAVKqH,UAAU/F,OAAS,IACvBoM,EAAKrG,UAAW,IAGhBtD,EADW,eAAP2J,EACAyD,GACc,cAAPzD,EACP0D,GAEA,EAEE3D,GAAMzN,EAAEsB,OAAQyC,EAAG2J,IElDvBhE,GCgBQ,CACXC,QAjBkB3I,GAkBlB4I,QAjBkBnH,GAkBlBqH,MAjBgBpH,GAkBhBqH,MAjBgBpH,GAkBhBqH,KAjBepH,GAkBfqH,OAjBiBpH,GAkBjBqH,OAjBiBpH,GAkBjBqH,MAjBgBpH,GAkBhBqH,OAjBuBpH,GAkBvBqH,UAjBoBpH,GAkBpBqH,WAjBqBpH,IDgBtB,IAAAqH,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,uCCfR4D,GAAW5D,EACXsK,GAAa7I,EACb+B,GAAuB9B,EAAmD+B,YAC1Eb,GAASjB,EAwCb,IAAAuM,GAhBA,SAAmB7C,EAAMD,GACxB,OAAMxH,GAAUwH,GAGXd,GAAYc,EAAS,mBACzBC,EAAKgF,cAAgBjF,EAAQiF,eACvB7M,GAAsB6H,EAAKgF,gBACzB,IAAIlN,UAAWP,GAAQ,2EAA4E,gBAAiByI,EAAKgF,gBAG3H,KARC,IAAIlN,UAAWP,GAAQ,qEAAsEwI,KCRtG,IAAAkF,GAdA,SAAeC,GACd,IAAIpQ,EACAE,EAGJ,IADAF,EAAM,GACAE,EAAI,EAAGA,EAAIkQ,EAAE,EAAGlQ,IACrBF,EAAII,KAAM,IAEX,OAAOJ,gHCfJoK,GAAWvK,EAAsCyD,YACjDD,GAAuB/B,EAAmDgC,YAC1EC,GAAehC,EACf8O,GAAmB7O,GACnBgC,GAAgB/B,EAChBqE,GAAmBpE,GACnBqE,GAAoBpE,GACpBP,GAAcQ,EACdsC,GAAsBrC,EACtB0H,GAAQzH,GACR4C,GAAgB3C,EAChB6C,GAAiBZ,EACjBpE,GAAmBqE,GACnBxB,GAAS0B,EACTsF,GAAOrF,GACPnC,GAAcqC,GACd5D,GAAO6D,EACP8F,GAAQ7F,EACR8L,GAAQ7L,GACR8L,GAAO5L,GACP6L,GAAM3L,GACNwJ,GAAWvJ,GACXsJ,GAAWpJ,GACXyL,GAAavL,GACbG,GAAoBD,GAKpBI,GAAiB+D,GAAO,aACxB/B,GAAkB+B,GAAO,cAY7B,SAASmH,GAAgBpQ,GACxB,OAASA,aAAekF,GAUzB,SAASmL,GAAiBrQ,GACzB,OAASA,aAAekH,GAqSzB,IAAAoJ,GAvQA,SAAkB3F,GACjB,IAAI4F,EACAC,EACA5F,EACAoD,EAGJ,GADApD,EAAOzB,GAAM4E,IACRnI,UAAU/F,SACdmO,EAAMF,GAAUlD,EAAMD,IAErB,MAAMqD,EAaR,OAVAwC,EAAOL,GAAY/P,GAAM6P,GAAMrF,EAAKgF,iBACpCW,EAAS,EAETzP,GAAa2P,EAAQ,SAAUA,GAC/B3P,GAAa2P,EAAQ,SAAUC,GAC/B5P,GAAa2P,EAAQ,OAAQE,GAC7B7P,GAAa2P,EAAQ,QAASG,GAC9B9P,GAAa2P,EAAQ,gBAAiB7F,EAAKgF,eAC3ChM,GAAqB6M,EAAQ,SAAUI,GAEhCJ,EAQP,SAASI,IACR,OAAON,EAUR,SAASO,EAAahB,GACrB,IAAIjN,EACAjD,EAMJ,OAHAA,EAAIqQ,GAAMH,IAGDU,EAAK3Q,QAAU2Q,EAAM5Q,GAAIC,OAC1B2Q,EAAM5Q,GAAImR,MAGbR,EAAOT,EAAIlF,EAAKgF,cACb,MAER/M,EAAM,IAAIlB,GAAamO,GAGvBS,GAAUT,EAEHjN,GAYR,SAASmO,EAAYzH,EAAM5J,EAAKoJ,GAC/B,IAAIlG,EACJ,OAAa,IAARlD,EACG,IAAI4J,EAAM,GAGL,QADb1G,EAAMiO,EAAad,GAAOrQ,GAAMoF,GAAmBgE,KAE3ClG,EAED,IAAI0G,EAAM1G,EAAK,EAAGlD,GAmB1B,SAAS8Q,IACR,IAAI9K,EACAoD,EACAQ,EACAvJ,EACAN,EACAZ,EACAJ,EACAiB,EACAC,EAUJ,GALCmJ,GAHDpD,EAAQC,UAAU/F,SACJiK,GAAUlE,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD,UAGK,QADd4D,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAErG,GAAKpD,GAAS,EACb,OAAO,IAAI4D,EAAM,GAGlB,GAAKxG,GAAsB6C,UAAW,IACrC,OAAOoL,EAAYzH,EAAM3D,UAAW,GAAKmD,GAG1C,GAAK9F,GAAc2C,UAAW,IAAQ,CAYrC,GAVAjG,GADAK,EAAM4F,UAAW,IACP/F,OACL4F,GAAmBzF,GACvBA,EAAMsE,GAAgBtE,EAAK,GAChBwF,GAAkBxF,GAC7BA,EAAMoE,GAAepE,EAAK,GACf,WAAWwK,KAAMzB,KAE5BpJ,GAAO,GAGK,QADbD,EAAMsR,EAAYzH,EAAM5J,EAAKoJ,IAE5B,OAAOrJ,EAER,GAAK2Q,GAAiB3Q,IAAS0Q,GAAgB1Q,GAE9C,OADAA,EAAIZ,IAAKkB,GACFN,EAKR,IAFAhB,EAAMY,GAAkBU,GAAMZ,OAC9BN,EAAMQ,GAAkBI,GAAML,OACxBO,EAAI,EAAGA,EAAID,EAAKC,IACrBd,EAAKY,EAAKE,EAAGlB,EAAKsB,EAAKJ,IAExB,OAAOF,EAER,MAAM,IAAIgD,UAAWP,GAAQ,wGAAyGyD,UAAW,KAiBlJ,SAAS8K,IACR,IAAI/K,EACAjG,EACAuG,EACArG,EAUJ,GAAa,QANZF,EADc,KADfiG,EAAQC,UAAU/F,QAEX4Q,IACe,IAAV9K,EACL8K,EAAQ7K,UAAW,IAEnB6K,EAAQ7K,UAAW,GAAKA,UAAW,KAWzC,IANCK,EADIoK,GAAiB3Q,GACf4E,GAAgB5E,EAAK,GAChB0Q,GAAgB1Q,GACrB0E,GAAe1E,EAAK,GAEpBA,EAEDE,EAAI,EAAGA,EAAIqG,EAAIpG,OAAQD,IAC5BqG,EAAKrG,GAAM,EAGb,OAAOF,EAeR,SAASiR,EAAM9N,GACd,IAAIiN,EACAmB,EACArR,EACJ,GAAKmQ,GAAkBlN,IAASA,EAAIwD,OACnCxD,EAAMA,EAAIwD,YACJ,IAAMnD,GAAeL,GAC3B,MAAM,IAAIH,UAAWP,GAAQ,mFAAoFU,IAElH,GAAKA,EAAIkD,WAAa,EAAI,CAQzB,IAPA+J,EAAI/F,GAAOkG,GAAMpN,EAAIkD,aAGrB+J,EAAII,GAAKM,EAAK3Q,OAAO,EAAGiQ,GAGxBmB,EAAIT,EAAMV,GACJlQ,EAAI,EAAGA,EAAIqR,EAAEpR,OAAQD,IAC1B,GAAKqR,EAAGrR,KAAQiD,EACf,OAAO,EAIToO,EAAEnR,KAAM+C,GAET,OAAO,EAQR,SAAS+N,IACR,IAAIhR,EACJ,IAAMA,EAAI,EAAGA,EAAI4Q,EAAK3Q,OAAQD,IAC7B4Q,EAAM5Q,GAAIC,OAAS,EAEpB0Q,EAAS,IC9TXzH,GCtBcvJ,KDqBdA,EAOAuJ,GAAA,UALA7H,IAUA,IAAAlC,GAAA+J,GEjCIuG,GAAa9P,GACbsK,GAAa7I,EACbkQ,kmFAWJ,SAASC,KACR,IAAI3B,EACAC,EACA/P,EACAuG,EACAyG,EACAC,EACA4B,EACAzL,EACAlD,EAKJ,IAHAF,EAAM,GAEN+P,GADAD,EAASH,GAAY6B,KACLrR,OACVD,EAAI,EAAGA,EAAI6P,EAAQ7P,IAAM,CAI9B,IAHA8M,EAAM8C,EAAQ5P,GACd2O,EAAI2C,GAAiBxE,GACrBzG,EAAM,GACAnD,EAAI,EAAGA,EAAI2M,EAAQ3M,IAExBmD,EADA0G,EAAM6C,EAAQ1M,IACDyL,EAAG5B,GAEjBjN,EAAKgN,GAAQzG,EAEd,OAAOvG,EA0CR,ICxDAX,GDuCA,SAAyBqS,EAAQC,GAChC,IAAI9C,EACJ,OAA0B,IAArB3I,UAAU/F,OACPsR,KAEHtH,GAAYqH,GAAiBE,IAE5BvH,GADL0E,EAAI2C,GAAiBE,GACDC,GACZ9C,EAAG8C,GAGL,MEzEJjO,GAAU7D,EACV0J,GCcQ,CACXnC,aAhBkBvH,GAiBlBuC,aAhBkBd,GAiBlBsG,WAfgBpG,GAgBhBuG,YAbiBpG,GAcjBgG,WAlBgBpG,GAmBhBuG,YAhBiBpG,GAiBjBmG,UAlBepG,GAmBfuG,WAhBgBpG,GAiBhBqG,kBAhBuBpG,GAiBvB2D,eAhBoB1D,GAiBpB0F,gBAhBqBzF,ID6BtB,IEhCI6P,GFgCJxI,GAlBA,SAAkByI,EAAK3S,GACtB,IAAI2K,EACJ,OACC3K,GACAA,EAAMwL,MACNhH,GAASxE,EAAMM,QAEfqK,EAAON,GAAOrK,EAAMwL,OAEZ,IAAIb,EAAM3K,EAAMM,MAGlBN,GGbRG,GALWQ,GDfP8P,GAAa9P,GACbsK,GAAa7I,EACbwQ,k8CAgBJ,SAASL,KACR,IAAI3B,EACAC,EACA/P,EACAuG,EACAyG,EACAC,EACA4B,EACAzL,EACAlD,EAKJ,IAHAF,EAAM,GAEN+P,GADAD,EAASH,GAAYmC,KACL3R,OACVD,EAAI,EAAGA,EAAI6P,EAAQ7P,IAAM,CAI9B,IAHA8M,EAAM8C,EAAQ5P,GACd2O,EAAIiD,GAAY9E,GAChBzG,EAAM,GACAnD,EAAI,EAAGA,EAAI2M,EAAQ3M,IAExBmD,EADA0G,EAAM6C,EAAQ1M,IACDyL,EAAG5B,GAEjBjN,EAAKgN,GAAQzG,EAEd,OAAOvG,EASR,SAAS6P,KACR,IAAIC,EACAC,EACA/P,EACAuG,EACAyG,EACAC,EACA4B,EACAzL,EACAlD,EAKJ,IAHAF,EAAM,GAEN+P,GADAD,EAASH,GAAYmC,KACL3R,OACVD,EAAI,EAAGA,EAAI6P,EAAQ7P,IAAM,CAI9B,IAHA8M,EAAM8C,EAAQ5P,GACd2O,EAAIiD,GAAY9E,GAChBzG,EAAM,GACAnD,EAAI,EAAGA,EAAI2M,EAAQ3M,IAEN,IAAbyL,EADL5B,EAAM6C,EAAQ1M,KAEbmD,EAAInG,KAAM6M,GAGZjN,EAAKgN,GAAQzG,EAEd,OAAOvG,EAiCR,IEvGI4R,GFuGJxI,GAjBA,SAAoBC,GACnB,OAA0B,IAArBnD,UAAU/F,OACPsR,WAEO,IAAVG,KAEJA,GAAQ/B,MAEJ1F,GAAYyH,GAAOvI,GAChBuI,GAAOvI,GAAQmC,QAEhB,OGvFRnM,GALgBQ,GDZZ8P,GAAa9P,GACbsK,GAAa7I,EACbyQ,k8CAgBJ,SAASN,KACR,IAAI3B,EACAC,EACA/P,EACAuG,EACAyG,EACAC,EACA4B,EACAzL,EACAlD,EAKJ,IAHAF,EAAM,GAEN+P,GADAD,EAASH,GAAYoC,KACL5R,OACVD,EAAI,EAAGA,EAAI6P,EAAQ7P,IAAM,CAI9B,IAHA8M,EAAM8C,EAAQ5P,GACd2O,EAAIkD,GAAiB/E,GACrBzG,EAAM,GACAnD,EAAI,EAAGA,EAAI2M,EAAQ3M,IAExBmD,EADA0G,EAAM6C,EAAQ1M,IACDyL,EAAG5B,GAEjBjN,EAAKgN,GAAQzG,EAEd,OAAOvG,EASR,SAAS6P,KACR,IAAIC,EACAC,EACA/P,EACAuG,EACAyG,EACAC,EACA4B,EACAzL,EACAlD,EAKJ,IAHAF,EAAM,GAEN+P,GADAD,EAASH,GAAYoC,KACL5R,OACVD,EAAI,EAAGA,EAAI6P,EAAQ7P,IAAM,CAI9B,IAHA8M,EAAM8C,EAAQ5P,GACd2O,EAAIkD,GAAiB/E,GACrBzG,EAAM,GACAnD,EAAI,EAAGA,EAAI2M,EAAQ3M,IAEN,IAAbyL,EADL5B,EAAM6C,EAAQ1M,KAEbmD,EAAInG,KAAM6M,GAGZjN,EAAKgN,GAAQzG,EAEd,OAAOvG,EAiCR,IAAAoJ,GAjBA,SAAwBC,GACvB,OAA0B,IAArBnD,UAAU/F,OACPsR,WAEO,IAAVG,KAEJA,GAAQ/B,MAEJ1F,GAAYyH,GAAOvI,GAChBuI,GAAOvI,GAAQmC,QAEhB,OEvFRnM,GALoBQ,GCZhBwC,GAAoBxC,EACpB4C,GAASnB,EAab,SAAS0Q,GAASC,EAAO3R,GACxB,IAAIsC,EAAItC,EAAK,GAKb,OAJK+B,GAAmBO,KACvBqP,EAAM7R,KAAMwC,EAAEzC,QACd6R,GAASC,EAAOrP,IAEVqP,EAcR,SAASC,GAAOC,EAAOF,EAAOlR,EAAGT,EAAKkG,GACrC,IAAIvG,EACA2C,EACA1C,EAMJ,IAHAD,EAAMgS,EAAOlR,GAGPb,EAAI,EAAGA,EAAII,EAAIH,OAAQD,IAAM,CAIlC,GAHA0C,EAAItC,EAAKJ,IAGHmC,GAAmBO,IAAOA,EAAEzC,SAAWF,EAE5C,OAAOc,EAGR,GAAKyF,IACJ5D,EAAIsP,GAAOC,EAAOF,EAAOlR,EAAE,EAAG6B,EAAG7B,EAAE,EAAIoR,EAAM,IACpCA,EAER,OAAOvP,EAIV,OAAOuP,EAwDR,ICjFA9S,GDwDA,SAAqBiB,GACpB,IAAI2R,EACAE,EAEJ,IAAM9P,GAAmB/B,GACxB,MAAM,IAAI0C,UAAWP,GAAQ,oEAAqEnC,IAcnG,OARA0R,GAHAC,EAAQ,CAAE3R,EAAIH,QAGEG,IAChB6R,EAAQF,EAAM9R,QAGD,IAEZ8R,EAAM9R,OAAS+R,GAAOC,EAAOF,EAAO,EAAG3R,EAAK6R,EAAQ,IAE9CF,GEjGR,ICKIjQ,GClBsC,mBAAtBoQ,kBAAqCA,kBAAoB,KDmBzElQ,GDbJ,SAAmBmQ,GAClB,MAAM,IAAIlQ,MAAO,yOC2BlB9C,GAjBkCQ,KAS1BmC,GAEAE,GE5BJd,GAAcvB,EACdsK,GAAa7I,EACbqC,GAAapC,EACbgC,GAAe/B,EACfiC,GAAWhC,EACX4B,GAAuB3B,EAAmD4B,YAC1EgP,GAAiB3Q,EACjB/B,GAAmBgC,GACnBa,GAASZ,EA0Ob,IAAAuH,GAxMA,SAASmJ,EAAoBjM,GAC5B,IAAI9F,EACAyK,EACAuH,EACAtH,EACAlE,EACAC,EACAmE,EACApM,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAM7G,GAJA4E,EAAO,CACNlE,KAAQ,MACRyL,IAAO,GAEHvM,UAAU/F,OAAS,EACvB,GAAKsD,GAAUyC,UAAW,IAAQ,CAEjC,GADA+E,EAAU/E,UAAW,GAChBA,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,uEAAwE2I,IAEtG5K,EAAU0F,UAAW,GAEtB,GAAKiE,GAAYc,EAAS,UACzBC,EAAKlE,KAAOiE,EAAQjE,MACd3D,GAAsB4H,EAAQjE,OACnC,MAAM,IAAIhE,UAAWP,GAAQ,2EAA4E,OAAQwI,EAAQjE,OAG3H,GAAKmD,GAAYc,EAAS,SACzBC,EAAKuH,IAAMxH,EAAQwH,IACE,IAAhBxH,EAAQwH,MAA8B,IAAjBxH,EAAQwH,KACjC,MAAM,IAAIzP,UAAWP,GAAQ,wEAAyE,MAAOwI,EAAQwH,UAGjH,CAEN,IAAM9O,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,iGAAkG2I,IAEhI5K,EAAU0F,UAAW,GA+BvB,OA5BAsM,EAAQ,EAGRxL,EAAO,GACFoE,EACc,IAAbF,EAAKuH,KACTvS,GAAK,EACLkB,GAAa4F,EAAM,OAAQ0L,KAE3BxS,EAAIoG,EAAInG,OACRiB,GAAa4F,EAAM,OAAQ2L,IAEJ,IAAbzH,EAAKuH,KAChBvS,GAAK,EACLkB,GAAa4F,EAAM,OAAQ4L,KAE3B1S,EAAIoG,EAAInG,OACRiB,GAAa4F,EAAM,OAAQ6L,IAE5BzR,GAAa4F,EAAM,SAAUmE,GAGxBmH,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAAS0L,IAGR,OAFAxS,GAAKA,EAAE,GAAKoG,EAAInG,OAChBqS,GAAS,EACJvL,GAAOuL,EAAQtH,EAAKlE,MAAuB,IAAfV,EAAInG,OAC7B,CACN4C,MAAQ,GAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGsS,EAAOlM,GACrDvD,MAAQ,GAUV,SAAS4P,IAMR,OALAzS,GAAK,GACI,IACRA,GAAKoG,EAAInG,QAEVqS,GAAS,EACJvL,GAAOuL,EAAQtH,EAAKlE,MAAuB,IAAfV,EAAInG,OAC7B,CACN4C,MAAQ,GAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGsS,EAAOlM,GACrDvD,MAAQ,GAUV,SAAS6P,IAGR,OAFA1S,GAAKA,EAAE,GAAKoG,EAAInG,OAChBqS,GAAS,EACJvL,GAAOuL,EAAQtH,EAAKlE,MAAuB,IAAfV,EAAInG,OAC7B,CACN4C,MAAQ,GAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAUV,SAAS8P,IAMR,OALA3S,GAAK,GACI,IACRA,GAAKoG,EAAInG,QAEVqS,GAAS,EACJvL,GAAOuL,EAAQtH,EAAKlE,MAAuB,IAAfV,EAAInG,OAC7B,CACN4C,MAAQ,GAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASoI,EAAKjM,GAEb,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACGmH,EAAoBjM,EAAK4E,EAAME,EAAK5K,GAErC+R,EAAoBjM,EAAK4E,KChNlC7L,GALeQ,GCtBXuB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACf+Q,GAAiB9Q,EACjB5B,GAAmB6B,GACnBgB,GAASf,EA6Ib,IAAA0H,GAhHA,SAAS2J,EAAgBzM,GACxB,IAAI9F,EACAwG,EACAC,EACAmE,EACApM,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAE7G,GAAKJ,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,qEAAsE2I,IAEpG5K,EAAU0F,UAAW,GAoBtB,OAlBAhG,GAAK,EAKJkB,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUmE,GAGxBmH,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IAER,OADA9S,GAAK,EACA+G,GAAO/G,GAAKoG,EAAInG,OACb,CACN4C,MAAQ,GAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGoG,GAC9CvD,MAAQ,GAUV,SAASkQ,IAER,OADA/S,GAAK,EACA+G,GAAO/G,GAAKoG,EAAInG,OACb,CACN4C,MAAQ,GAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASoI,EAAKjM,GAEb,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACG2H,EAAgBzM,EAAK8E,EAAK5K,GAE3BuS,EAAgBzM,KChHzBjH,GALeQ,GCtBXuB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACf+Q,GAAiB9Q,EACjB5B,GAAmB6B,GACnBgB,GAASf,EAuJb,IAAA0H,GAtHA,SAAS8J,EAAqB5M,GAC7B,IAAI9F,EACAwG,EACAC,EACAmE,EACAnL,EACAjB,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAE7G,GAAKJ,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,qEAAsE2I,IAEpG5K,EAAU0F,UAAW,GAqBtB,OAnBAjG,EAAMqG,EAAInG,OACVD,EAAID,EAKHmB,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUmE,GAGxBmH,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IAGR,OAFA9S,GAAKoG,EAAInG,OAASF,EAAM,EACxBA,EAAMqG,EAAInG,OACL8G,GAAO/G,EAAI,GACf+G,GAAM,EACC,CACNlE,MAAQ,IAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGoG,GAC9CvD,MAAQ,GAUV,SAASkQ,IAGR,OAFA/S,GAAKoG,EAAInG,OAASF,EAAM,EACxBA,EAAMqG,EAAInG,OACL8G,GAAO/G,EAAI,GACf+G,GAAM,EACC,CACNlE,MAAQ,IAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASoI,EAAKjM,GAEb,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACG8H,EAAqB5M,EAAK8E,EAAK5K,GAEhC0S,EAAqB5M,KC1H9BjH,GALeQ,GCtBXsT,GAAatT,GACbuT,GAAW9R,EACX+R,GAAiB9R,GACjB6G,GCYQ,CACX,CARkBvG,GAQF,gBAChB,CAVkBD,GAUF,gBAChB,CAbgBF,GAaF,cACd,CAbiBC,GAaF,eACf,CAjBgBH,GAiBF,cACd,CAjBiBC,GAiBF,eACf,CAtBe5B,GAsBF,aACb,CAtBgByB,GAsBF,cACd,CAtBuBC,GAsBF,qBACrB,CAhBoBO,GAgBF,kBAClB,CAhBqBC,GAgBF,oBDqBpB,IE/CIuR,GAAezT,GACf0T,GAAsBjS,GACtBoD,GAAgBnD,EAChBqD,GAAiBpD,EACjBiB,GAAShB,EACT+R,GFiBJ,SAAmBlT,GAClB,IAAIsC,EACA1C,EAGJ,IAAMA,EAAI,EAAGA,EAAIkI,GAAMjI,OAAQD,IAC9B,GAAKiT,GAAY7S,EAAK8H,GAAOlI,GAAK,IACjC,OAAOkI,GAAOlI,GAAK,GAIrB,KAAQI,GAAM,CAEb,IADAsC,EAAIwQ,GAAU9S,GACRJ,EAAI,EAAGA,EAAIkI,GAAMjI,OAAQD,IAC9B,GAAK0C,IAAMwF,GAAOlI,GAAK,GACtB,OAAOkI,GAAOlI,GAAK,GAGrBI,EAAM+S,GAAgB/S,KEmBxB,ICxCAjB,GDWA,SAAiBiB,GAChB,IAAId,EACAQ,EACAE,EAEJ,GAAKoT,GAAchT,GAClBd,EAAOc,MACD,CAAA,IAAKiT,GAAqBjT,GAOhC,MAAM,IAAI0C,UAAWP,GAAQ,6DAA8DnC,IAL1Fd,EAD8B,IAA1Bc,EAAI+E,kBACDX,GAAepE,EAAK,GAEpBsE,GAAgBtE,EAAK,GAS9B,IAJAN,EAAM,CACL0K,KAAQ8I,GAAUlT,GAClBd,KAAQ,IAEHU,EAAI,EAAGA,EAAIV,EAAKW,OAAQD,IAC7BF,EAAIR,KAAKY,KAAMZ,EAAMU,IAEtB,OAAOF,GErDJoB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACf+Q,GAAiB9Q,EACjB5B,GAAmB6B,GACnBgB,GAASf,EAiKb,IAAA0H,GAtIA,SAASqK,EAAsBnN,GAC9B,IAAI9F,EACAwG,EACAC,EACAmE,EACApM,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAE7G,GAAKJ,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,qEAAsE2I,IAEpG5K,EAAU0F,UAAW,GAoBtB,OAlBAhG,GAAK,EAKJkB,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUmE,GAGxBmH,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IACR,IAAI/S,EACJ,GAAKgH,EACJ,MAAO,CACNlE,MAAQ,GAKV,IAFA9C,EAAMqG,EAAInG,OACVD,GAAK,EACGA,EAAID,QAAyB,IAAlBjB,EAAKsH,EAAKpG,IAC5BA,GAAK,EAEN,OAAKA,GAAKD,GACTgH,GAAM,EACC,CACNlE,MAAQ,IAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGoG,GAC9CvD,MAAQ,GAUV,SAASkQ,IACR,IAAIhT,EACJ,GAAKgH,EACJ,MAAO,CACNlE,MAAQ,GAKV,IAFA9C,EAAMqG,EAAInG,OACVD,GAAK,EACGA,EAAID,QAAyB,IAAlBjB,EAAKsH,EAAKpG,IAC5BA,GAAK,EAEN,OAAKA,GAAKD,GACTgH,GAAM,EACC,CACNlE,MAAQ,IAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASoI,EAAKjM,GAEb,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACGqI,EAAsBnN,EAAK8E,EAAK5K,GAEjCiT,EAAsBnN,KCtI/BjH,GALeQ,GCpBXuB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACf+Q,GAAiB9Q,EACjB5B,GAAmB6B,GACnBgB,GAASf,EAqKb,IAAA0H,GAtIA,SAASsK,EAA2BpN,GACnC,IAAI9F,EACAwG,EACAC,EACAmE,EACAnL,EACAjB,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAE7G,GAAKJ,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,qEAAsE2I,IAEpG5K,EAAU0F,UAAW,GAqBtB,OAnBAjG,EAAMqG,EAAInG,OACVD,EAAID,EAKHmB,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUmE,GAGxBmH,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IACR,GAAK/L,EACJ,MAAO,CACNlE,MAAQ,GAKV,IAFA7C,GAAKoG,EAAInG,OAASF,EAAM,EACxBA,EAAMqG,EAAInG,OACFD,GAAK,QAAuB,IAAlBlB,EAAKsH,EAAKpG,IAC3BA,GAAK,EAEN,OAAKA,EAAI,GACR+G,GAAM,EACC,CACNlE,MAAQ,IAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGoG,GAC9CvD,MAAQ,GAUV,SAASkQ,IACR,GAAKhM,EACJ,MAAO,CACNlE,MAAQ,GAKV,IAFA7C,GAAKoG,EAAInG,OAASF,EAAM,EACxBA,EAAMqG,EAAInG,OACFD,GAAK,QAAuB,IAAlBlB,EAAKsH,EAAKpG,IAC3BA,GAAK,EAEN,OAAKA,EAAI,GACR+G,GAAM,EACC,CACNlE,MAAQ,IAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASoI,EAAKjM,GAEb,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACGsI,EAA2BpN,EAAK8E,EAAK5K,GAEtCkT,EAA2BpN,KC1IpCjH,GALeQ,GCpBXuB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACf8B,GAAuB7B,EAAmD8B,YAC1EO,GAAYpC,EAAuC6B,YACnDgP,GAAiB5Q,EACjB9B,GAAmB+B,GACnBc,GAASb,EA0Kb,IAAAwH,GAjIA,SAASuK,EAAuB7S,EAAGwF,EAAKsN,EAAQC,GAC/C,IAAIrT,EACAwG,EACAC,EACAmE,EACAtM,EACAE,EACAkB,EACJ,IAAMmD,GAAsBvC,GAC3B,MAAM,IAAIkC,UAAWP,GAAQ,+EAAgF3B,IAE9G,IAAMyC,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,+EAAgF6D,IAE9G,IAAMzC,GAAW+P,GAChB,MAAM,IAAI5Q,UAAWP,GAAQ,oEAAqEmR,IAEnG,IAAMvQ,GAAsBwQ,GAC3B,MAAM,IAAI7Q,UAAWP,GAAQ,gFAAiFoR,IAE/G,GAAK3N,UAAU/F,OAAS,EAAI,CAE3B,IAAMwD,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,oEAAqE2I,IAEnG5K,EAAU0F,UAAW,GAqBtB,OAnBApH,EAAM+U,EACN3T,GAAK,EAKJkB,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUmE,GAGxBmH,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IACR,IAAIpQ,EAEJ,OADA1C,GAAK,EACA+G,GAAO/G,GAAKY,EACT,CACNiC,MAAQ,IAGVH,EAAIwI,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKxH,GAAOA,EAAKoB,EAAGoG,GAChDxH,GAAO8U,EACA,CACN1U,MAAS0D,EACTG,MAAQ,IAUV,SAASkQ,IACR,IAAIrQ,EAEJ,OADA1C,GAAK,EACA+G,GAAO/G,GAAKY,EACT,CACNiC,MAAQ,IAGVH,EAAI5D,EAAKsH,EAAKxH,GACdA,GAAO8U,EACA,CACN1U,MAAS0D,EACTG,MAAQ,IAWV,SAASoI,EAAKjM,GAEb,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACGuI,EAAuB7S,EAAGwF,EAAKsN,EAAQC,EAAQzI,EAAK5K,GAErDmT,EAAuB7S,EAAGwF,EAAKsN,EAAQC,KCzIhDxU,GALeQ,GC5BXuB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACfsC,GAAYrC,EAAuC8B,YACnDgP,GAAiB7Q,EACjB7B,GAAmB8B,GACnBe,GAASd,EAkMb,IAAAyH,GAnKA,SAAS0K,EAAoBxN,GAC5B,IAAI9F,EACAuT,EACA9N,EACAe,EACAC,EACAmE,EACAD,EACAnM,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAG7G,GAAe,KADfL,EAAQC,UAAU/F,QAEjB4T,EAAQ,EACR5I,EAAM7E,EAAInG,YACJ,GAAe,IAAV8F,EACNtC,GAAYuC,UAAW,KAC3B6N,EAAQ,EACR3I,EAAMlF,UAAW,IAEjB6N,EAAQ7N,UAAW,GAEpBiF,EAAM7E,EAAInG,YACJ,GAAe,IAAV8F,EACNtC,GAAYuC,UAAW,KAC3B6N,EAAQ,EACR5I,EAAM7E,EAAInG,OACViL,EAAMlF,UAAW,GACjB1F,EAAU0F,UAAW,IACVvC,GAAYuC,UAAW,KAClC6N,EAAQ7N,UAAW,GACnBiF,EAAM7E,EAAInG,OACViL,EAAMlF,UAAW,KAEjB6N,EAAQ7N,UAAW,GACnBiF,EAAMjF,UAAW,QAEZ,CAIN,GAHA6N,EAAQ7N,UAAW,GACnBiF,EAAMjF,UAAW,IAEXvC,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,qEAAsE2I,IAEpG5K,EAAU0F,UAAW,GAEtB,IAAMrC,GAAWkQ,GAChB,MAAM,IAAI/Q,UAAWP,GAAQ,oHAAqHsR,IAEnJ,IAAMlQ,GAAWsH,GAChB,MAAM,IAAInI,UAAWP,GAAQ,iHAAkH0I,IAkChJ,OAhCKA,EAAM,GACVA,EAAM7E,EAAInG,OAASgL,GACR,IACVA,EAAM,GAEIA,EAAM7E,EAAInG,SACrBgL,EAAM7E,EAAInG,QAEN4T,EAAQ,IACZA,EAAQzN,EAAInG,OAAS4T,GACR,IACZA,EAAQ,GAGV7T,EAAI6T,EAAQ,EAKX3S,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUgN,GAGxB1B,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IAER,OADA9S,GAAK,EACA+G,GAAO/G,GAAKiL,EACT,CACNpI,MAAQ,GAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGA,EAAE6T,EAAOzN,GACvDvD,MAAQ,GAUV,SAASkQ,IAER,OADA/S,GAAK,EACA+G,GAAO/G,GAAKiL,EACT,CACNpI,MAAQ,GAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASiR,EAAQ9U,GAEhB,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACG0I,EAAoBxN,EAAKyN,EAAO5I,EAAKC,EAAK5K,GAE3CsT,EAAoBxN,EAAKyN,EAAO5I,KCxKzC9L,GALeQ,GCpBXuB,GAAcvB,EACd8D,GAAarC,EACbiC,GAAehC,EACfsC,GAAYrC,EAAuC8B,YACnDgP,GAAiB7Q,EACjB7B,GAAmB8B,GACnBe,GAASd,EAkMb,IAAAyH,GAnKA,SAAS6K,EAAyB3N,GACjC,IAAI9F,EACAuT,EACA9N,EACAe,EACAC,EACAmE,EACAD,EACAnM,EACAkB,EACJ,IAAMqD,GAAc+C,GACnB,MAAM,IAAItD,UAAWP,GAAQ,8EAA+E6D,IAG7G,GAAe,KADfL,EAAQC,UAAU/F,QAEjB4T,EAAQ,EACR5I,EAAM7E,EAAInG,YACJ,GAAe,IAAV8F,EACNtC,GAAYuC,UAAW,KAC3B6N,EAAQ,EACR3I,EAAMlF,UAAW,IAEjB6N,EAAQ7N,UAAW,GAEpBiF,EAAM7E,EAAInG,YACJ,GAAe,IAAV8F,EACNtC,GAAYuC,UAAW,KAC3B6N,EAAQ,EACR5I,EAAM7E,EAAInG,OACViL,EAAMlF,UAAW,GACjB1F,EAAU0F,UAAW,IACVvC,GAAYuC,UAAW,KAClC6N,EAAQ7N,UAAW,GACnBiF,EAAM7E,EAAInG,OACViL,EAAMlF,UAAW,KAEjB6N,EAAQ7N,UAAW,GACnBiF,EAAMjF,UAAW,QAEZ,CAIN,GAHA6N,EAAQ7N,UAAW,GACnBiF,EAAMjF,UAAW,IAEXvC,GADNyH,EAAMlF,UAAW,IAEhB,MAAM,IAAIlD,UAAWP,GAAQ,qEAAsE2I,IAEpG5K,EAAU0F,UAAW,GAEtB,IAAMrC,GAAWkQ,GAChB,MAAM,IAAI/Q,UAAWP,GAAQ,yHAA0HsR,IAExJ,IAAMlQ,GAAWsH,GAChB,MAAM,IAAInI,UAAWP,GAAQ,sHAAuH0I,IAkCrJ,OAhCKA,EAAM,GACVA,EAAM7E,EAAInG,OAASgL,GACR,IACVA,EAAM,GAEIA,EAAM7E,EAAInG,SACrBgL,EAAM7E,EAAInG,QAEN4T,EAAQ,IACZA,EAAQzN,EAAInG,OAAS4T,GACR,IACZA,EAAQ,GAGV7T,EAAIiL,EAKH/J,GAFD4F,EAAO,GAEa,OADfoE,EACuB4H,EAEAC,GAE5B7R,GAAa4F,EAAM,SAAUgN,GAGxB1B,IACJlR,GAAa4F,EAAMsL,GAAgBQ,GAGpC9T,EAAMY,GAAkB0G,GAAM5G,OAEvBsH,EAQP,SAASgM,IAER,OADA9S,GAAK,EACA+G,GAAO/G,EAAI6T,EACR,CACNhR,MAAQ,GAGH,CACN7D,MAASkM,EAAI3K,KAAMD,EAASxB,EAAKsH,EAAKpG,GAAKA,EAAGiL,EAAIjL,EAAE,EAAGoG,GACvDvD,MAAQ,GAUV,SAASkQ,IAER,OADA/S,GAAK,EACA+G,GAAO/G,EAAI6T,EACR,CACNhR,MAAQ,GAGH,CACN7D,MAASF,EAAKsH,EAAKpG,GACnB6C,MAAQ,GAWV,SAASiR,EAAQ9U,GAEhB,OADA+H,GAAM,EACDf,UAAU/F,OACP,CACNjB,MAASA,EACT6D,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAAS+P,IACR,OAAK1H,EACG6I,EAAyB3N,EAAKyN,EAAO5I,EAAKC,EAAK5K,GAEhDyT,EAAyB3N,EAAKyN,EAAO5I,KCxK9C9L,GALeQ,GCpBXuK,GAAWvK,EAAsCyD,YACjDiG,GAAQjI,GACRsD,GAAiBrD,EACjBmD,GAAgBlD,EAChBiB,GAAShB,EAKT+D,GAAiB+D,GAAO,aACxB/B,GAAkB+B,GAAO,cA+H7B,IAAAH,GAxCA,WACC,IAAInD,EACAoD,EACAQ,EACAgC,EAUJ,GALCxC,GAHDpD,EAAQC,UAAU/F,SACJiK,GAAUlE,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD,UAGK,QADd4D,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAErG,OAAKpD,GAAS,EACN,IAAI4D,EAAM,GAEH,IAAV5D,IACJ4F,EAAM3F,UAAW,cAGGV,GACnBqG,EAAMnH,GAAemH,EAAK,GACfA,aAAerE,KAC1BqE,EAAMjH,GAAgBiH,EAAK,IAErB,IAAIhC,EAAMgC,IAEH,IAAV5F,EACG,IAAI4D,EAAM3D,UAAU,GAAIA,UAAU,IAEnC,IAAI2D,EAAM3D,UAAU,GAAIA,UAAU,GAAIA,UAAU,KC5BxD7G,GALWQ,GClGP0I,GCOQ,CACXY,WARqBtJ,GASrBqJ,UARoB5H,IDyBrB,IAAA8H,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfRuK,GAAWvK,EAAsCyD,YACjDb,GAASnB,EACTiI,GAAQhI,GAsHZ,IAAA6H,GA/BA,WACC,IAAInD,EACAoD,EACAQ,EAUJ,GALCR,GAHDpD,EAAQC,UAAU/F,SACJiK,GAAUlE,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD,aAGK,QADd4D,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAErG,OAAKpD,GAAS,EACN,IAAI4D,EAAM,GAEH,IAAV5D,EACG,IAAI4D,EAAM3D,UAAU,IAEb,IAAVD,EACG,IAAI4D,EAAM3D,UAAU,GAAIA,UAAU,IAEnC,IAAI2D,EAAM3D,UAAU,GAAIA,UAAU,GAAIA,UAAU,KCXxD7G,GALWQ,GClGPwI,8BAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXnD,4GAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXnD,kDAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXjD,GCYQ,CACXI,MAbgB9I,GAchB+I,MAbgBtH,GAchBuH,KAbetH,GAcfuH,OAbiBtH,GAcjBuH,OAbiBtH,GAcjBuH,MAbgBtH,GAchBuH,OAbuBtH,IDoBxB,IAAAyH,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfRwI,+DAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXpB,GAAWvK,EAAsCyD,YACjDb,GAASnB,EACTiI,GAAQhI,GAsHZ,IAAA6H,GA/BA,WACC,IAAInD,EACAoD,EACAQ,EAUJ,GALCR,GAHDpD,EAAQC,UAAU/F,SACJiK,GAAUlE,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD,UAGK,QADd4D,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,sEAAuE4G,IAErG,OAAKpD,GAAS,EACN,IAAI4D,EAAM,GAEH,IAAV5D,EACG,IAAI4D,EAAM3D,UAAU,IAEb,IAAVD,EACG,IAAI4D,EAAM3D,UAAU,GAAIA,UAAU,IAEnC,IAAI2D,EAAM3D,UAAU,GAAIA,UAAU,GAAIA,UAAU,KCXxD7G,GALWQ,GClGP0I,GCcQ,CACXC,QAfkB3I,GAgBlB4I,QAfkBnH,GAgBlBqH,MAfgBpH,GAgBhBqH,MAfgBpH,GAgBhBqH,KAfepH,GAgBfqH,OAfiBpH,GAgBjBqH,OAfiBpH,GAgBjBqH,MAfgBpH,GAgBhBqH,OAfuBpH,IDkBxB,IAAAuH,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfRwI,mFAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXjD,GCOQ,CACXC,QARkB3I,GASlB4I,QARkBnH,IDyBnB,IAAA8H,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfRwI,yBAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXjD,GCQQ,CACXI,MATgB9I,GAUhB+I,MATgBtH,GAUhBuH,KATetH,IDwBhB,IAAA6H,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfRwI,4BAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXjD,GCSQ,CACXO,OAViBjJ,GAWjBkJ,OAViBzH,GAWjB0H,MAVgBzH,GAWhB0H,OAVuBzH,IDuBxB,IAAA4H,GAPA,SAAgBC,GACf,OAAOd,GAAOc,IAAW,MEA1BhK,GALYQ,GCfRwI,wCAqBJ,ICJAhJ,GDHA,WACC,OAAOgJ,GAAOmD,SEfXnI,GAAuBxD,EAAmDyD,YAC1EiG,GAAQjI,GACR4S,GAAS3S,GACTkB,GAASjB,EA8Cb,IAAA4H,GAxBA,SAAgBjJ,GACf,IAAIkJ,EACAQ,EACJ,IAAMxG,GAAsBlD,GAC3B,MAAM,IAAI6C,UAAWP,GAAQ,+EAAgFtC,IAO9G,GAAe,aAJdkJ,EADInD,UAAU/F,OAAS,EACf+F,UAAW,GAEX,WAGR,OAAOgO,GAAQ/T,GAGhB,GAAc,QADd0J,EAAON,GAAOF,IAEb,MAAM,IAAIrG,UAAWP,GAAQ,iFAAkF4G,IAEhH,OAAO,IAAIQ,EAAM1J,ICpBlBd,GALWQ,GClBP4C,GAAS5C,EACTwJ,GAAQ/H,GACR6S,GAAQ5S,GAoCZ,ICfAlC,GDCA,SAAoBR,GACnB,IAAI0N,EAAKlD,GAAOxK,GAChB,GAAY,OAAP0N,EACJ,MAAM,IAAIvJ,UAAWP,GAAQ,8GAA+G5D,IAK7I,OAHKqH,UAAU/F,OAAS,IACvBoM,EAAKrG,UAAW,IAEViO,GAAOtV,EAAEsB,OAAQoM,IE5BzBnL,GAAAvB,EAUAwB,GAAA,GASAD,GAAAC,GAAA,OAAAC,IASAF,GAAAC,GAAA,cAAAE,IASAH,GAAAC,GAAA,iBAAAG,IASAJ,GAAAC,GAAA,kBAAAI,IASAL,GAAAC,GAAA,eAAAK,IASAN,GAAAC,GAAA,mBAAAM,IASAP,GAAAC,GAAA,aAAAO,IASAR,GAAAC,GAAA,WAAAQ,IASAT,GAAAC,GAAA,YAAAS,IASAV,GAAAC,GAAA,gBAAAU,IASAX,GAAAC,GAAA,iBAAA2C,IASA5C,GAAAC,GAAA,cAAA4C,IASA7C,GAAAC,GAAA,gBAAA8C,IASA/C,GAAAC,GAAA,eAAA+C,IASAhD,GAAAC,GAAA,eAAAiD,IASAlD,GAAAC,GAAA,iBAAAkD,IASAnD,GAAAC,GAAA,QAAAmD,IASApD,GAAAC,GAAA,YAAAoD,IASArD,GAAAC,GAAA,YAAAsD,IASAvD,GAAAC,GAAA,YAAAwD,IASAzD,GAAAC,GAAA,aAAAyD,IASA1D,GAAAC,GAAA,aAAA2D,IASA5D,GAAAC,GAAA,WAAA6D,IASA9D,GAAAC,GAAA,WAAA+D,IASAhE,GAAAC,GAAA,mBAAA+S,IASAhT,GAAAC,GAAA,oBAAAgT,IASAjT,GAAAC,GAAA,QAAAiT,IASAlT,GAAAC,GAAA,YAAAkT,IASAnT,GAAAC,GAAA,iBAAAmT,IASApT,GAAAC,GAAA,sBAAAoT,IASArT,GAAAC,GAAA,mBAAAqT,IASAtT,GAAAC,GAAA,iBAAAsT,IASAvT,GAAAC,GAAA,qBAAAuT,IASAxT,GAAAC,GAAA,aAAAwT,IASAzT,GAAAC,GAAA,oBAAAyT,IASA1T,GAAAC,GAAA,qBAAA0T,IASA3T,GAAAC,GAAA,iBAAA2T,IASA5T,GAAAC,GAAA,sBAAA4T,IASA7T,GAAAC,GAAA,kBAAA6T,IASA9T,GAAAC,GAAA,uBAAA8T,IASA/T,GAAAC,GAAA,4BAAA+T,IASAhU,GAAAC,GAAA,wBAAAgU,IASAjU,GAAAC,GAAA,qBAAAiU,IASAlU,GAAAC,GAAA,0BAAAkU,IASAnU,GAAAC,GAAA,aAAAmU,IASApU,GAAAC,GAAA,eAAAoU,IASArU,GAAAC,GAAA,oBAAAqU,IASAtU,GAAAC,GAAA,wBAAAsU,IASAvU,GAAAC,GAAA,kBAAAuU,IASAxU,GAAAC,GAAA,sBAAAwU,IASAzU,GAAAC,GAAA,kBAAAyU,IASA1U,GAAAC,GAAA,sBAAA0U,IASA3U,GAAAC,GAAA,gBAAA2U,IASA5U,GAAAC,GAAA,oBAAA4U,IASA7U,GAAAC,GAAA,YAAA6U,IASA9U,GAAAC,GAAA,iBAAA8U,IASA/U,GAAAC,GAAA,qBAAA+U,IASAhV,GAAAC,GAAA,sBAAAgV,IASAjV,GAAAC,GAAA,0BAAAiV,IASAlV,GAAAC,GAAA,sBAAAkV,IASAnV,GAAAC,GAAA,0BAAAmV,IASApV,GAAAC,GAAA,wBAAAoV,IASArV,GAAAC,GAAA,4BAAAqV,IASAtV,GAAAC,GAAA,aAAAsV,IASAvV,GAAAC,GAAA,oBAAAuV,IASAxV,GAAAC,GAAA,cAAAwV,IASAzV,GAAAC,GAAA,cAAAyV,IASA1V,GAAAC,GAAA,SAAA0V,IASA3V,GAAAC,GAAA,aAAA2V,IASA5V,GAAAC,GAAA,YAAA4V,IAKA,IAAA5X,GAAAgC"}