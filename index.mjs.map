{"version":3,"file":"index.mjs","sources":["../base/assert/is-accessor-array/lib/main.js","../base/getter/lib/main.js","../base/setter/lib/main.js","../base/accessor-getter/lib/main.js","../base/accessor-setter/lib/main.js","../dtype/lib/ctor2dtype.js","../float64/lib/main.js","../float64/lib/index.js","../float64/lib/polyfill.js","../float32/lib/main.js","../float32/lib/index.js","../float32/lib/polyfill.js","../uint32/lib/main.js","../uint32/lib/index.js","../uint32/lib/polyfill.js","../int32/lib/main.js","../int32/lib/index.js","../int32/lib/polyfill.js","../uint16/lib/main.js","../uint16/lib/index.js","../uint16/lib/polyfill.js","../int16/lib/main.js","../int16/lib/index.js","../int16/lib/polyfill.js","../uint8/lib/main.js","../uint8/lib/index.js","../uint8/lib/polyfill.js","../uint8c/lib/main.js","../uint8c/lib/index.js","../uint8c/lib/polyfill.js","../int8/lib/main.js","../int8/lib/index.js","../int8/lib/polyfill.js","../base/assert/is-complex64array/lib/main.js","../base/assert/is-complex128array/lib/main.js","../complex64/lib/from_iterator.js","../complex64/lib/from_iterator_map.js","../complex64/lib/from_array.js","../complex64/lib/main.js","../complex128/lib/from_iterator.js","../complex128/lib/from_iterator_map.js","../complex128/lib/from_array.js","../complex128/lib/main.js","../dtype/lib/ctors.js","../dtype/lib/dtypes.js","../dtype/lib/main.js","../base/accessors/lib/main.js","../base/accessor/lib/main.js","../base/arraylike2object/lib/main.js","../base/any/lib/main.js","../base/assert/contains/lib/main.js","../base/assert/contains/lib/factory.js","../base/assert/has-same-values/lib/main.js","../base/assert/contains/lib/index.js","../base/assert/lib/index.js","../base/resolve-getter/lib/main.js","../base/binarynd/lib/main.js","../base/copy-indexed/lib/main.js","../base/filled/lib/main.js","../base/zeros/lib/main.js","../base/broadcast-array/lib/main.js","../base/copy/lib/main.js","../base/every/lib/main.js","../base/filled-by/lib/main.js","../base/filled2d/lib/main.js","../base/filled3d/lib/main.js","../base/filled4d/lib/main.js","../base/filled5d/lib/main.js","../base/fillednd/lib/main.js","../base/fillednd-by/lib/main.js","../base/flatten/lib/assign.js","../base/flatten/lib/main.js","../base/flatten/lib/index.js","../base/flatten-by/lib/assign.js","../base/flatten-by/lib/main.js","../base/flatten2d/lib/main.js","../base/flatten2d-by/lib/main.js","../base/flatten3d/lib/main.js","../base/flatten3d-by/lib/main.js","../base/flatten4d/lib/main.js","../base/flatten4d-by/lib/main.js","../base/flatten5d/lib/main.js","../base/flatten5d-by/lib/main.js","../base/fliplr2d/lib/main.js","../base/fliplr3d/lib/main.js","../base/fliplr4d/lib/main.js","../base/flipud2d/lib/main.js","../base/flipud3d/lib/main.js","../base/flipud4d/lib/main.js","../base/incrspace/lib/main.js","../base/logspace/lib/main.js","../base/map2d/lib/main.js","../base/map3d/lib/main.js","../base/map4d/lib/main.js","../base/map5d/lib/main.js","../base/none/lib/main.js","../base/one-to/lib/main.js","../base/one-to/lib/assign.js","../base/flatten-by/lib/index.js","../base/flatten2d/lib/index.js","../base/flatten2d/lib/assign.js","../base/flatten2d-by/lib/index.js","../base/flatten2d-by/lib/assign.js","../base/flatten3d/lib/index.js","../base/flatten3d/lib/assign.js","../base/flatten3d-by/lib/index.js","../base/flatten3d-by/lib/assign.js","../base/flatten4d/lib/index.js","../base/flatten4d/lib/assign.js","../base/flatten4d-by/lib/index.js","../base/flatten4d-by/lib/assign.js","../base/flatten5d/lib/index.js","../base/flatten5d/lib/assign.js","../base/flatten5d-by/lib/index.js","../base/flatten5d-by/lib/assign.js","../base/map2d/lib/index.js","../base/map2d/lib/assign.js","../base/map3d/lib/index.js","../base/map3d/lib/assign.js","../base/map4d/lib/index.js","../base/map4d/lib/assign.js","../base/map5d/lib/index.js","../base/map5d/lib/assign.js","../base/one-to/lib/index.js","../base/slice/lib/main.js","../base/take2d/lib/main.js","../base/unarynd/lib/main.js","../base/zero-to/lib/main.js","../base/zero-to/lib/assign.js","../base/zero-to/lib/index.js","../base/lib/index.js","../base/any-by/lib/main.js","../base/any-by-right/lib/main.js","../base/bifurcate-entries/lib/main.js","../base/bifurcate-entries-by/lib/main.js","../base/bifurcate-indices/lib/main.js","../base/bifurcate-indices-by/lib/main.js","../base/bifurcate-values/lib/main.js","../base/bifurcate-values-by/lib/main.js","../base/binary2d/lib/main.js","../base/binary3d/lib/main.js","../base/binary4d/lib/main.js","../base/binary5d/lib/main.js","../base/broadcasted-binary2d/lib/main.js","../base/broadcasted-binary3d/lib/main.js","../base/broadcasted-binary4d/lib/main.js","../base/broadcasted-binary5d/lib/main.js","../base/broadcasted-quaternary2d/lib/main.js","../base/broadcasted-quinary2d/lib/main.js","../base/broadcasted-ternary2d/lib/main.js","../base/broadcasted-unary2d/lib/main.js","../base/broadcasted-unary3d/lib/main.js","../base/broadcasted-unary4d/lib/main.js","../base/broadcasted-unary5d/lib/main.js","../base/cartesian-power/lib/main.js","../base/cartesian-product/lib/main.js","../base/cartesian-square/lib/main.js","../base/dedupe/lib/main.js","../base/every-by/lib/main.js","../base/every-by-right/lib/main.js","../base/filled2d-by/lib/main.js","../base/filled3d-by/lib/main.js","../base/filled4d-by/lib/main.js","../base/filled5d-by/lib/main.js","../base/first/lib/main.js","../base/fliplr5d/lib/main.js","../base/flipud5d/lib/main.js","../base/from-strided/lib/main.js","../base/group-entries/lib/main.js","../base/group-entries-by/lib/main.js","../base/group-indices/lib/main.js","../base/group-indices-by/lib/main.js","../base/group-values/lib/main.js","../base/group-values-by/lib/main.js","../base/index-of/lib/main.js","../base/last/lib/main.js","../base/last-index-of/lib/main.js","../base/linspace/lib/main.js","../base/mskbinary2d/lib/main.js","../base/mskfilter/lib/main.js","../base/mskunary2d/lib/main.js","../base/mskunary3d/lib/main.js","../base/n-cartesian-product/lib/main.js","../base/none-by/lib/main.js","../base/none-by-right/lib/main.js","../base/ones/lib/main.js","../base/ones2d/lib/main.js","../base/ones3d/lib/main.js","../base/ones4d/lib/main.js","../base/ones5d/lib/main.js","../base/onesnd/lib/main.js","../base/quaternary2d/lib/main.js","../base/quaternary3d/lib/main.js","../base/quaternary4d/lib/main.js","../base/quaternary5d/lib/main.js","../base/quinary2d/lib/main.js","../base/quinary3d/lib/main.js","../base/quinary4d/lib/main.js","../base/quinary5d/lib/main.js","../base/reverse/lib/main.js","../base/strided2array2d/lib/main.js","../base/strided2array3d/lib/main.js","../base/strided2array4d/lib/main.js","../base/strided2array5d/lib/main.js","../base/take/lib/main.js","../base/take-indexed/lib/main.js","../base/take3d/lib/main.js","../base/ternary2d/lib/main.js","../base/ternary3d/lib/main.js","../base/ternary4d/lib/main.js","../base/ternary5d/lib/main.js","../base/to-accessor-array/lib/main.js","../base/to-deduped/lib/main.js","../base/to-reversed/lib/main.js","../base/unary2d/lib/main.js","../base/unary2d-by/lib/main.js","../base/unary3d/lib/main.js","../base/unary4d/lib/main.js","../base/unary5d/lib/main.js","../base/unitspace/lib/main.js","../base/zeros2d/lib/main.js","../base/zeros3d/lib/main.js","../base/zeros4d/lib/main.js","../base/zeros5d/lib/main.js","../base/zerosnd/lib/main.js","../buffer/lib/main.js","../buffer/lib/index.js","../buffer/lib/polyfill.js","../ctors/lib/ctors.js","../ctors/lib/main.js","../convert/lib/main.js","../convert-same/lib/main.js","../dataview/lib/main.js","../dataview/lib/index.js","../dataview/lib/polyfill.js","../datespace/lib/main.js","../defaults/lib/main.js","../defaults/lib/get.js","../defaults/lib/index.js","../dtypes/lib/main.js","../zeros/lib/main.js","../empty/lib/polyfill.js","../empty-like/lib/main.js","../filled/lib/main.js","../filled-by/lib/main.js","../from-iterator/lib/main.js","../full/lib/main.js","../full-like/lib/main.js","../incrspace/lib/main.js","../typed-float-ctors/lib/ctors.js","../typed-float-ctors/lib/main.js","../linspace/lib/generic_real.js","../linspace/lib/generic_complex.js","../linspace/lib/typed_real.js","../linspace/lib/typed_complex.js","../linspace/lib/validate.js","../linspace/lib/main.js","../linspace/lib/accessors_complex.js","../linspace/lib/accessors_real.js","../logspace/lib/main.js","../min-dtype/lib/main.js","../linspace/lib/index.js","../linspace/lib/assign.js","../nans/lib/main.js","../nans-like/lib/main.js","../next-dtype/lib/main.js","../ones/lib/main.js","../ones-like/lib/main.js","../typed-ctors/lib/ctors.js","../typed-ctors/lib/main.js","../pool/lib/validate.js","../pool/lib/pool.js","../pool/lib/factory.js","../pool/lib/defaults.js","../pool/lib/main.js","../pool/lib/index.js","../promotion-rules/lib/main.js","../reviver/lib/ctors.js","../reviver/lib/main.js","../safe-casts/lib/main.js","../same-kind-casts/lib/main.js","../shape/lib/main.js","../shared-buffer/lib/main.js","../shared-buffer/lib/index.js","../shared-buffer/lib/polyfill.js","../to-circular-iterator/lib/main.js","../to-iterator/lib/main.js","../to-iterator-right/lib/main.js","../to-json/lib/ctors.js","../to-json/lib/type.js","../to-json/lib/main.js","../to-sparse-iterator/lib/main.js","../to-sparse-iterator-right/lib/main.js","../to-strided-iterator/lib/main.js","../to-view-iterator/lib/main.js","../to-view-iterator-right/lib/main.js","../typed/lib/main.js","../typed-complex-ctors/lib/ctors.js","../typed-complex-ctors/lib/main.js","../typed-complex/lib/main.js","../typed-complex-dtypes/lib/main.js","../typed-dtypes/lib/main.js","../typed-float-dtypes/lib/main.js","../typed-integer-ctors/lib/ctors.js","../typed-integer-ctors/lib/main.js","../typed-integer-dtypes/lib/main.js","../typed-real/lib/main.js","../typed-real-ctors/lib/ctors.js","../typed-real-ctors/lib/main.js","../typed-real-dtypes/lib/main.js","../typed-real-float-ctors/lib/ctors.js","../typed-real-float-ctors/lib/main.js","../typed-real-float-dtypes/lib/main.js","../typed-signed-integer-ctors/lib/ctors.js","../typed-signed-integer-ctors/lib/main.js","../typed-signed-integer-dtypes/lib/main.js","../typed-unsigned-integer-ctors/lib/ctors.js","../typed-unsigned-integer-ctors/lib/main.js","../typed-unsigned-integer-dtypes/lib/main.js","../zeros-like/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar TYPE = 'function';\n\n\n// MAIN //\n\n/**\n* Tests if an array-like object supports the accessor (get/set) protocol.\n*\n* @param {Object} value - value to test\n* @returns {boolean} boolean indicating whether a value is an accessor array\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var bool = isAccessorArray( new Complex128Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isAccessorArray( [] );\n* // returns false\n*/\nfunction isAccessorArray( value ) {\n\treturn ( typeof value.get === TYPE && typeof value.set === TYPE ); // eslint-disable-line valid-typeof\n}\n\n\n// EXPORTS //\n\nexport default isAccessorArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'float64': getFloat64,\n\t'float32': getFloat32,\n\t'int32': getInt32,\n\t'int16': getInt16,\n\t'int8': getInt8,\n\t'uint32': getUint32,\n\t'uint16': getUint16,\n\t'uint8': getUint8,\n\t'uint8c': getUint8c,\n\t'generic': getGeneric,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat64( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat64( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* var arr = new Float32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getFloat32( arr, 2 );\n* // returns 3.0\n*/\nfunction getFloat32( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var arr = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt32( arr, 2 );\n* // returns 3\n*/\nfunction getInt32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int16Array from '@stdlib/array/int16';\n*\n* var arr = new Int16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt16( arr, 2 );\n* // returns 3\n*/\nfunction getInt16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var arr = new Int8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getInt8( arr, 2 );\n* // returns 3\n*/\nfunction getInt8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var arr = new Uint32Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint32( arr, 2 );\n* // returns 3\n*/\nfunction getUint32( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint16Array from '@stdlib/array/uint16';\n*\n* var arr = new Uint16Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint16( arr, 2 );\n* // returns 3\n*/\nfunction getUint16( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var arr = new Uint8Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8( arr, 2 );\n* // returns 3\n*/\nfunction getUint8( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Uint8ClampedArray from '@stdlib/array/uint8c';\n*\n* var arr = new Uint8ClampedArray( [ 1, 2, 3, 4 ] );\n*\n* var v = getUint8c( arr, 2 );\n* // returns 3\n*/\nfunction getUint8c( arr, idx ) { // eslint-disable-line stdlib/jsdoc-doctest-decimal-point\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getGeneric( arr, 2 );\n* // returns 3\n*/\nfunction getGeneric( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n/**\n* Returns an element from an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr[ idx ];\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 2 );\n* // returns 3\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'float64': setFloat64,\n\t'float32': setFloat32,\n\t'int32': setInt32,\n\t'int16': setInt16,\n\t'int8': setInt8,\n\t'uint32': setUint32,\n\t'uint16': setUint16,\n\t'uint8': setUint8,\n\t'uint8c': setUint8c,\n\t'generic': setGeneric,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( 4 );\n*\n* setFloat64( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat64( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Float32Array from '@stdlib/array/float32';\n*\n* var arr = new Float32Array( 4 );\n*\n* setFloat32( arr, 2, 3.0 );\n*\n* var v = arr[ 2 ];\n* // returns 3.0\n*/\nfunction setFloat32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var arr = new Int32Array( 4 );\n*\n* setInt32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int16Array from '@stdlib/array/int16';\n*\n* var arr = new Int16Array( 4 );\n*\n* setInt16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Int8Array from '@stdlib/array/int8';\n*\n* var arr = new Int8Array( 4 );\n*\n* setInt8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setInt8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint32Array from '@stdlib/array/uint32';\n*\n* var arr = new Uint32Array( 4 );\n*\n* setUint32( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint32( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint16Array from '@stdlib/array/uint16';\n*\n* var arr = new Uint16Array( 4 );\n*\n* setUint16( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint16( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint8Array from '@stdlib/array/uint8';\n*\n* var arr = new Uint8Array( 4 );\n*\n* setUint8( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {number} value - value to set\n*\n* @example\n* import Uint8ClampedArray from '@stdlib/array/uint8c';\n*\n* var arr = new Uint8ClampedArray( 4 );\n*\n* setUint8c( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setUint8c( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in a generic `Array`.\n*\n* @private\n* @param {Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setGeneric( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setGeneric( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n/**\n* Sets an element in an indexed array-like object.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {*} value - value to set\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* setArrayLike( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr[ idx ] = value;\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an indexed array-like object.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 2, 3 );\n*\n* var v = arr[ 2 ];\n* // returns 3\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar GETTERS = {\n\t'complex128': getComplex128,\n\t'complex64': getComplex64,\n\t'default': getArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Returns an element from a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex128( arr, 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 3.0\n*\n* var im = imag( v );\n* // returns 4.0\n*/\nfunction getComplex128( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {number} element value\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var v = getComplex64( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getComplex64( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n/**\n* Returns an element from an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @returns {*} element value\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* var v = getArrayLike( arr, 2 );\n* // returns 3\n*/\nfunction getArrayLike( arr, idx ) {\n\treturn arr.get( idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var get = getter( dtype( arr ) );\n* var v = get( arr, 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 3.0\n*\n* var im = imagf( v );\n* // returns 4.0\n*/\nfunction getter( dtype ) {\n\tvar f = GETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn GETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default getter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar SETTERS = {\n\t'complex128': setComplex128,\n\t'complex64': setComplex64,\n\t'default': setArrayLike\n};\n\n\n// FUNCTIONS //\n\n/**\n* Sets an element in a `Complex128Array`.\n*\n* @private\n* @param {Complex128Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex128( arr, 1, new Complex128( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 10.0\n*\n* var im = imag( v );\n* // returns 11.0\n*/\nfunction setComplex128( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in a `Complex64Array`.\n*\n* @private\n* @param {Complex64Array} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* setComplex64( arr, 1, new Complex64( 10.0, 11.0 ) );\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setComplex64( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n/**\n* Sets an element in an array-like object supporting the get/set protocol.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {NonNegativeInteger} idx - element index\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* function get( idx ) {\n*    return arr[ idx ];\n* }\n*\n* function set( value, idx ) {\n*    arr[ idx ] = value;\n* }\n*\n* arr.get = get;\n* arr.set = set;\n*\n* setArrayLike( arr, 2, 10 );\n*\n* var v = arr[ 2 ];\n* // returns 10\n*/\nfunction setArrayLike( arr, idx, value ) {\n\tarr.set( value, idx );\n}\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for setting an element in an array-like object supporting the get/set protocol.\n*\n* @param {string} dtype - array dtype\n* @returns {Function} accessor\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import dtype from '@stdlib/array/dtype';\n*\n* var arr = new Complex64Array( [ 1, 2, 3, 4 ] );\n*\n* var set = setter( dtype( arr ) );\n* set( arr, 1, new Complex64( 10.0, 11.0 ) );\n*\n* var v = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( v );\n* // returns 10.0\n*\n* var im = imagf( v );\n* // returns 11.0\n*/\nfunction setter( dtype ) {\n\tvar f = SETTERS[ dtype ];\n\tif ( typeof f === 'function' ) {\n\t\treturn f;\n\t}\n\treturn SETTERS.default;\n}\n\n\n// EXPORTS //\n\nexport default setter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from array constructors to data types...\nvar ctor2dtypes = {\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c',\n\t'Complex64Array': 'complex64',\n\t'Complex128Array': 'complex128'\n};\n\n\n// EXPORTS //\n\nexport default ctor2dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* import ctor from '@stdlib/array/float64';\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nimport hasFloat64ArraySupport from '@stdlib/assert/has-float64array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* import ctor from '@stdlib/array/float32';\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nimport hasFloat32ArraySupport from '@stdlib/assert/has-float32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* import ctor from '@stdlib/array/uint32';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nimport hasUint32ArraySupport from '@stdlib/assert/has-uint32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* import ctor from '@stdlib/array/int32';\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nimport hasInt32ArraySupport from '@stdlib/assert/has-int32array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* import ctor from '@stdlib/array/uint16';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nimport hasUint16ArraySupport from '@stdlib/assert/has-uint16array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* import ctor from '@stdlib/array/int16';\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nimport hasInt16ArraySupport from '@stdlib/assert/has-int16array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* import ctor from '@stdlib/array/uint8';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nimport hasUint8ArraySupport from '@stdlib/assert/has-uint8array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* import ctor from '@stdlib/array/uint8c';\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nimport hasUint8ClampedArraySupport from '@stdlib/assert/has-uint8clampedarray-support'; // eslint-disable-line id-length\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* import ctor from '@stdlib/array/int8';\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nimport hasInt8ArraySupport from '@stdlib/assert/has-int8array-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 8; // 4 bytes per float32 x (1 real + 1 imag component)\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `Complex64Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex64Array`\n*\n* @example\n* import Complex64Array from '@stdlib/array/complex64';\n*\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* bool = isComplex64Array( [] );\n* // returns false\n*/\nfunction isComplex64Array( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex64Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex64array`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex64Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = 16; // 8 bytes per float64 x (1 real + 1 imag component)\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a value is a `Complex128Array`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Complex128Array`\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n*\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isComplex128Array( [] );\n* // returns false\n*/\nfunction isComplex128Array( value ) {\n\t// Note: the following is not robust and that is intentional. In this case, we are seeking a lower cost way to reasonably determine whether an input value is a `Complex128Array` in order to avoid walking the prototype chain and resolving constructors, which is necessary for robust identification of cross-realm instances. For more robust validation, see `@stdlib/assert/is-complex128array`.\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.constructor.name === 'Complex128Array' &&\n\t\tvalue.BYTES_PER_ELEMENT === BYTES_PER_ELEMENT\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isComplex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( realf( z ), imagf( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float32Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float32Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = realf( v );\n\t\tbuf[ j+1 ] = imagf( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isArray from '@stdlib/assert/is-array';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport isEven from '@stdlib/math/base/assert/is-even';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport isComplex64Array from './../../base/assert/is-complex64array';\nimport isComplex128Array from './../../base/assert/is-complex128array';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Float32Array from './../../float32';\nimport Complex64 from '@stdlib/complex/float32';\nimport format from '@stdlib/string/format';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\nimport floor from '@stdlib/math/base/special/floor';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport getter from './../../base/getter';\nimport accessorGetter from './../../base/accessor-getter';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float32Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex64Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex128Array...\n\t\tvalue.name === 'Complex128Array'\n\t);\n}\n\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float32Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex64} complex number\n*/\nfunction getComplex64( buf, idx ) {\n\tidx *= 2;\n\treturn new Complex64( buf[ idx ], buf[ idx+1 ] );\n}\n\n\n// MAIN //\n\n/**\n* 64-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `8`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `8`\n* @throws {TypeError} view length must be a positive multiple of `8`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} complex number array\n*\n* @example\n* var arr = new Complex64Array();\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex64Array( 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex64Array( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Complex64Array( buf, 8 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex64Array( buf, 8, 2 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex64Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex64Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex64Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex64Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex64Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex64Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float32Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float32Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float32Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float32Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float32Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) ); // FIXME: `buf` is what is returned from above, NOT the original value\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float32Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var nbytes = Complex64Array.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex64Array\n* @readonly\n* @type {string}\n* @default 'Complex64Array'\n*\n* @example\n* var str = Complex64Array.name;\n* // returns 'Complex64Array'\n*/\nsetReadOnly( Complex64Array, 'name', 'Complex64Array' );\n\n/**\n* Creates a new 64-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex64Array\n* @type {Function}\n* @param {(Collection|Iterable)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ] );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function clbk( v ) {\n*     return new Complex64( realf(v)*2.0, imagf(v)*2.0 );\n* }\n*\n* var arr = Complex64Array.from( [ new Complex64( 1.0, 1.0 ) ], clbk );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex64Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of %u. Length: `%u`.', 2, len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = realf( v );\n\t\t\t\t\tbuf[ j+1 ] = imagf( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 64-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex64Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} 64-bit complex number array\n*\n* @example\n* var arr = Complex64Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex64Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex64Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var z = arr.at( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 9.0\n*\n* im = imagf( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'at', function at( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += this._length;\n\t}\n\tif ( idx < 0 || idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex64( this._buffer, idx );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 80\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 8\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 8\n*/\nsetReadOnly( Complex64Array.prototype, 'BYTES_PER_ELEMENT', Complex64Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} modified array\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex64( 1.0, 1.0 ), 0 );\n* arr.set( new Complex64( 2.0, 2.0 ), 1 );\n* arr.set( new Complex64( 3.0, 3.0 ), 2 );\n* arr.set( new Complex64( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = [\n*     new Complex64( 1.0, 1.0 ),\n*     new Complex64( 2.0, 2.0 ),\n*     new Complex64( 3.0, 3.0 )\n* ];\n* arr = new Complex64Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex64> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex64> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex64( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, getComplex64( buf, i ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.fill( new Complex64( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*\n* z = arr.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tre = realf( value );\n\tim = imagf( value );\n\tfor ( i = start; i < end; i++ ) {\n\t\tidx = 2*i;\n\t\tbuf[ idx ] = re;\n\t\tbuf[ idx+1 ] = im;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2.0\n*\n* var im = imagf( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex64Array.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\tout.push( z );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import Complex64 from '@stdlib/complex/float32';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( Complex64Array.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex64|void)} array element or undefined\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import Complex64 from '@stdlib/complex/float32';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/\nsetReadOnly( Complex64Array.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex64( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( Complex64Array.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex64( buf, i );\n\t\tfcn.call( thisArg, z, i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex64|void)} array element\n*\n* @example\n* var arr = new Complex64Array( 10 );\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex64Array.prototype, 'get', function get( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex64( this._buffer, idx );\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex64( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex64( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex64( 4.0, -4.0 ), -3 );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = new Complex64Array( 10 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex64( 4.0, -4.0 ), -3 );\n* // returns -1\n*/\nsetReadOnly( Complex64Array.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'join', function join( separator ) {\n\tvar out;\n\tvar buf;\n\tvar sep;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tsep = ',';\n\t} else if ( isString( separator ) ) {\n\t\tsep = separator;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toString() );\n\t}\n\treturn out.join( sep );\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex64( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex64( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex64( 2.0, -2.0 ), -3 );\n* // returns 1\n*/\nsetReadOnly( Complex64Array.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tre = realf( searchElement );\n\tim = imagf( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex64Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex64Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex64Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex64Array} complex number array\n*\n* @example\n* import Complex64 from '@stdlib/complex/float32';\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function scale( v, i ) {\n*     return new Complex64( 2.0*realf( v ), 2.0*imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 2\n*\n* var im = imagf( z );\n* // returns -2\n*/\nsetReadOnly( Complex64Array.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = fcn.call( thisArg, getComplex64( buf, i ), i, this );\n\t\tif ( isComplexLike( v ) ) {\n\t\t\toutbuf[ 2*i ] = realf( v );\n\t\t\toutbuf[ (2*i)+1 ] = imagf( v );\n\t\t} else if ( isArrayLikeObject( v ) && v.length === 2 ) {\n\t\t\toutbuf[ 2*i ] = v[ 0 ];\n\t\t\toutbuf[ (2*i)+1 ] = v[ 1 ];\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t}\n\t}\n\treturn out;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ (2*i) ];\n\t\tbuf[ (2*i) ] = buf[ (2*j) ];\n\t\tbuf[ (2*j) ] = tmp;\n\t\ttmp = buf[ (2*i)+1 ];\n\t\tbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t\tbuf[ (2*j)+1 ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values, as intended.\n*\n* @name set\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 0.0\n*\n* var im = imagf( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = realf( value );\n\t\tbuf[ idx+1 ] = imagf( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float32Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float32Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ]; // TODO: handle accessor arrays\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = realf( v );\n\t\t\tbuf[ idx+1 ] = imagf( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Copies a portion of a typed array to a new typed array.\n*\n* @name slice\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} complex number array\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var out = arr.slice();\n* // returns <Complex64Array>\n*\n* var len = out.length;\n* // returns 5\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* out = arr.slice( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = out.length;\n* // returns 2\n*\n* z = out.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = out.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'slice', function slice( start, end ) {\n\tvar outlen;\n\tvar outbuf;\n\tvar out;\n\tvar idx;\n\tvar buf;\n\tvar len;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tstart = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( start < end ) {\n\t\toutlen = end - start;\n\t} else {\n\t\toutlen = 0;\n\t}\n\tout = new this.constructor( outlen );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < outlen; i++ ) {\n\t\tidx = 2*(i+start);\n\t\toutbuf[ 2*i ] = buf[ idx ];\n\t\toutbuf[ (2*i)+1 ] = buf[ idx+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* function predicate( v ) {\n*     return ( realf( v ) === imagf( v ) );\n* }\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( Complex64Array.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, getComplex64( buf, i ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex64Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 1.0\n*\n* var im = imagf( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 5.0\n*\n* im = imagf( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex64Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 3.0\n*\n* im = imagf( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex64Array.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + (begin*BYTES_PER_ELEMENT);\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Returns a new typed array containing the elements in reversed order.\n*\n* @name toReversed\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex64Array} reversed array\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.toReversed();\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 3.0\n*\n* var im = imagf( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 2.0\n*\n* im = imagf( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex64>\n*\n* re = realf( z );\n* // returns 1.0\n*\n* im = imagf( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex64Array.prototype, 'toReversed', function toReversed() {\n\tvar outbuf;\n\tvar out;\n\tvar len;\n\tvar buf;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tout = new this.constructor( len );\n\tbuf = this._buffer;\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = len - i - 1;\n\t\toutbuf[ (2*i) ] = buf[ (2*j) ];\n\t\toutbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t}\n\treturn out;\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex64Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex64Array.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex64( buf, i ).toString() );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex64Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex64Array} new typed array\n*\n* @example\n* import realf from '@stdlib/complex/realf';\n* import imagf from '@stdlib/complex/imagf';\n* import Complex64 from '@stdlib/complex/float32';\n*\n* var arr = new Complex64Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex64( 4.0, 4.0 ) );\n* // returns <Complex64Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex64>\n*\n* var re = realf( z );\n* // returns 4.0\n*\n* var im = imagf( z );\n* // returns 4.0\n*/\nsetReadOnly( Complex64Array.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tbuf[ 2*index ] = realf( value );\n\tbuf[ (2*index)+1 ] = imagf( value );\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default Complex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport format from '@stdlib/string/format';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tz = v.value;\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport format from '@stdlib/string/format';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tz = clbk.call( thisArg, v.value, i );\n\t\tif ( isArrayLikeObject( z ) && z.length >= 2 ) {\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t} else if ( isComplexLike( z ) ) {\n\t\t\tout.push( real( z ), imag( z ) );\n\t\t} else {\n\t\t\treturn new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', z ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\n\n\n// MAIN //\n\n/**\n* Returns a strided array of real and imaginary components.\n*\n* @private\n* @param {Float64Array} buf - output array\n* @param {Array} arr - array containing complex numbers\n* @returns {(Float64Array|null)} output array or null\n*/\nfunction fromArray( buf, arr ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tlen = arr.length;\n\tj = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arr[ i ];\n\t\tif ( !isComplexLike( v ) ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf[ j ] = real( v );\n\t\tbuf[ j+1 ] = imag( v );\n\t\tj += 2; // stride\n\t}\n\treturn buf;\n}\n\n\n// EXPORTS //\n\nexport default fromArray;\n","/* eslint-disable no-restricted-syntax, max-lines, no-invalid-this */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isArray from '@stdlib/assert/is-array';\nimport isString from '@stdlib/assert/is-string';\nimport isFunction from '@stdlib/assert/is-function';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport isEven from '@stdlib/math/base/assert/is-even';\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport isComplex64Array from './../../base/assert/is-complex64array';\nimport isComplex128Array from './../../base/assert/is-complex128array';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Float64Array from './../../float64';\nimport Complex128 from '@stdlib/complex/float64';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\nimport floor from '@stdlib/math/base/special/floor';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport getter from './../../base/getter';\nimport accessorGetter from './../../base/accessor-getter';\nimport format from '@stdlib/string/format';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\nimport fromArray from './from_array.js';\n\n\n// VARIABLES //\n\nvar BYTES_PER_ELEMENT = Float64Array.BYTES_PER_ELEMENT * 2;\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if a value is a complex typed array.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*/\nfunction isComplexArray( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\t(\n\t\t\t\tvalue.constructor.name === 'Complex64Array' ||\n\t\t\t\tvalue.constructor.name === 'Complex128Array'\n\t\t\t) &&\n\t\t\ttypeof value._length === 'number' && // eslint-disable-line no-underscore-dangle\n\n\t\t\t// NOTE: we don't perform a more rigorous test here for a typed array for performance reasons, as robustly checking for a typed array instance could require walking the prototype tree and performing relatively expensive constructor checks...\n\t\t\ttypeof value._buffer === 'object' // eslint-disable-line no-underscore-dangle\n\t\t)\n\t);\n}\n\n/**\n* Returns a boolean indicating if a value is a complex typed array constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array constructor\n*/\nfunction isComplexArrayConstructor( value ) {\n\treturn (\n\t\tvalue === Complex128Array ||\n\n\t\t// NOTE: weaker test in order to avoid a circular dependency with Complex64Array...\n\t\tvalue.name === 'Complex64Array'\n\t);\n}\n\n/**\n* Retrieves a complex number from a complex number array buffer.\n*\n* @private\n* @param {Float64Array} buf - array buffer\n* @param {NonNegativeInteger} idx - element index\n* @returns {Complex128} complex number\n*/\nfunction getComplex128( buf, idx ) {\n\tidx *= 2;\n\treturn new Complex128( buf[ idx ], buf[ idx+1 ] );\n}\n\n\n// MAIN //\n\n/**\n* 128-bit complex number array constructor.\n*\n* @constructor\n* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @throws {RangeError} ArrayBuffer byte length must be a multiple of `16`\n* @throws {RangeError} array-like object and typed array input arguments must have a length which is a multiple of two\n* @throws {TypeError} if provided only a single argument, must provide a valid argument\n* @throws {TypeError} byte offset must be a nonnegative integer\n* @throws {RangeError} byte offset must be a multiple of `16`\n* @throws {TypeError} view length must be a positive multiple of `16`\n* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} complex number array\n*\n* @example\n* var arr = new Complex128Array();\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var arr = new Complex128Array( 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var arr = new Complex128Array( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Complex128Array( buf, 16 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = new Complex128Array( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction Complex128Array() {\n\tvar byteOffset;\n\tvar nargs;\n\tvar buf;\n\tvar len;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Complex128Array) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Complex128Array();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Complex128Array( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Complex128Array( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Complex128Array( arguments[0], arguments[1], arguments[2] );\n\t}\n\t// Create the underlying data buffer...\n\tif ( nargs === 0 ) {\n\t\tbuf = new Float64Array( 0 ); // backward-compatibility\n\t} else if ( nargs === 1 ) {\n\t\tif ( isNonNegativeInteger( arguments[0] ) ) {\n\t\t\tbuf = new Float64Array( arguments[0]*2 );\n\t\t} else if ( isCollection( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tlen = buf.length;\n\n\t\t\t// If provided a \"generic\" array, peak at the first value, and, if the value is a complex number, try to process as an array of complex numbers, falling back to \"normal\" typed array initialization if we fail and ensuring consistency if the first value had not been a complex number...\n\t\t\tif ( len && isArray( buf ) && isComplexLike( buf[0] ) ) {\n\t\t\t\tbuf = fromArray( new Float64Array( len*2 ), buf );\n\t\t\t\tif ( buf === null ) {\n\t\t\t\t\t// We failed and we are now forced to allocate a new array :-(\n\t\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t\t}\n\t\t\t\t\t// We failed, so fall back to directly setting values...\n\t\t\t\t\tbuf = new Float64Array( arguments[0] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isComplex64Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret64( buf, 0 );\n\t\t\t\t} else if ( isComplex128Array( buf ) ) {\n\t\t\t\t\tbuf = reinterpret128( buf, 0 );\n\t\t\t\t} else if ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object and typed array arguments must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tbuf = new Float64Array( buf );\n\t\t\t}\n\t\t} else if ( isArrayBuffer( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( !isInteger( buf.byteLength/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. ArrayBuffer byte length must be a multiple of %u. Byte length: `%u`.', BYTES_PER_ELEMENT, buf.byteLength ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else if ( isObject( arguments[0] ) ) {\n\t\t\tbuf = arguments[ 0 ];\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, ArrayBuffer, typed array, or array-like object. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tif ( !isFunction( buf[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = buf[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', buf ) );\n\t\t\t}\n\t\t\tbuf = fromIterator( buf );\n\t\t\tif ( buf instanceof Error ) {\n\t\t\t\tthrow buf;\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable. Value: `%s`.', arguments[0] ) );\n\t\t}\n\t} else {\n\t\tbuf = arguments[ 0 ];\n\t\tif ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tbyteOffset = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( !isInteger( byteOffset/BYTES_PER_ELEMENT ) ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Byte offset must be a multiple of %u. Value: `%u`.', BYTES_PER_ELEMENT, byteOffset ) );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t\tif ( !isInteger( len/BYTES_PER_ELEMENT ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer view byte length must be a multiple of %u. View byte length: `%u`.', BYTES_PER_ELEMENT, len ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset );\n\t\t} else {\n\t\t\tlen = arguments[ 2 ];\n\t\t\tif ( !isNonNegativeInteger( len ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t\t\t}\n\t\t\tif ( (len*BYTES_PER_ELEMENT) > (buf.byteLength-byteOffset) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid arguments. ArrayBuffer has insufficient capacity. Either decrease the array length or provide a bigger buffer. Minimum capacity: `%u`.', len*BYTES_PER_ELEMENT ) );\n\t\t\t}\n\t\t\tbuf = new Float64Array( buf, byteOffset, len*2 );\n\t\t}\n\t}\n\tsetReadOnly( this, '_buffer', buf );\n\tsetReadOnly( this, '_length', buf.length/2 );\n\n\treturn this;\n}\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var nbytes = Complex128Array.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof Complex128Array\n* @readonly\n* @type {string}\n* @default 'Complex128Array'\n*\n* @example\n* var name = Complex128Array.name;\n* // returns 'Complex128Array'\n*/\nsetReadOnly( Complex128Array, 'name', 'Complex128Array' );\n\n/**\n* Creates a new 128-bit complex number array from an array-like object or an iterable.\n*\n* @name from\n* @memberof Complex128Array\n* @type {Function}\n* @param {(Collection|Object)} src - array-like object or iterable\n* @param {Function} [clbk] - callback to invoke for each source element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {TypeError} an iterator must return either a two element array containing real and imaginary components or a complex number\n* @throws {TypeError} when provided an iterator, a callback must return either a two element array containing real and imaginary components or a complex number\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.from( [ 1.0, -1.0 ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ] );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function clbk( v ) {\n*     return new Complex128( real(v)*2.0, imag(v)*2.0 );\n* }\n*\n* var arr = Complex128Array.from( [ new Complex128( 1.0, 1.0 ) ], clbk );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 1\n*/\nsetReadOnly( Complex128Array, 'from', function from( src ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar out;\n\tvar buf;\n\tvar tmp;\n\tvar get;\n\tvar len;\n\tvar flg;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isComplexArray( src ) ) {\n\t\tlen = src.length;\n\t\tif ( clbk ) {\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, src.get( i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isCollection( src ) ) {\n\t\tif ( clbk ) {\n\t\t\t// Note: array contents affect how we iterate over a provided data source. If only complex number objects, we can extract real and imaginary components. Otherwise, for non-complex number arrays (e.g., `Float64Array`, etc), we assume a strided array where real and imaginary components are interleaved. In the former case, we expect a callback to return real and imaginary components (possibly as a complex number). In the latter case, we expect a callback to return *either* a real or imaginary component.\n\n\t\t\tlen = src.length;\n\t\t\tif ( src.get && src.set ) {\n\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t} else {\n\t\t\t\tget = getter( 'default' );\n\t\t\t}\n\t\t\t// Detect whether we've been provided an array which returns complex number objects...\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( !isComplexLike( get( src, i ) ) ) {\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If an array does not contain only complex number objects, then we assume interleaved real and imaginary components...\n\t\t\tif ( flg ) {\n\t\t\t\tif ( !isEven( len ) ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. First argument must have a length which is a multiple of two. Length: `%u`.', len ) );\n\t\t\t\t}\n\t\t\t\tout = new this( len/2 );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ i ] = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// If an array contains only complex number objects, then we need to extract real and imaginary components...\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tv = clbk.call( thisArg, get( src, i ), i );\n\t\t\t\tif ( isComplexLike( v ) ) {\n\t\t\t\t\tbuf[ j ] = real( v );\n\t\t\t\t\tbuf[ j+1 ] = imag( v );\n\t\t\t\t} else if ( isArrayLikeObject( v ) && v.length >= 2 ) {\n\t\t\t\t\tbuf[ j ] = v[ 0 ];\n\t\t\t\t\tbuf[ j+1 ] = v[ 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t\t\t}\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\treturn new this( src );\n\t}\n\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( buf.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIterator( buf );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length / 2;\n\t\tout = new this( len );\n\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tbuf[ i ] = tmp[ i ];\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n});\n\n/**\n* Creates a new 128-bit complex number array from a variable number of arguments.\n*\n* @name of\n* @memberof Complex128Array\n* @type {Function}\n* @param {...*} element - array elements\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} 128-bit complex number array\n*\n* @example\n* var arr = Complex128Array.of( 1.0, 1.0, 1.0, 1.0 );\n* // returns <Complex128Array>\n*\n* var len = arr.length;\n* // returns 2\n*/\nsetReadOnly( Complex128Array, 'of', function of() {\n\tvar args;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( !isComplexArrayConstructor( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\targs = [];\n\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn new this( args );\n});\n\n/**\n* Returns an array element with support for both nonnegative and negative integer indices.\n*\n* @name at\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide an integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.at( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 9.0, -9.0 ], 9 );\n*\n* z = arr.at( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.at( -1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 9.0\n*\n* im = imag( z );\n* // returns -9.0\n*\n* z = arr.at( 100 );\n* // returns undefined\n*\n* z = arr.at( -100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'at', function at( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx < 0 ) {\n\t\tidx += this._length;\n\t}\n\tif ( idx < 0 || idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex128( this._buffer, idx );\n});\n\n/**\n* Pointer to the underlying data buffer.\n*\n* @name buffer\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {ArrayBuffer}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var buf = arr.buffer;\n* // returns <ArrayBuffer>\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'buffer', function get() {\n\treturn this._buffer.buffer;\n});\n\n/**\n* Size (in bytes) of the array.\n*\n* @name byteLength\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteLength = arr.byteLength;\n* // returns 160\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteLength', function get() {\n\treturn this._buffer.byteLength;\n});\n\n/**\n* Offset (in bytes) of the array from the start of its underlying `ArrayBuffer`.\n*\n* @name byteOffset\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var byteOffset = arr.byteOffset;\n* // returns 0\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'byteOffset', function get() {\n\treturn this._buffer.byteOffset;\n});\n\n/**\n* Size (in bytes) of each array element.\n*\n* @name BYTES_PER_ELEMENT\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {PositiveInteger}\n* @default 16\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var nbytes = arr.BYTES_PER_ELEMENT;\n* // returns 16\n*/\nsetReadOnly( Complex128Array.prototype, 'BYTES_PER_ELEMENT', Complex128Array.BYTES_PER_ELEMENT );\n\n/**\n* Copies a sequence of elements within the array to the position starting at `target`.\n*\n* @name copyWithin\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} target - index at which to start copying elements\n* @param {integer} start - source index at which to copy elements from\n* @param {integer} [end] - source index at which to stop copying elements from\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} modified array\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 4 );\n*\n* // Set the array elements:\n* arr.set( new Complex128( 1.0, 1.0 ), 0 );\n* arr.set( new Complex128( 2.0, 2.0 ), 1 );\n* arr.set( new Complex128( 3.0, 3.0 ), 2 );\n* arr.set( new Complex128( 4.0, 4.0 ), 3 );\n*\n* // Copy the first two elements to the last two elements:\n* arr.copyWithin( 2, 0, 2 );\n*\n* // Get the last array element:\n* var z = arr.get( 3 );\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'copyWithin', function copyWithin( target, start ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\t// FIXME: prefer a functional `copyWithin` implementation which addresses lack of universal browser support (e.g., IE11 and Safari) or ensure that typed arrays are polyfilled\n\tif ( arguments.length === 2 ) {\n\t\tthis._buffer.copyWithin( target*2, start*2 );\n\t} else {\n\t\tthis._buffer.copyWithin( target*2, start*2, arguments[2]*2 );\n\t}\n\treturn this;\n});\n\n/**\n* Returns an iterator for iterating over array key-value pairs.\n*\n* @name entries\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Iterator} iterator\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = [\n*     new Complex128( 1.0, 1.0 ),\n*     new Complex128( 2.0, 2.0 ),\n*     new Complex128( 3.0, 3.0 )\n* ];\n* arr = new Complex128Array( arr );\n*\n* // Create an iterator:\n* var it = arr.entries();\n*\n* // Iterate over the key-value pairs...\n* var v = it.next().value;\n* // returns [ 0, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 1, <Complex128> ]\n*\n* v = it.next().value;\n* // returns [ 2, <Complex128> ]\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'entries', function entries() {\n\tvar buffer;\n\tvar self;\n\tvar iter;\n\tvar len;\n\tvar FLG;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tself = this;\n\tbuffer = this._buffer;\n\tlen = this._length;\n\n\t// Initialize the iteration indices:\n\ti = -1;\n\tj = -2;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\tif ( ITERATOR_SYMBOL ) {\n\t\tsetReadOnly( iter, ITERATOR_SYMBOL, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar z;\n\t\ti += 1;\n\t\tif ( FLG || i >= len ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tj += 2;\n\t\tz = new Complex128( buffer[ j ], buffer[ j+1 ] );\n\t\treturn {\n\t\t\t'value': [ i, z ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.entries();\n\t}\n});\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @name every\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var bool = arr.every( predicate );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'every', function every( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( !predicate.call( thisArg, getComplex128( buf, i ), i, this ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\n/**\n* Returns a modified typed array filled with a fill value.\n*\n* @name fill\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} value - fill value\n* @param {integer} [start=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.fill( new Complex128( 1.0, 1.0 ), 1 );\n*\n* var z = arr.get( 1 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*\n* z = arr.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'fill', function fill( value, start, end ) {\n\tvar buf;\n\tvar len;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( start ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', start ) );\n\t\t}\n\t\tif ( start < 0 ) {\n\t\t\tstart += len;\n\t\t\tif ( start < 0 ) {\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t} else {\n\t\t\tend = len;\n\t\t}\n\t} else {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\tre = real( value );\n\tim = imag( value );\n\tfor ( i = start; i < end; i++ ) {\n\t\tidx = 2*i;\n\t\tbuf[ idx ] = re;\n\t\tbuf[ idx+1 ] = im;\n\t}\n\treturn this;\n});\n\n/**\n* Returns a new array containing the elements of an array which pass a test implemented by a predicate function.\n*\n* @name filter\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.filter( predicate );\n* // returns <Complex128Array>\n*\n* var len = out.length;\n* // returns 1\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns 2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'filter', function filter( predicate, thisArg ) {\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tout = [];\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\tout.push( z );\n\t\t}\n\t}\n\treturn new this.constructor( out );\n});\n\n/**\n* Returns the first element in an array for which a predicate function returns a truthy value.\n*\n* @name find\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.find( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'find', function find( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the first element in an array for which a predicate function returns a truthy value.\n*\n* @name findIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var idx = arr.findIndex( predicate );\n* // returns 2\n*/\nsetReadOnly( Complex128Array.prototype, 'findIndex', function findIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLast\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {(Complex128|void)} array element or undefined\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var z = arr.findLast( predicate );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'findLast', function findLast( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn z;\n\t\t}\n\t}\n});\n\n/**\n* Returns the index of the last element in an array for which a predicate function returns a truthy value.\n*\n* @name findLastIndex\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {integer} index or -1\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var idx = arr.findLastIndex( predicate );\n* // returns 1\n*/\nsetReadOnly( Complex128Array.prototype, 'findLastIndex', function findLastIndex( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = this._length-1; i >= 0; i-- ) {\n\t\tz = getComplex128( buf, i );\n\t\tif ( predicate.call( thisArg, z, i, this ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Invokes a function once for each array element.\n*\n* @name forEach\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - function invocation context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* function log( v, i ) {\n*     console.log( '%s: %s', i, v.toString() );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* arr.forEach( log );\n*/\nsetReadOnly( Complex128Array.prototype, 'forEach', function forEach( fcn, thisArg ) {\n\tvar buf;\n\tvar i;\n\tvar z;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tz = getComplex128( buf, i );\n\t\tfcn.call( thisArg, z, i, this );\n\t}\n});\n\n/**\n* Returns an array element.\n*\n* @name get\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {NonNegativeInteger} idx - element index\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {(Complex128|void)} array element\n*\n* @example\n* var arr = new Complex128Array( 10 );\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*\n* z = arr.get( 100 );\n* // returns undefined\n*/\nsetReadOnly( Complex128Array.prototype, 'get', function get( idx ) {\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isNonNegativeInteger( idx ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', idx ) );\n\t}\n\tif ( idx >= this._length ) {\n\t\treturn;\n\t}\n\treturn getComplex128( this._buffer, idx );\n});\n\n/**\n* Number of array elements.\n*\n* @name length\n* @memberof Complex128Array.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var arr = new Complex128Array( 10 );\n*\n* var len = arr.length;\n* // returns 10\n*/\nsetReadOnlyAccessor( Complex128Array.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Returns a boolean indicating whether an array includes a provided value.\n*\n* @name includes\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - search element\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {boolean} boolean indicating whether an array includes a provided value\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var bool = arr.includes( new Complex128( 3.0, -3.0 ) );\n* // returns true\n*\n* bool = arr.includes( new Complex128( 3.0, -3.0 ), 3 );\n* // returns false\n*\n* bool = arr.includes( new Complex128( 4.0, -4.0 ), -3 );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'includes', function includes( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @name indexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex=0] - starting index (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var idx = arr.indexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 2\n*\n* idx = arr.indexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns -1\n*\n* idx = arr.indexOf( new Complex128( 4.0, -4.0 ), -3 );\n* // returns 3\n*/\nsetReadOnly( Complex128Array.prototype, 'indexOf', function indexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t\tif ( fromIndex < 0 ) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfromIndex = 0;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i < this._length; i++ ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new string by concatenating all array elements.\n*\n* @name join\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {string} [separator=','] - element separator\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a string\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.join();\n* // returns '1 + 1i,2 + 2i'\n*\n* str = arr.join( '/' );\n* // returns '1 + 1i/2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'join', function join( separator ) {\n\tvar out;\n\tvar buf;\n\tvar sep;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( arguments.length === 0 ) {\n\t\tsep = ',';\n\t} else if ( isString( separator ) ) {\n\t\tsep = separator;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', separator ) );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toString() );\n\t}\n\treturn out.join( sep );\n});\n\n/**\n* Returns the last index at which a given element can be found.\n*\n* @name lastIndexOf\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {ComplexLike} searchElement - element to find\n* @param {integer} [fromIndex] - index at which to start searching backward (inclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a complex number\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 3.0, -3.0 ], 4 );\n*\n* var idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ) );\n* // returns 4\n*\n* idx = arr.lastIndexOf( new Complex128( 3.0, -3.0 ), 3 );\n* // returns 2\n*\n* idx = arr.lastIndexOf( new Complex128( 5.0, -5.0 ), 3 );\n* // returns -1\n*\n* idx = arr.lastIndexOf( new Complex128( 2.0, -2.0 ), -3 );\n* // returns 1\n*/\nsetReadOnly( Complex128Array.prototype, 'lastIndexOf', function lastIndexOf( searchElement, fromIndex ) {\n\tvar buf;\n\tvar idx;\n\tvar re;\n\tvar im;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isComplexLike( searchElement ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a complex number. Value: `%s`.', searchElement ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= this._length ) {\n\t\t\tfromIndex = this._length - 1;\n\t\t} else if ( fromIndex < 0 ) {\n\t\t\tfromIndex += this._length;\n\t\t}\n\t} else {\n\t\tfromIndex = this._length - 1;\n\t}\n\tre = real( searchElement );\n\tim = imag( searchElement );\n\tbuf = this._buffer;\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tidx = 2 * i;\n\t\tif ( re === buf[ idx ] && im === buf[ idx+1 ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n});\n\n/**\n* Returns a new array with each element being the result of a provided callback function.\n*\n* @name map\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {Complex128Array} complex number array\n*\n* @example\n* import Complex128 from '@stdlib/complex/float64';\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function scale( v, i ) {\n*     return new Complex128( 2.0*real( v ), 2.0*imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var out = arr.map( scale );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 2.0\n*\n* var im = imag( z );\n* // returns -2.0\n*/\nsetReadOnly( Complex128Array.prototype, 'map', function map( fcn, thisArg ) {\n\tvar outbuf;\n\tvar buf;\n\tvar out;\n\tvar i;\n\tvar v;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbuf = this._buffer;\n\tout = new this.constructor( this._length );\n\toutbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tv = fcn.call( thisArg, getComplex128( buf, i ), i, this );\n\t\tif ( isComplexLike( v ) ) {\n\t\t\toutbuf[ 2*i ] = real( v );\n\t\t\toutbuf[ (2*i)+1 ] = imag( v );\n\t\t} else if ( isArrayLikeObject( v ) && v.length === 2 ) {\n\t\t\toutbuf[ 2*i ] = v[ 0 ];\n\t\t\toutbuf[ (2*i)+1 ] = v[ 1 ];\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return either a two-element array containing real and imaginary components or a complex number. Value: `%s`.', v ) );\n\t\t}\n\t}\n\treturn out;\n});\n\n/**\n* Reverses an array in-place.\n*\n* @name reverse\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {Complex128Array} reversed array\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.reverse();\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 3.0\n*\n* var im = imag( z );\n* // returns 3.0\n*\n* z = out.get( 1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns 2.0\n*\n* z = out.get( 2 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns 1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'reverse', function reverse() {\n\tvar buf;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tlen = this._length;\n\tbuf = this._buffer;\n\tN = floor( len / 2 );\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = len - i - 1;\n\t\ttmp = buf[ (2*i) ];\n\t\tbuf[ (2*i) ] = buf[ (2*j) ];\n\t\tbuf[ (2*j) ] = tmp;\n\t\ttmp = buf[ (2*i)+1 ];\n\t\tbuf[ (2*i)+1 ] = buf[ (2*j)+1 ];\n\t\tbuf[ (2*j)+1 ] = tmp;\n\t}\n\treturn this;\n});\n\n/**\n* Sets an array element.\n*\n* ## Notes\n*\n* -   When provided a typed array, real or complex, we must check whether the source array shares the same buffer as the target array and whether the underlying memory overlaps. In particular, we are concerned with the following scenario:\n*\n*     ```text\n*     buf:                ---------------------\n*     src: ---------------------\n*     ```\n*\n*     In the above, as we copy values from `src`, we will overwrite values in the `src` view, resulting in duplicated values copied into the end of `buf`, which is not intended. Hence, to avoid overwriting source values, we must **copy** source values to a temporary array.\n*\n*     In the other overlapping scenario,\n*\n*     ```text\n*     buf: ---------------------\n*     src:                ---------------------\n*     ```\n*\n*     by the time we begin copying into the overlapping region, we are copying from the end of `src`, a non-overlapping region, which means we don't run the risk of copying copied values, rather than the original `src` values as intended.\n*\n* @name set\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {(Collection|Complex|ComplexArray)} value - value(s)\n* @param {NonNegativeInteger} [i=0] - element index at which to start writing values\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be either a complex number, an array-like object, or a complex number array\n* @throws {TypeError} index argument must be a nonnegative integer\n* @throws {RangeError} array-like objects must have a length which is a multiple of two\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {RangeError} target array lacks sufficient storage to accommodate source values\n* @returns {void}\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 10 );\n*\n* var z = arr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 0.0\n*\n* var im = imag( z );\n* // returns 0.0\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n*\n* z = arr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 1.0\n*\n* im = imag( z );\n* // returns -1.0\n*/\nsetReadOnly( Complex128Array.prototype, 'set', function set( value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar sbuf;\n\tvar idx;\n\tvar buf;\n\tvar tmp;\n\tvar flg;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tif ( arguments.length > 1 ) {\n\t\tidx = arguments[ 1 ];\n\t\tif ( !isNonNegativeInteger( idx ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Index argument must be a nonnegative integer. Value: `%s`.', idx ) );\n\t\t}\n\t} else {\n\t\tidx = 0;\n\t}\n\tif ( isComplexLike( value ) ) {\n\t\tif ( idx >= this._length ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%u`.', idx ) );\n\t\t}\n\t\tidx *= 2;\n\t\tbuf[ idx ] = real( value );\n\t\tbuf[ idx+1 ] = imag( value );\n\t\treturn;\n\t}\n\tif ( isComplexArray( value ) ) {\n\t\tN = value._length;\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tsbuf = value._buffer;\n\n\t\t// Check for overlapping memory...\n\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\tif (\n\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t(\n\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t)\n\t\t) {\n\t\t\t// We need to copy source values...\n\t\t\ttmp = new Float64Array( sbuf.length );\n\t\t\tfor ( i = 0; i < sbuf.length; i++ ) {\n\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t}\n\t\t\tsbuf = tmp;\n\t\t}\n\t\tidx *= 2;\n\t\tj = 0;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\tidx += 2; // stride\n\t\t\tj += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tif ( isCollection( value ) ) {\n\t\t// Detect whether we've been provided an array of complex numbers...\n\t\tN = value.length;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tif ( !isComplexLike( value[ i ] ) ) {\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If an array does not contain only complex numbers, then we assume interleaved real and imaginary components...\n\t\tif ( flg ) {\n\t\t\tif ( !isEven( N ) ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Array-like object arguments must have a length which is a multiple of two. Length: `%u`.', N ) );\n\t\t\t}\n\t\t\tif ( idx+(N/2) > this._length ) {\n\t\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t\t}\n\t\t\tsbuf = value;\n\n\t\t\t// Check for overlapping memory...\n\t\t\tj = buf.byteOffset + (idx*BYTES_PER_ELEMENT);\n\t\t\tif (\n\t\t\t\tsbuf.buffer === buf.buffer &&\n\t\t\t\t(\n\t\t\t\t\tsbuf.byteOffset < j &&\n\t\t\t\t\tsbuf.byteOffset+sbuf.byteLength > j\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// We need to copy source values...\n\t\t\t\ttmp = new Float64Array( N );\n\t\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\t\ttmp[ i ] = sbuf[ i ];\n\t\t\t\t}\n\t\t\t\tsbuf = tmp;\n\t\t\t}\n\t\t\tidx *= 2;\n\t\t\tN /= 2;\n\t\t\tj = 0;\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tbuf[ idx ] = sbuf[ j ];\n\t\t\t\tbuf[ idx+1 ] = sbuf[ j+1 ];\n\t\t\t\tidx += 2; // stride\n\t\t\t\tj += 2; // stride\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// If an array contains only complex numbers, then we need to extract real and imaginary components...\n\t\tif ( idx+N > this._length ) {\n\t\t\tthrow new RangeError( 'invalid arguments. Target array lacks sufficient storage to accommodate source values.' );\n\t\t}\n\t\tidx *= 2;\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tv = value[ i ];\n\t\t\tbuf[ idx ] = real( v );\n\t\t\tbuf[ idx+1 ] = imag( v );\n\t\t\tidx += 2; // stride\n\t\t}\n\t\treturn;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either a complex number, an array-like object, or a complex number array. Value: `%s`.', value ) );\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @name some\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - predicate function execution context\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* function predicate( v ) {\n*     return ( real( v ) === imag( v ) );\n* }\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n*\n* var bool = arr.some( predicate );\n* // returns true\n*/\nsetReadOnly( Complex128Array.prototype, 'some', function some( predicate, thisArg ) {\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tif ( predicate.call( thisArg, getComplex128( buf, i ), i, this ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\n/**\n* Creates a new typed array view over the same underlying `ArrayBuffer` and with the same underlying data type as the host array.\n*\n* @name subarray\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end] - ending index (exclusive)\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {TypeError} second argument must be an integer\n* @returns {Complex64Array} subarray\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n*\n* var arr = new Complex128Array( 5 );\n*\n* arr.set( [ 1.0, -1.0 ], 0 );\n* arr.set( [ 2.0, -2.0 ], 1 );\n* arr.set( [ 3.0, -3.0 ], 2 );\n* arr.set( [ 4.0, -4.0 ], 3 );\n* arr.set( [ 5.0, -5.0 ], 4 );\n*\n* var subarr = arr.subarray();\n* // returns <Complex128Array>\n*\n* var len = subarr.length;\n* // returns 5\n*\n* var z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 1.0\n*\n* var im = imag( z );\n* // returns -1.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 5.0\n*\n* im = imag( z );\n* // returns -5.0\n*\n* subarr = arr.subarray( 1, -2 );\n* // returns <Complex128Array>\n*\n* len = subarr.length;\n* // returns 2\n*\n* z = subarr.get( 0 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 2.0\n*\n* im = imag( z );\n* // returns -2.0\n*\n* z = subarr.get( len-1 );\n* // returns <Complex128>\n*\n* re = real( z );\n* // returns 3.0\n*\n* im = imag( z );\n* // returns -3.0\n*/\nsetReadOnly( Complex128Array.prototype, 'subarray', function subarray( begin, end ) {\n\tvar offset;\n\tvar buf;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tbuf = this._buffer;\n\tlen = this._length;\n\tif ( arguments.length === 0 ) {\n\t\tbegin = 0;\n\t\tend = len;\n\t} else {\n\t\tif ( !isInteger( begin ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t}\n\t\tif ( begin < 0 ) {\n\t\t\tbegin += len;\n\t\t\tif ( begin < 0 ) {\n\t\t\t\tbegin = 0;\n\t\t\t}\n\t\t}\n\t\tif ( arguments.length === 1 ) {\n\t\t\tend = len;\n\t\t} else {\n\t\t\tif ( !isInteger( end ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t}\n\t\t\tif ( end < 0 ) {\n\t\t\t\tend += len;\n\t\t\t\tif ( end < 0 ) {\n\t\t\t\t\tend = 0;\n\t\t\t\t}\n\t\t\t} else if ( end > len ) {\n\t\t\t\tend = len;\n\t\t\t}\n\t\t}\n\t}\n\tif ( begin >= len ) {\n\t\tlen = 0;\n\t\toffset = buf.byteLength;\n\t} else if ( begin >= end ) {\n\t\tlen = 0;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t} else {\n\t\tlen = end - begin;\n\t\toffset = buf.byteOffset + ( begin*BYTES_PER_ELEMENT );\n\t}\n\treturn new this.constructor( buf.buffer, offset, ( len < 0 ) ? 0 : len );\n});\n\n/**\n* Serializes an array as a string.\n*\n* @name toString\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @throws {TypeError} `this` must be a complex number array\n* @returns {string} string representation\n*\n* @example\n* var arr = new Complex128Array( 2 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n*\n* var str = arr.toString();\n* // returns '1 + 1i,2 + 2i'\n*/\nsetReadOnly( Complex128Array.prototype, 'toString', function toString() {\n\tvar out;\n\tvar buf;\n\tvar i;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tout = [];\n\tbuf = this._buffer;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( getComplex128( buf, i ).toString() );\n\t}\n\treturn out.join( ',' );\n});\n\n/**\n* Returns a new typed array with the element at a provided index replaced with a provided value.\n*\n* @name with\n* @memberof Complex128Array.prototype\n* @type {Function}\n* @param {integer} index - element index\n* @param {ComplexLike} value - new value\n* @throws {TypeError} `this` must be a complex number array\n* @throws {TypeError} first argument must be an integer\n* @throws {RangeError} index argument is out-of-bounds\n* @throws {TypeError} second argument must be a complex number\n* @returns {Complex128Array} new typed array\n*\n* @example\n* import real from '@stdlib/complex/real';\n* import imag from '@stdlib/complex/imag';\n* import Complex128 from '@stdlib/complex/float64';\n*\n* var arr = new Complex128Array( 3 );\n*\n* arr.set( [ 1.0, 1.0 ], 0 );\n* arr.set( [ 2.0, 2.0 ], 1 );\n* arr.set( [ 3.0, 3.0 ], 2 );\n*\n* var out = arr.with( 0, new Complex128( 4.0, 4.0 ) );\n* // returns <Complex128Array>\n*\n* var z = out.get( 0 );\n* // returns <Complex128>\n*\n* var re = real( z );\n* // returns 4.0\n*\n* var im = imag( z );\n* // returns 4.0\n*/\nsetReadOnly( Complex128Array.prototype, 'with', function copyWith( index, value ) {\n\tvar buf;\n\tvar out;\n\tvar len;\n\tif ( !isComplexArray( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a complex number array.' );\n\t}\n\tif ( !isInteger( index ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', index ) );\n\t}\n\tlen = this._length;\n\tif ( index < 0 ) {\n\t\tindex += len;\n\t}\n\tif ( index < 0 || index >= len ) {\n\t\tthrow new RangeError( format( 'invalid argument. Index argument is out-of-bounds. Value: `%s`.', index ) );\n\t}\n\tif ( !isComplexLike( value ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a complex number. Value: `%s`.', value ) );\n\t}\n\tout = new this.constructor( this._buffer );\n\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\tbuf[ 2*index ] = real( value );\n\tbuf[ (2*index)+1 ] = imag( value );\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default Complex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Uint32Array from './../../uint32';\nimport Int32Array from './../../int32';\nimport Uint16Array from './../../uint16';\nimport Int16Array from './../../int16';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Int8Array from './../../int8';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray,\n\tComplex64Array,\n\tComplex128Array\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c',\n\t'complex64',\n\t'complex128'\n];\n\n\n// EXPORTS //\n\nexport default DTYPES;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isBuffer from '@stdlib/assert/is-buffer';\nimport isArray from '@stdlib/assert/is-array';\nimport constructorName from '@stdlib/utils/constructor-name';\nimport ctor2dtype from './ctor2dtype.js';\nimport CTORS from './ctors.js';\nimport DTYPES from './dtypes.js';\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an array.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn null;\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\n\nexport default dtype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../base/assert/is-accessor-array';\nimport getter from './../../../base/getter';\nimport setter from './../../../base/setter';\nimport accessorGetter from './../../../base/accessor-getter';\nimport accessorSetter from './../../../base/accessor-setter';\nimport dtype from './../../../dtype';\n\n\n// MAIN //\n\n/**\n* Returns element accessors for a provided array-like object.\n*\n* ## Notes\n*\n* -   The returned object has the following properties:\n*\n*     -   **accessorProtocol**: `boolean` indicating whether the provided array-like object supports the get/set protocol (i.e., uses accessors for getting and setting elements).\n*     -   **accessors**: a two-element array whose first element is an accessor for retrieving an array element and whose second element is an accessor for setting an array element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing accessor data\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var obj = accessors( x );\n* // returns {...}\n*\n* var bool = obj.accessorProtocol;\n* // returns false\n*\n* var fcns = obj.accessors;\n* // returns [ <Function>, <Function> ]\n*\n* var v = fcns[ 0 ]( x, 2 );\n* // returns 3\n*/\nfunction accessors( x ) {\n\tvar dt = dtype( x );\n\tif ( isAccessorArray( x ) ) {\n\t\treturn {\n\t\t\t'accessorProtocol': true,\n\t\t\t'accessors': [\n\t\t\t\taccessorGetter( dt ),\n\t\t\t\taccessorSetter( dt )\n\t\t\t]\n\t\t};\n\t}\n\treturn {\n\t\t'accessorProtocol': false,\n\t\t'accessors': [\n\t\t\tgetter( dt ),\n\t\t\tsetter( dt )\n\t\t]\n\t};\n}\n\n\n// EXPORTS //\n\nexport default accessors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadWriteAccessor from '@stdlib/utils/define-nonenumerable-read-write-accessor';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport accessors from './../../../base/accessors';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Sets the length of an array-like object.\n*\n* @private\n* @param {NonNegativeInteger} len - length\n*/\nfunction setLength( len ) {\n\tthis._buffer.length = len;\n}\n\n/**\n* Returns the length of an array-like object.\n*\n* @private\n* @returns {NonNegativeInteger} length\n*/\nfunction getLength() {\n\treturn this._buffer.length;\n}\n\n\n// MAIN //\n\n/**\n* Creates a minimal array-like object supporting the accessor protocol from another array-like object.\n*\n* @constructor\n* @param {Collection} arr - input array\n* @throws {TypeError} must provide an array-like object\n* @returns {AccessorArray} accessor array instance\n*\n* @example\n* var arr = new AccessorArray( [ 1, 2, 3 ] );\n* // returns <AccessorArray>\n*\n* var v = arr.get( 0 );\n* // returns 1\n*/\nfunction AccessorArray( arr ) {\n\tvar o;\n\tif ( !(this instanceof AccessorArray) ) {\n\t\treturn new AccessorArray( arr );\n\t}\n\tif ( !isCollection( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t}\n\to = accessors( arr );\n\tthis._buffer = arr;\n\tthis._getter = o.accessors[ 0 ];\n\tthis._setter = o.accessors[ 1 ];\n\treturn this;\n}\n\n/**\n* Constructor name.\n*\n* @name name\n* @memberof AccessorArray\n* @readonly\n* @type {string}\n* @default 'AccessorArray'\n*\n* @example\n* var name = AccessorArray.name;\n* // returns 'AccessorArray'\n*/\nsetReadOnly( AccessorArray, 'name', 'AccessorArray' );\n\n/**\n* Read/write accessor for getting/setting the number of elements.\n*\n* @name length\n* @memberof AccessorArray.prototype\n* @type {NonNegativeInteger}\n*/\nsetReadWriteAccessor( AccessorArray.prototype, 'length', getLength, setLength );\n\n/**\n* Returns an element.\n*\n* @name get\n* @memberof AccessorArray.prototype\n* @type {Function}\n* @param {integer} idx - element index\n* @returns {*} element\n*\n* @example\n* var arr = new AccessorArray( [ 1, 2, 3 ] );\n* // returns <AccessorArray>\n*\n* var v = arr.get( 0 );\n* // returns 1\n*/\nsetReadOnly( AccessorArray.prototype, 'get', function get( idx ) {\n\treturn this._getter( this._buffer, idx );\n});\n\n/**\n* Sets one or more elements.\n*\n* @name set\n* @memberof AccessorArray.prototype\n* @type {Function}\n* @param {*} value - value to set\n* @param {integer} [idx] - element index\n* @returns {void}\n*\n* @example\n* var arr = new AccessorArray( [ 1, 2, 3 ] );\n* // returns <AccessorArray>\n*\n* var v = arr.get( 0 );\n* // returns 1\n*\n* arr.set( 5, 0 );\n*\n* v = arr.get( 0 );\n* // returns 5\n*/\nsetReadOnly( AccessorArray.prototype, 'set', function set( value, idx ) {\n\tif ( arguments.length < 2 ) {\n\t\tthis._setter( this._buffer, 0, value );\n\t\treturn;\n\t}\n\tthis._setter( this._buffer, idx, value );\n});\n\n\n// EXPORTS //\n\nexport default AccessorArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport accessors from './../../../base/accessors';\n\n\n// MAIN //\n\n/**\n* Converts an array-like to an object likely to have the same \"shape\".\n*\n* ## Notes\n*\n* -   This function is intended as a potential performance optimization. In V8, for example, even if two objects share common properties, if those properties were added in different orders or if one object has additional properties not shared by the other object, then those objects will have different \"hidden\" classes. If a function is provided many objects having different \"shapes\", some JavaScript VMs (e.g., V8) will consider the function \"megamorphic\" and fail to perform various runtime optimizations. Accordingly, the intent of this function is to standardize the \"shape\" of the object holding array meta data to ensure that internal functions operating on arrays are provided consistent argument \"shapes\".\n*\n* -   The returned object has the following properties:\n*\n*     -   **data**: reference to the input array.\n*     -   **accessorProtocol**: `boolean` indicating whether the input array uses accessors for getting and setting elements.\n*     -   **accessors**: a two-element array whose first element is an accessor for retrieving an array element and whose second element is an accessor for setting an array element.\n*\n* @param {Collection} x - array-like object\n* @returns {Object} object containing array meta data\n*\n* @example\n* var obj = arraylike2object( [ 1, 2, 3, 4 ] );\n* // returns {...}\n*/\nfunction arraylike2object( x ) {\n\tvar o = accessors( x );\n\treturn {\n\t\t'data': x,\n\t\t'accessorProtocol': o.accessorProtocol,\n\t\t'accessors': o.accessors\n\t};\n}\n\n\n// EXPORTS //\n\nexport default arraylike2object;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether at least one element in an array is truthy.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = internal( x );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internal( x );\n* // returns false\n*/\nfunction internal( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( x[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests whether at least one element in an array is truthy.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n*\n* var out = accessors( x );\n* // returns true\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n*\n* var out = accessors( x );\n* // returns false\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( get( data, i ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in an array is truthy.\n*\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = any( x );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = any( x );\n* // returns false\n*/\nfunction any( x ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components, where we consider a complex number to be truthy if at least one component is non-zero...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\treturn internal( reinterpret128( x, 0 ) );\n\t\t}\n\t\tif ( isComplex64Array( x ) ) {\n\t\t\treturn internal( reinterpret64( x, 0 ) );\n\t\t}\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default any;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../../base/assert/is-accessor-array';\nimport accessorGetter from './../../../../base/accessor-getter';\nimport getter from './../../../../base/getter';\nimport dtype from './../../../../dtype';\n\n\n// MAIN //\n\n/**\n* Tests if an array contains a provided search value.\n*\n* @param {Collection} x - input array\n* @param {*} value - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*\n* @example\n* var out = contains( [ 1, 2, 3 ], 2 );\n* // returns true\n*/\nfunction contains( x, value ) {\n\tvar len;\n\tvar get;\n\tvar dt;\n\tvar i;\n\n\t// Resolve the input array data type:\n\tdt = dtype( x );\n\n\t// Resolve an accessor for retrieving input array elements:\n\tif ( isAccessorArray( x ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\t// Get the number of elements over which to iterate:\n\tlen = x.length;\n\n\t// Loop over the elements...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( get( x, i ) === value ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport isAccessorArray from './../../../../base/assert/is-accessor-array';\nimport accessorGetter from './../../../../base/accessor-getter';\nimport dtype from './../../../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns a function to tests if an array contains a provided search value.\n*\n* @param {Collection} x - input array\n* @throws {TypeError} must provide an array-like object\n* @returns {Function} function to test if an array contains a search value\n*\n* @example\n* var contains = factory( [ 1, 2, 3 ] );\n* // returns <Function>\n*\n* var bool = contains( 2 );\n* // returns true\n*/\nfunction factory( x ) {\n\tvar get;\n\tvar len;\n\tvar dt;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', x ) );\n\t}\n\t// Resolve the input array data type:\n\tdt = dtype( x );\n\n\t// Resolve an accessor for retrieving input array elements:\n\tif ( isAccessorArray( x ) ) {\n\t\tget = accessorGetter( dt );\n\t}\n\t// Get the number of elements over which to iterate:\n\tlen = x.length;\n\n\treturn ( get === void 0 ) ? contains : accessors;\n\t/**\n\t* Tests if an array contains a provided search value.\n\t*\n\t* @private\n\t* @param {*} value - search value\n\t* @returns {boolean} boolean indicating if an array contains a search value\n\t*\n\t* @example\n\t* var out = contains( [ 1, 2, 3 ], 2 );\n\t* // returns true\n\t*/\n\tfunction contains( value ) {\n\t\tvar i;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( x[ i ] === value ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t/**\n\t* Tests if an array contains a provided search value.\n\t*\n\t* @private\n\t* @param {*} value - search value\n\t* @returns {boolean} boolean indicating if an array contains a search value\n\t*/\n\tfunction accessors( value ) {\n\t\tvar i;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( get( x, i ) === value ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../../base/assert/is-complex64array';\nimport arraylike2object from './../../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport isSameValue from '@stdlib/assert/is-same-value';\n\n\n// FUNCTIONS //\n\n/**\n* Tests if two arrays have the same values.\n*\n* @private\n* @param {Collection} x - first input array\n* @param {Collection} y - second input array\n* @returns {boolean} boolean indicating if both arrays have the same values\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n* var y = [ 0, 0, 1, 0 ];\n*\n* var out = internal( x, y );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n* var y = [ 0, 0, 1, 0 ];\n*\n* var out = internal( x, y );\n* // returns false\n*/\nfunction internal( x, y ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( !isSameValue( x[ i ], y[ i ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests if two arrays have the same values.\n*\n* @private\n* @param {Object} x - first input array object\n* @param {Object} y - second input array object\n* @returns {boolean} boolean indicating if both arrays have the same values\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n* var y = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n*\n* var out = accessors( x, y );\n* // returns true\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n* var y = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n*\n* var out = accessors( x, y );\n* // returns false\n*/\nfunction accessors( x, y ) {\n\tvar xdata;\n\tvar ydata;\n\tvar xget;\n\tvar yget;\n\tvar i;\n\n\txdata = x.data;\n\tydata = y.data;\n\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\n\tfor ( i = 0; i < xdata.length; i++ ) {\n\t\tif ( !isSameValue( xget( xdata, i ), yget( ydata, i ) ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if two arrays have the same values.\n*\n* @param {Collection} x - first input array\n* @param {Collection} y - second input array\n* @returns {boolean} boolean indicating if both arrays have the same values\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n* var y = [ 0, 0, 1, 0 ];\n*\n* var out = hasSameValues( x, y );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n* var y = [ 0, 0, 1, 0 ];\n*\n* var out = hasSameValues( x, y );\n* // returns false\n*/\nfunction hasSameValues( x, y ) {\n\tvar FLG;\n\tvar xo;\n\tvar yo;\n\tvar xr;\n\tvar yr;\n\n\tif ( x.length !== y.length ) {\n\t\treturn false;\n\t}\n\txo = arraylike2object( x );\n\tyo = arraylike2object( y );\n\tif ( xo.accessorProtocol || yo.accessorProtocol ) {\n\t\tFLG = 2;\n\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\txr = reinterpret128( x, 0 );\n\t\t\tFLG -= 1;\n\t\t} else if ( isComplex64Array( x ) ) {\n\t\t\txr = reinterpret64( x, 0 );\n\t\t\tFLG -= 1;\n\t\t}\n\t\tif ( isComplex128Array( y ) ) {\n\t\t\tyr = reinterpret128( y, 0 );\n\t\t\tFLG -= 1;\n\t\t} else if ( isComplex64Array( y ) ) {\n\t\t\tyr = reinterpret64( y, 0 );\n\t\t\tFLG -= 1;\n\t\t}\n\t\tif ( FLG === 0 ) {\n\t\t\treturn internal( xr, yr );\n\t\t}\n\t\treturn accessors( xo, yo );\n\t}\n\treturn internal( x, y );\n}\n\n\n// EXPORTS //\n\nexport default hasSameValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an array contains a provided search value.\n*\n* @module @stdlib/array/base/assert/contains\n*\n* @example\n* import contains from '@stdlib/array/base/assert/contains';\n*\n* var out = contains( [ 1, 2, 3 ], 2 );\n* // returns true\n*/\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n\n// exports: { \"factory\": \"main.factory\" }\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name contains\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/contains}\n*/\nimport contains from './../../../base/assert/contains';\nsetReadOnly( ns, 'contains', contains );\n\n/**\n* @name hasSameValues\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/has-same-values}\n*/\nimport hasSameValues from './../../../base/assert/has-same-values';\nsetReadOnly( ns, 'hasSameValues', hasSameValues );\n\n/**\n* @name isAccessorArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-accessor-array}\n*/\nimport isAccessorArray from './../../../base/assert/is-accessor-array';\nsetReadOnly( ns, 'isAccessorArray', isAccessorArray );\n\n/**\n* @name isComplex64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-complex64array}\n*/\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nsetReadOnly( ns, 'isComplex64Array', isComplex64Array );\n\n/**\n* @name isComplex128Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/assert/is-complex128array}\n*/\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nsetReadOnly( ns, 'isComplex128Array', isComplex128Array );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../base/assert/is-accessor-array';\nimport accessorGetter from './../../../base/accessor-getter';\nimport getter from './../../../base/getter';\nimport dtype from './../../../dtype';\n\n\n// MAIN //\n\n/**\n* Returns an accessor function for retrieving an element from an array-like object.\n*\n* @param {Collection} x - input array\n* @returns {Function} accessor\n*\n* @example\n* var arr = [ 1, 2, 3, 4 ];\n*\n* var get = resolveGetter( arr );\n* var v = get( arr, 2 );\n* // returns 3\n*/\nfunction resolveGetter( x ) {\n\tvar dt = dtype( x );\n\tif ( isAccessorArray( x ) ) {\n\t\treturn accessorGetter( dt );\n\t}\n\treturn getter( dt );\n}\n\n\n// EXPORTS //\n\nexport default resolveGetter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Recursively applies a binary callback.\n*\n* @private\n* @param {ArrayLikeObject} x - input array\n* @param {ArrayLikeObject} y - input array\n* @param {ArrayLikeObject} z - output array\n* @param {NonNegativeInteger} ndims - number of dimensions\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {NonNegativeInteger} dim - dimension index\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*/\nfunction recurse( x, y, z, ndims, shape, dim, fcn ) {\n\tvar S;\n\tvar d;\n\tvar i;\n\n\tS = shape[ dim ];\n\n\t// Check whether we've reached the innermost dimension:\n\td = dim + 1;\n\n\tif ( d === ndims ) {\n\t\t// Apply the provided callback...\n\t\tfor ( i = 0; i < S; i++ ) {\n\t\t\tz[ i ] = fcn( x[ i ], y[ i ] );\n\t\t}\n\t\treturn;\n\t}\n\t// Continue recursing into the nested arrays...\n\tfor ( i = 0; i < S; i++ ) {\n\t\trecurse( x[ i ], y[ i ], z[ i ], ndims, shape, d, fcn );\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two n-dimensional nested input arrays and assigns results to elements in an n-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add';\n* import onesnd from '@stdlib/array/base/onesnd';\n* import zerosnd from '@stdlib/array/base/zerosnd';\n*\n* var shape = [ 2, 2 ];\n*\n* var x = onesnd( shape );\n* var y = onesnd( shape );\n* var z = zerosnd( shape );\n*\n* binarynd( [ x, y, z ], shape, add );\n*\n* console.log( z );\n* // => [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ]\n*/\nfunction binarynd( arrays, shape, fcn ) {\n\treturn recurse( arrays[ 0 ], arrays[ 1 ], arrays[ 2 ], shape.length, shape, 0, fcn ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default binarynd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Copies the elements of an indexed array-like object to a new \"generic\" array.\n*\n* @param {Collection} x - input array\n* @returns {Array} output array\n*\n* @example\n* var out = copy( [ 1, 2, 3 ] );\n* // returns [ 1, 2, 3 ]\n*/\nfunction copy( x ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\n\tlen = x.length;\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( x[ i ] ); // use `Array#push` to ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*\n* @example\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filled( value, len ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled \"generic\" array.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = zeros( 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*/\nfunction zeros( len ) {\n\treturn filled( 0.0, len );\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from './../../../base/copy-indexed';\nimport zeros from './../../../base/zeros';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Broadcasts an array to a specified shape.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} inShape - input array shape\n* @param {NonNegativeIntegerArray} outShape - output array shape\n* @throws {Error} input array cannot have more dimensions than the desired shape\n* @throws {Error} input array dimension sizes must be `1` or equal to the corresponding dimension in the provided output shape\n* @throws {Error} input array and desired shape must be broadcast compatible\n* @returns {Object} broadcast object\n*\n* @example\n* var x = [ 1, 2 ];\n*\n* var out = broadcastArray( x, [ 2 ], [ 2, 2 ] );\n* // returns {...}\n*\n* var shape = out.shape;\n* // returns [ 2, 2 ]\n*\n* var strides = out.strides;\n* // returns [ 0, 1 ]\n*\n* var ref = out.ref;\n* // returns [ 1, 2 ]\n*\n* var bool = ( x === ref );\n* // returns true\n*\n* var data = out.data;\n* // returns [ [ 1, 2 ] ]\n*\n* @example\n* var x = [ 1, 2 ];\n*\n* var out = broadcastArray( x, [ 2 ], [ 2, 1, 2 ] );\n* // returns {...}\n*\n* var data = out.data;\n* // returns [ [ [ 1, 2 ] ] ]\n*\n* var strides = out.strides;\n* // returns [ 0, 0, 1 ]\n*\n* @example\n* var x = [ [ 1 ], [ 2 ] ];\n*\n* var out = broadcastArray( x, [ 2, 1 ], [ 3, 2, 2 ] );\n* // returns {...}\n*\n* var data = out.data;\n* // returns [ [ [ 1 ], [ 2 ] ] ]\n*\n* var strides = out.strides;\n* // returns [ 0, 1, 0 ]\n*/\nfunction broadcastArray( x, inShape, outShape ) {\n\tvar data;\n\tvar dim;\n\tvar st;\n\tvar N;\n\tvar M;\n\tvar d;\n\tvar i;\n\tvar j;\n\n\tN = outShape.length;\n\tM = inShape.length;\n\tif ( N < M ) {\n\t\tthrow new Error( 'invalid argument. Cannot broadcast an array to a shape having fewer dimensions. Arrays can only be broadcasted to shapes having the same or more dimensions.' );\n\t}\n\t// Prepend additional dimensions...\n\tdata = x;\n\tfor ( i = M; i < N; i++ ) {\n\t\tdata = [ data ];\n\t}\n\n\t// Initialize a strides array:\n\tst = zeros( N );\n\n\t// Determine the output array strides...\n\tfor ( i = N-1; i >= 0; i-- ) {\n\t\tj = M - N + i;\n\t\tif ( j < 0 ) {\n\t\t\t// Prepended singleton dimension; stride is zero...\n\t\t\tcontinue;\n\t\t}\n\t\td = inShape[ j ];\n\t\tdim = outShape[ i ];\n\t\tif ( dim !== 0 && dim < d ) {\n\t\t\tthrow new Error( format( 'invalid argument. Input array cannot be broadcast to the specified shape, as the specified shape has a dimension whose size is less than the size of the corresponding dimension in the input array. Array shape: (%s). Desired shape: (%s). Dimension: %u.', copy( inShape ).join( ', ' ), copy( outShape ).join( ', ' ), i ) );\n\t\t}\n\t\tif ( d === dim ) {\n\t\t\t// As the dimension sizes are equal, the stride is one, meaning that each element in the array should be iterated over as normal...\n\t\t\tst[ i ] = 1;\n\t\t} else if ( d === 1 ) {\n\t\t\t// In order to broadcast a dimension, we set the stride for that dimension to zero...\n\t\t\tst[ i ] = 0;\n\t\t} else {\n\t\t\t// At this point, we know that `dim > d` and that `d` does not equal `1` (e.g., `dim=3` and `d=2`); in which case, the shapes are considered incompatible (even for desired shapes which are multiples of array dimensions, as might be desired when \"tiling\" an array; e.g., `dim=4` and `d=2`)...\n\t\t\tthrow new Error( format( 'invalid argument. Input array and the specified shape are broadcast incompatible. Array shape: (%s). Desired shape: (%s). Dimension: %u.', copy( inShape ).join( ', ' ), copy( outShape ).join( ', ' ), i ) );\n\t\t}\n\t}\n\t// Return broadcast results:\n\treturn {\n\t\t'ref': x,                  // reference to the original input array\n\t\t'data': data,              // broadcasted array\n\t\t'shape': copy( outShape ), // copy in order to prevent mutation\n\t\t'strides': st\n\t};\n}\n\n\n// EXPORTS //\n\nexport default broadcastArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Copies the elements of an array-like object to a new \"generic\" array.\n*\n* @param {Collection} x - input array\n* @returns {Array} output array\n*\n* @example\n* var out = copy( [ 1, 2, 3 ] );\n* // returns [ 1, 2, 3 ]\n*/\nfunction copy( x ) {\n\tvar out;\n\tvar len;\n\tvar get;\n\tvar i;\n\n\t// Resolve an accessor for retrieving input array elements:\n\tget = resolveGetter( x );\n\n\t// Get the number of elements to copy:\n\tlen = x.length;\n\n\t// Loop over the elements...\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout.push( get( x, i ) ); // ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array are truthy.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internal( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = internal( x );\n* // returns false\n*/\nfunction internal( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( !x[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in a complex number array are truthy.\n*\n* @private\n* @param {Collection} x - underlying data buffer\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internalComplex( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = internalComplex( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 0 ];\n*\n* var out = internalComplex( x );\n* // returns false\n*/\nfunction internalComplex( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i += 2 ) {\n\t\tif ( !( x[ i ] || x[ i+1 ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array are truthy.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var out = accessors( x );\n* // returns true\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 0, 4 ] ) );\n*\n* var out = accessors( x );\n* // returns false\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( !get( data, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array are truthy.\n*\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are truthy\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = every( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = every( x );\n* // returns false\n*/\nfunction every( x ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components, where we consider a complex number to be truthy if at least one component is non-zero...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\treturn internalComplex( reinterpret128( x, 0 ) );\n\t\t}\n\t\tif ( isComplex64Array( x ) ) {\n\t\t\treturn internalComplex( reinterpret64( x, 0 ) );\n\t\t}\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default every;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array according to a provided callback function.\n*\n* @param {NonNegativeInteger} len - array length\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* import constantFunction from '@stdlib/utils/constant-function';\n*\n* var out = filledBy( 3, constantFunction( 'beep' ) );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filledBy( len, clbk, thisArg ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( clbk.call( thisArg, i ) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filledBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a filled two-dimensional nested array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = filled2d( 0.0, [ 1, 3 ] );\n* // returns [ [ 0.0, 0.0, 0.0 ] ]\n*\n* @example\n* var out = filled2d( 'beep', [ 3, 1 ] );\n* // returns [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ]\n*/\nfunction filled2d( value, shape ) {\n\tvar arr;\n\tvar S0;\n\tvar S1;\n\tvar i;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < S1; i++ ) {\n\t\tarr.push( filled( value, S0 ) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a filled three-dimensional nested array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = filled3d( 0.0, [ 1, 1, 3 ] );\n* // returns [ [ [ 0.0, 0.0, 0.0 ] ] ]\n*\n* @example\n* var out = filled3d( 'beep', [ 1, 3, 1 ] );\n* // returns [ [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ] ]\n*/\nfunction filled3d( value, shape ) {\n\tvar out;\n\tvar a1;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i2;\n\tvar i1;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tout = [];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\ta1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta1.push( filled( value, S0 ) );\n\t\t}\n\t\tout.push( a1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default filled3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a filled four-dimensional nested array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = filled4d( 0.0, [ 1, 1, 1, 3 ] );\n* // returns [ [ [ [ 0.0, 0.0, 0.0 ] ] ] ]\n*\n* @example\n* var out = filled4d( 'beep', [ 1, 1, 3, 1 ] );\n* // returns [ [ [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ] ] ]\n*/\nfunction filled4d( value, shape ) {\n\tvar out;\n\tvar a1;\n\tvar a2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tout = [];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\ta2 = [];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\ta1 = [];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\ta1.push( filled( value, S0 ) );\n\t\t\t}\n\t\t\ta2.push( a1 );\n\t\t}\n\t\tout.push( a2 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default filled4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a filled five-dimensional nested array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = filled5d( 0.0, [ 1, 1, 1, 1, 3 ] );\n* // returns [ [ [ [ [ 0.0, 0.0, 0.0 ] ] ] ] ]\n*\n* @example\n* var out = filled5d( 'beep', [ 1, 1, 1, 3, 1 ] );\n* // returns [ [ [ [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ] ] ] ]\n*/\nfunction filled5d( value, shape ) {\n\tvar out;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tout = [];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\ta3 = [];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\ta2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta1 = [];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\ta1.push( filled( value, S0 ) );\n\t\t\t\t}\n\t\t\t\ta2.push( a1 );\n\t\t\t}\n\t\t\ta3.push( a2 );\n\t\t}\n\t\tout.push( a3 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default filled5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// FUNCTIONS //\n\n/**\n* Recursive fills an array.\n*\n* @private\n* @param {*} value - fill value\n* @param {NonNegativeInteger} ndims - number of dimensions\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {NonNegativeInteger} dim - dimension index\n* @param {Array} out - output array\n* @returns {Array} output array\n*/\nfunction recurse( value, ndims, shape, dim, out ) {\n\tvar S;\n\tvar d;\n\tvar i;\n\n\tS = shape[ dim ];\n\n\t// Check whether we're filling the last dimension:\n\td = dim + 1;\n\tif ( d === ndims ) {\n\t\treturn filled( value, S );\n\t}\n\n\t// Fill nested dimensions...\n\tfor ( i = 0; i < S; i++ ) {\n\t\tout.push( recurse( value, ndims, shape, d, [] ) );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a filled two-dimensional nested array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = fillednd( 0.0, [ 3 ] );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = fillednd( 0.0, [ 1, 3 ] );\n* // returns [ [ 0.0, 0.0, 0.0 ] ]\n*\n* @example\n* var out = fillednd( 'beep', [ 3, 1 ] );\n* // returns [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ]\n*/\nfunction fillednd( value, shape ) {\n\treturn recurse( value, shape.length, shape, 0, [] );\n}\n\n\n// EXPORTS //\n\nexport default fillednd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Recursive fills an array.\n*\n* @private\n* @param {NonNegativeInteger} ndims - number of dimensions\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {NonNegativeInteger} dim - dimension index\n* @param {NonNegativeIntegerArray} indices - outer array element indices\n* @param {Array} out - output array\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} output array\n*/\nfunction recurse( ndims, shape, dim, indices, out, clbk, thisArg ) {\n\tvar idx;\n\tvar FLG;\n\tvar S;\n\tvar d;\n\tvar i;\n\n\t// Check whether we're filling the last dimension:\n\td = dim + 1;\n\tFLG = ( d === ndims );\n\n\tS = shape[ dim ];\n\tfor ( i = 0; i < S; i++ ) {\n\t\tidx = indices.slice(); // we explicitly copy in order to avoid potential mutation when calling `clbk`\n\t\tidx.push( i );\n\t\tif ( FLG ) {\n\t\t\tout.push( clbk.call( thisArg, idx ) );\n\t\t} else {\n\t\t\tout.push( recurse( ndims, shape, d, idx, [], clbk, thisArg ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a filled two-dimensional nested array according to a provided callback function.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} filled array\n*\n* @example\n* import constantFunction from '@stdlib/utils/constant-function';\n*\n* var out = filledndBy( [ 3, 1 ], constantFunction( 'beep' ) );\n* // returns [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ]\n*/\nfunction filledndBy( shape, clbk, thisArg ) {\n\treturn recurse( shape.length, shape, 0, [], [], clbk, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default filledndBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport shape2strides from '@stdlib/ndarray/base/shape2strides';\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\nimport numel from '@stdlib/ndarray/base/numel';\nimport grev from '@stdlib/blas/ext/base/grev';\nimport zeros from './../../../base/zeros';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// FUNCTIONS //\n\n/**\n* Copies a specified number of array elements to a provided array.\n*\n* @private\n* @param {Array} x - input array\n* @param {NonNegativeInteger} N - number of elements to copy\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = [ 0, 0, 0 ];\n* copy( x, 3, out, 1, 0 );\n*\n* var o = out;\n* // returns [ 1, 2, 3 ]\n*/\nfunction copy( x, N, out, stride, offset ) {\n\tvar i;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tout[ offset ] = x[ i ];\n\t\toffset += stride;\n\t}\n}\n\n/**\n* Recursively flattens an array in lexicographic order.\n*\n* @private\n* @param {Array} x - array to flatten\n* @param {NonNegativeInteger} ndims - number of dimensions in the input array\n* @param {NonNegativeIntegerArray} shape - shape of the input array\n* @param {NonNegativeInteger} dim - dimension index\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @returns {NonNegativeInteger} offset for next output array element\n*/\nfunction recurseLexicographic( x, ndims, shape, dim, out, stride, offset ) {\n\tvar FLG;\n\tvar S;\n\tvar d;\n\tvar i;\n\n\t// Check whether we've reached the last dimension:\n\td = dim + 1;\n\tFLG = ( d === ndims );\n\n\tS = shape[ dim ];\n\tfor ( i = 0; i < S; i++ ) {\n\t\tif ( FLG ) {\n\t\t\tout[ offset ] = x[ i ];\n\t\t\toffset += stride;\n\t\t} else {\n\t\t\toffset = recurseLexicographic( x[ i ], ndims, shape, d, out, stride, offset ); // eslint-disable-line max-len\n\t\t}\n\t}\n\treturn offset;\n}\n\n/**\n* Flattens an array in colexicographic order.\n*\n* @private\n* @param {Array} x - array to flatten\n* @param {NonNegativeInteger} ndims - number of dimensions in the input array\n* @param {NonNegativeIntegerArray} shape - shape of the input array\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n*/\nfunction flattenColexicographic( x, ndims, shape, out, stride, offset ) {\n\tvar len;\n\tvar tmp;\n\tvar ord;\n\tvar sh;\n\tvar sx;\n\tvar j;\n\tvar i;\n\n\t// Note that, in contrast to lexicographic iteration, we cannot readily define a straightforward recursive definition for colexicographic iteration. Accordingly, we have to perform a workaround in which we first flatten in lexicographic order and then perform an out-of-place transposition to return an array in colexicographic order.\n\n\t// Determine how many elements will be in the output array:\n\tlen = numel( shape );\n\n\t// For input arrays having an arbitrary number of dimensions, first flatten in lexicographic order:\n\ttmp = zeros( len );\n\trecurseLexicographic( x, ndims, shape, 0, tmp, 1, 0 );\n\n\t// Define the memory layout:\n\tord = 'row-major';\n\n\t// Generate a stride array for lexicographic order:\n\tsx = shape2strides( shape, ord );\n\n\t// Reverse the dimensions and strides (i.e., define the shape and strides of the transpose):\n\tsh = zeros( ndims );\n\tcopy( shape, ndims, sh, 1, 0 );\n\tgrev( ndims, sh, 1 );\n\tgrev( ndims, sx, 1 );\n\n\t// Iterate over each element based on the linear **view** index (note: this has negative performance implications due to lack of data locality)...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = vind2bind( sh, sx, 0, ord, i, MODE );\n\t\tout[ offset ] = tmp[ j ];\n\t\toffset += stride;\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Flattens an n-dimensional nested array and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten( x, [ 2, 2 ], false, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 2, 3, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten( x, [ 2, 2 ], true, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*/\nfunction flatten( x, shape, colexicographic, out, stride, offset ) {\n\tvar ndims = shape.length;\n\tif ( ndims === 0 ) { // 0-dimensional array\n\t\treturn out;\n\t}\n\tif ( ndims === 1 ) { // 1-dimensional array\n\t\t// For 1-dimensional arrays, we can perform a simple copy:\n\t\tcopy( x, shape[ 0 ], out, stride, offset );\n\t\treturn out;\n\t}\n\tif ( colexicographic ) {\n\t\tflattenColexicographic( x, ndims, shape, out, stride, offset );\n\t\treturn out;\n\t}\n\trecurseLexicographic( x, ndims, shape, 0, out, stride, offset );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport numel from '@stdlib/ndarray/base/numel';\nimport zeros from './../../../base/zeros';\nimport assign from './assign.js';\n\n\n// MAIN //\n\n/**\n* Flattens an n-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @returns {Array} flattened array\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten( x, [ 2, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten( x, [ 2, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*/\nfunction flatten( x, shape, colexicographic ) {\n\tvar out = zeros( numel( shape ) );\n\treturn assign( x, shape, colexicographic, out, 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default flatten;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an n-dimensional nested array.\n*\n* @module @stdlib/array/base/flatten\n*\n* @example\n* import flatten from '@stdlib/array/base/flatten';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten( x, [ 2, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* import flatten from '@stdlib/array/base/flatten';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten( x, [ 2, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten from '@stdlib/array/base/flatten';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten.assign( x, [ 2, 2 ], true, out, 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nimport shape2strides from '@stdlib/ndarray/base/shape2strides';\nimport vind2bind from '@stdlib/ndarray/base/vind2bind';\nimport numel from '@stdlib/ndarray/base/numel';\nimport grev from '@stdlib/blas/ext/base/grev';\nimport zeros from './../../../base/zeros';\nimport copy from './../../../base/copy-indexed';\n\n\n// VARIABLES //\n\nvar MODE = 'throw';\n\n\n// FUNCTIONS //\n\n/**\n* Copies a specified number of array elements to a provided array according to a callback function.\n*\n* @private\n* @param {Array} x - input array\n* @param {NonNegativeInteger} N - number of elements to copy\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = [ 0, 0, 0 ];\n* copyBy( x, 3, out, 1, 0, scale );\n*\n* var o = out;\n* // returns [ 2, 4, 6 ]\n*/\nfunction copyBy( x, N, out, stride, offset, clbk, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tout[ offset ] = clbk.call( thisArg, x[ i ], [ i ], x );\n\t\toffset += stride;\n\t}\n}\n\n/**\n* Recursively flattens an array in lexicographic order.\n*\n* @private\n* @param {Array} orig - original input array\n* @param {Array} x - array to flatten\n* @param {NonNegativeInteger} ndims - number of dimensions in the input array\n* @param {NonNegativeIntegerArray} shape - shape of the input array\n* @param {NonNegativeInteger} dim - dimension index\n* @param {NonNegativeIntegerArray} indices - outer array element indices\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {NonNegativeInteger} offset for next output array element\n*/\nfunction recurseLexicographic( orig, x, ndims, shape, dim, indices, out, stride, offset, clbk, thisArg ) { // eslint-disable-line max-params\n\tvar FLG;\n\tvar idx;\n\tvar S;\n\tvar d;\n\tvar i;\n\n\t// Check whether we've reached the last dimension:\n\td = dim + 1;\n\tFLG = ( d === ndims );\n\n\tS = shape[ dim ];\n\tfor ( i = 0; i < S; i++ ) {\n\t\tidx = indices.slice(); // we explicitly copy in order to avoid potential mutation when calling `clbk`\n\t\tidx.push( i );\n\t\tif ( FLG ) {\n\t\t\tout[ offset ] = clbk.call( thisArg, x[ i ], idx, orig );\n\t\t\toffset += stride;\n\t\t} else {\n\t\t\toffset = recurseLexicographic( orig, x[ i ], ndims, shape, d, idx, out, stride, offset, clbk, thisArg );\n\t\t}\n\t}\n\treturn offset;\n}\n\n/**\n* Flattens an array in colexicographic order.\n*\n* @private\n* @param {Array} x - array to flatten\n* @param {NonNegativeInteger} ndims - number of dimensions in the input array\n* @param {NonNegativeIntegerArray} shape - shape of the input array\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n*/\nfunction flattenColexicographic( x, ndims, shape, out, stride, offset, clbk, thisArg ) {\n\tvar len;\n\tvar tmp;\n\tvar ord;\n\tvar sh;\n\tvar sx;\n\tvar j;\n\tvar i;\n\n\t// Note that, in contrast to lexicographic iteration, we cannot readily define a straightforward recursive definition for colexicographic iteration. Accordingly, we have to perform a workaround in which we first flatten in lexicographic order and then perform an out-of-place transposition to return an array in colexicographic order.\n\n\t// Determine how many elements will be in the output array:\n\tlen = numel( shape );\n\n\t// For input arrays having an arbitrary number of dimensions, first flatten in lexicographic order:\n\ttmp = zeros( len );\n\trecurseLexicographic( x, x, ndims, shape, 0, [], tmp, 1, 0, clbk, thisArg );\n\n\t// Define the memory layout:\n\tord = 'row-major';\n\n\t// Generate a stride array for lexicographic order:\n\tsx = shape2strides( shape, ord );\n\n\t// Reverse the dimensions and strides (i.e., define the shape and strides of the transpose):\n\tsh = copy( shape );\n\tgrev( ndims, sh, 1 );\n\tgrev( ndims, sx, 1 );\n\n\t// Iterate over each element based on the linear **view** index (note: this has negative performance implications due to lack of data locality)...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tj = vind2bind( sh, sx, 0, ord, i, MODE );\n\t\tout[ offset ] = tmp[ j ];\n\t\toffset += stride;\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Flattens an n-dimensional nested array according to a callback function and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flattenBy( x, [ 2, 2 ], false, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 4, 6, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flattenBy( x, [ 2, 2 ], true, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*/\nfunction flattenBy( x, shape, colexicographic, out, stride, offset, clbk, thisArg ) {\n\tvar ndims = shape.length;\n\tif ( ndims === 0 ) { // 0-dimensional array\n\t\treturn out;\n\t}\n\tif ( ndims === 1 ) { // 1-dimensional array\n\t\t// For 1-dimensional arrays, we can perform simple iteration:\n\t\tcopyBy( x, shape[ 0 ], out, stride, offset, clbk, thisArg );\n\t\treturn out;\n\t}\n\tif ( colexicographic ) {\n\t\tflattenColexicographic( x, ndims, shape, out, stride, offset, clbk, thisArg );\n\t\treturn out;\n\t}\n\trecurseLexicographic( x, x, ndims, shape, 0, [], out, stride, offset, clbk, thisArg );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flattenBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport numel from '@stdlib/ndarray/base/numel';\nimport zeros from './../../../base/zeros';\nimport assign from './assign.js';\n\n\n// MAIN //\n\n/**\n* Flattens an n-dimensional nested array according to a callback function.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} flattened array\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flattenBy( x, [ 2, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flattenBy( x, [ 2, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*/\nfunction flattenBy( x, shape, colexicographic, clbk, thisArg ) {\n\tvar out = zeros( numel( shape ) );\n\treturn assign( x, shape, colexicographic, out, 1, 0, clbk, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default flattenBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a two-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @returns {Array} flattened array\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2d( x, [ 2, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2d( x, [ 2, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*/\nfunction flatten2d( x, shape, colexicographic ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar a0;\n\n\t// Extract loop variables:\n\tS0 = shape[ 1 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tout.push( x[ i1 ][ i0 ] ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\ta0 = x[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tout.push( a0[ i0 ] ); // equivalent to storing in row-major (C-style) order\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a two-dimensional nested array according to a callback function.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} flattened array\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2dBy( x, [ 2, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2dBy( x, [ 2, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*/\nfunction flatten2dBy( x, shape, colexicographic, clbk, thisArg ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar a0;\n\n\t// Extract loop variables:\n\tS0 = shape[ 1 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tout.push( clbk.call( thisArg, x[ i1 ][ i0 ], [ i1, i0 ], x ) ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\ta0 = x[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tout.push( clbk.call( thisArg, a0[ i0 ], [ i1, i0 ], x ) ); // equivalent to storing in row-major (C-style) order\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten2dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a three-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Collection>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @returns {Array} flattened array\n*\n* @example\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3d( x, [ 2, 1, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3d( x, [ 2, 1, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*/\nfunction flatten3d( x, shape, colexicographic ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar a0;\n\tvar a1;\n\n\t// Extract loop variables:\n\tS0 = shape[ 2 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tout.push( x[ i2 ][ i1 ][ i0 ] ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\ta1 = x[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta0 = a1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tout.push( a0[ i0 ] ); // equivalent to storing in row-major (C-style) order\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a three-dimensional nested array according to a callback function.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Collection>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} flattened array\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3dBy( x, [ 2, 1, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3dBy( x, [ 2, 1, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*/\nfunction flatten3dBy( x, shape, colexicographic, clbk, thisArg ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar a0;\n\tvar a1;\n\n\t// Extract loop variables:\n\tS0 = shape[ 2 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tout.push( clbk.call( thisArg, x[ i2 ][ i1 ][ i0 ], [ i2, i1, i0 ], x ) ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\ta1 = x[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta0 = a1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tout.push( clbk.call( thisArg, a0[ i0 ], [ i2, i1, i0 ], x ) ); // equivalent to storing in row-major (C-style) order\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten3dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a four-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Collection>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @returns {Array} flattened array\n*\n* @example\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4d( x, [ 2, 1, 1, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4d( x, [ 2, 1, 1, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*/\nfunction flatten4d( x, shape, colexicographic ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\n\t// Extract loop variables:\n\tS0 = shape[ 3 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tout.push( x[ i3 ][ i2 ][ i1 ][ i0 ] ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\ta2 = x[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\ta1 = a2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tout.push( a0[ i0 ] ); // equivalent to storing in row-major (C-style) order\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a four-dimensional nested array according to a callback function.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Collection>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} flattened array\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4dBy( x, [ 2, 1, 1, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4dBy( x, [ 2, 1, 1, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*/\nfunction flatten4dBy( x, shape, colexicographic, clbk, thisArg ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\n\t// Extract loop variables:\n\tS0 = shape[ 3 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tout.push( clbk.call( thisArg, x[ i3 ][ i2 ][ i1 ][ i0 ], [ i3, i2, i1, i0 ], x ) ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\ta2 = x[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\ta1 = a2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tout.push( clbk.call( thisArg, a0[ i0 ], [ i3, i2, i1, i0 ], x ) ); // equivalent to storing in row-major (C-style) order\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten4dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-depth */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a five-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Array<Collection>>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @returns {Array} flattened array\n*\n* @example\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5d( x, [ 2, 1, 1, 1, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5d( x, [ 2, 1, 1, 1, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*/\nfunction flatten5d( x, shape, colexicographic ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\n\t// Extract loop variables:\n\tS0 = shape[ 4 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\t\t\t\t\t\tout.push( x[ i4 ][ i3 ][ i2 ][ i1 ][ i0 ] ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\ta3 = x[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\ta2 = a3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta1 = a2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tout.push( a0[ i0 ] ); // equivalent to storing in row-major (C-style) order\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-depth, max-len */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a five-dimensional nested array according to a callback function.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Array<Collection>>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Array} flattened array\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5dBy( x, [ 2, 1, 1, 1, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5dBy( x, [ 2, 1, 1, 1, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*/\nfunction flatten5dBy( x, shape, colexicographic, clbk, thisArg ) {\n\tvar out;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\n\t// Extract loop variables:\n\tS0 = shape[ 4 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\n\t// Initialize an output array:\n\tout = [];\n\n\t// Iterate over the array dimensions...\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\t\t\t\t\t\tout.push( clbk.call( thisArg, x[ i4 ][ i3 ][ i2 ][ i1 ][ i0 ], [ i4, i3, i2, i1, i0 ], x ) ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\ta3 = x[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\ta2 = a3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta1 = a2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tout.push( clbk.call( thisArg, a0[ i0 ], [ i4, i3, i2, i1, i0 ], x ) ); // equivalent to storing in row-major (C-style) order\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten5dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the last dimension of a two-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<Collection>} x - nested input array\n* @returns {Array<Collection>} output array\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ];\n*\n* var out = fliplr2d( x );\n* // returns [ [ 2, 1 ], [ 4, 3 ], [ 6, 5 ] ]\n*/\nfunction fliplr2d( x ) {\n\tvar out;\n\tvar x0;\n\tvar y0;\n\tvar i1;\n\tvar i0;\n\n\tout = [];\n\tfor ( i1 = 0; i1 < x.length; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = [];\n\t\tfor ( i0 = x0.length-1; i0 >= 0; i0-- ) {\n\t\t\ty0.push( x0[ i0 ] );\n\t\t}\n\t\tout.push( y0 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fliplr2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fliplr2d from './../../../base/fliplr2d';\n\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the last dimension of a three-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<ArrayLikeObject<Collection>>} x - nested input array\n* @returns {Array<Array<Collection>>} output array\n*\n* @example\n* var x = [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ];\n*\n* var out = fliplr3d( x );\n* // returns [ [ [ 2, 1 ], [ 4, 3 ], [ 6, 5 ] ] ]\n*/\nfunction fliplr3d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( fliplr2d( x[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fliplr3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fliplr3d from './../../../base/fliplr3d';\n\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the last dimension of a four-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<ArrayLikeObject<ArrayLikeObject<Collection>>>} x - nested input array\n* @returns {Array<Array<Array<Collection>>>} output array\n*\n* @example\n* var x = [ [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ] ];\n*\n* var out = fliplr4d( x );\n* // returns [ [ [ [ 2, 1 ], [ 4, 3 ], [ 6, 5 ] ] ] ]\n*/\nfunction fliplr4d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( fliplr3d( x[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fliplr4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the first dimension of a two-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<Collection>} x - nested input array\n* @returns {Array<Collection>} output array\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ];\n*\n* var out = flipud2d( x );\n* // returns [ [ 5, 6 ], [ 3, 4 ], [ 1, 2 ] ]\n*/\nfunction flipud2d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = x.length-1; i >= 0; i-- ) {\n\t\tout.push( x[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flipud2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport flipud2d from './../../../base/flipud2d';\n\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the second-to-last dimension of a three-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<ArrayLikeObject<Collection>>} x - nested input array\n* @returns {Array<Array<Collection>>} output array\n*\n* @example\n* var x = [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ];\n*\n* var out = flipud3d( x );\n* // returns [ [ [ 5, 6 ], [ 3, 4 ], [ 1, 2 ] ] ]\n*/\nfunction flipud3d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( flipud2d( x[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flipud3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport flipud3d from './../../../base/flipud3d';\n\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the second-to-last dimension of a four-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<ArrayLikeObject<ArrayLikeObject<Collection>>>} x - nested input array\n* @returns {Array<Array<Array<Collection>>>} output array\n*\n* @example\n* var x = [ [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ] ];\n*\n* var out = flipud4d( x );\n* // returns [ [ [ [ 5, 6 ], [ 3, 4 ], [ 1, 2 ] ] ] ]\n*/\nfunction flipud4d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( flipud3d( x[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flipud4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ceil from '@stdlib/math/base/special/ceil';\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array according to a provided increment.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @param {number} increment - increment\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar arr;\n\tvar len;\n\tvar i;\n\n\tlen = ceil( ( x2-x1 ) / increment );\n\tif ( len <= 1 ) {\n\t\treturn [ x1 ];\n\t}\n\tarr = [ x1 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tarr.push( x1 + (increment*i) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default incrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport pow from '@stdlib/math/base/special/pow';\n\n\n// MAIN //\n\n/**\n* Generates a logarithmically spaced numeric array.\n*\n* @param {number} a - exponent of start value\n* @param {number} b - exponent of end value\n* @param {NonNegativeInteger} len - length of output array\n* @returns {Array} logarithmically spaced numeric array\n*\n* @example\n* var arr = logspace( 0, 2, 6 );\n* // returns [ 1, ~2.5, ~6.31, ~15.85, ~39.81, 100 ]\n*/\nfunction logspace( a, b, len ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Calculate the increment:\n\tN = len - 1;\n\td = ( b-a ) / N;\n\n\t// Build the output array...\n\tarr = [ pow( 10, a ) ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( pow( 10, a+(d*i) ) );\n\t}\n\tarr.push( pow( 10, b ) );\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default logspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a two-dimensional nested input array and assigns results to elements in a new two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = map2d( x, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*/\nfunction map2d( x, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar y;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\ty = [];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = [];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ty0.push( fcn.call( thisArg, x0[ i0 ], [ i1, i0 ], x ) );\n\t\t}\n\t\ty.push( y0 );\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a three-dimensional nested input array and assigns results to elements in a new three-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = map3d( x, shape, scale );\n* // returns [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ]\n*/\nfunction map3d( x, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar y0;\n\tvar x1;\n\tvar y1;\n\tvar y;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\ty = [];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = [];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\ty0.push( fcn.call( thisArg, x0[ i0 ], [ i2, i1, i0 ], x ) );\n\t\t\t}\n\t\t\ty1.push( y0 );\n\t\t}\n\t\ty.push( y1 );\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a four-dimensional nested input array and assigns results to elements in a new four-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = map4d( x, shape, scale );\n* // returns [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ]\n*/\nfunction map4d( x, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar y0;\n\tvar x1;\n\tvar y1;\n\tvar x2;\n\tvar y2;\n\tvar y;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\ty = [];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = [];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = [];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = [];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\ty0.push( fcn.call( thisArg, x0[ i0 ], [ i3, i2, i1, i0 ], x ) ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\ty1.push( y0 );\n\t\t\t}\n\t\t\ty2.push( y1 );\n\t\t}\n\t\ty.push( y2 );\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a five-dimensional nested input array and assigns results to elements in a new five-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = map5d( x, shape, scale );\n* // returns [ [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ] ]\n*/\nfunction map5d( x, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar y0;\n\tvar x1;\n\tvar y1;\n\tvar x2;\n\tvar y2;\n\tvar x3;\n\tvar y3;\n\tvar y;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\ty = [];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = [];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = [];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = [];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\ty0.push( fcn.call( thisArg, x0[ i0 ], [ i4, i3, i2, i1, i0 ], x ) ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t\ty1.push( y0 );\n\t\t\t\t}\n\t\t\t\ty2.push( y1 );\n\t\t\t}\n\t\t\ty3.push( y2 );\n\t\t}\n\t\ty.push( y3 );\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array are falsy.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internal( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = internal( x );\n* // returns false\n*/\nfunction internal( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( x[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array are falsy.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n*\n* var out = accessors( x );\n* // returns true\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 0, 4 ] ) );\n*\n* var out = accessors( x );\n* // returns false\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( get( data, i ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array are falsy.\n*\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether all elements are falsy\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = none( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 4 ];\n*\n* var out = none( x );\n* // returns false\n*/\nfunction none( x ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components, where we consider a complex number to be falsy if both components are zero...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\treturn internal( reinterpret128( x, 0 ) );\n\t\t}\n\t\tif ( isComplex64Array( x ) ) {\n\t\t\treturn internal( reinterpret64( x, 0 ) );\n\t\t}\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default none;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array whose elements increment by 1 starting from one.\n*\n* @param {number} n - number of elements\n* @returns {Array<number>} linearly spaced numeric array\n*\n* @example\n* var arr = oneTo( 6 );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*/\nfunction oneTo( n ) {\n\tvar arr;\n\tvar i;\n\n\tarr = [];\n\tif ( n <= 0 ) {\n\t\treturn arr;\n\t}\n\tfor ( i = 1; i < n+1; i++ ) {\n\t\tarr.push( i );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default oneTo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\n\n\n// FUNCTIONS //\n\n/**\n* Fills an indexed array with linearly spaced numeric elements which increment by 1 starting from one.\n*\n* @private\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = indexed( out, 1, 0 );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = indexed( out, -1, out.length-1 );\n* // returns [ 6, 5, 4, 3, 2, 1 ]\n*/\nfunction indexed( out, stride, offset ) {\n\tvar v;\n\tvar i;\n\n\ti = offset;\n\tv = 1;\n\twhile ( i >= 0 && i < out.length ) {\n\t\tout[ i ] = v;\n\t\ti += stride;\n\t\tv += 1;\n\t}\n\treturn out;\n}\n\n/**\n* Fills a complex number array with linearly spaced numeric elements which increment by 1 starting from one.\n*\n* @private\n* @param {(Complex128Array|Complex64Array)} out - output complex number array\n* @param {(Float64Array|Float32Array)} data - output array data\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {(Complex128Array|Complex64Array)} output array\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\n*\n* var out = new Complex128Array( [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n* // returns <Complex128Array>\n*\n* var data = reinterpret128( out, 0 );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* var arr = complex( out, data, 1, 0 );\n* // returns <Complex128Array>\n*\n* var bool = ( arr === out );\n* // returns true\n*\n* data = reinterpret128( out, 0 );\n* returns <Float64Array>[ 1.0, 0.0, 2.0, 0.0, 3.0, 0.0 ]\n*/\nfunction complex( out, data, stride, offset ) {\n\tvar v;\n\tvar s;\n\tvar i;\n\n\ts = stride * 2;\n\ti = offset * 2;\n\tv = 1.0;\n\twhile ( i >= 0 && i < data.length ) {\n\t\tdata[ i ] = v;     // real component\n\t\tdata[ i+1 ] = 0.0; // imaginary component\n\t\ti += s;\n\t\tv += 1.0;\n\t}\n\treturn out;\n}\n\n/**\n* Fills an accessor array with linearly spaced numeric elements which increment by 1 starting from one.\n*\n* @private\n* @param {Object} out - output array object\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n\n* var out = toAccessorArray( [ 0, 0, 0, 0, 0, 0 ] );\n* var arr = accessors( arraylike2object( out ), 1, 0 );\n*\n* var bool = ( arr === out );\n* // returns true\n*\n* var v = out.get( 0 );\n* // returns 1\n*\n* v = out.get( out.length-1 );\n* // returns 6\n*/\nfunction accessors( out, stride, offset ) {\n\tvar data;\n\tvar set;\n\tvar v;\n\tvar i;\n\n\tdata = out.data;\n\tset = out.accessors[ 1 ];\n\n\ti = offset;\n\tv = 1;\n\twhile ( i >= 0 && i < data.length ) {\n\t\tset( data, i, v );\n\t\ti += stride;\n\t\tv += 1;\n\t}\n\treturn data;\n}\n\n\n// MAIN //\n\n/**\n* Fills an array with linearly spaced numeric elements which increment by 1 starting from one.\n*\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = assign( out, 1, 0 );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = assign( out, -1, out.length-1 );\n* // returns [ 6, 5, 4, 3, 2, 1 ]\n*/\nfunction assign( out, stride, offset ) {\n\tvar obj = arraylike2object( out );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and only set the real components...\n\t\tif ( isComplex128Array( out ) ) {\n\t\t\treturn complex( out, reinterpret128( out, 0 ), stride, offset );\n\t\t}\n\t\tif ( isComplex64Array( out ) ) {\n\t\t\treturn complex( out, reinterpret64( out, 0 ), stride, offset );\n\t\t}\n\t\treturn accessors( obj, stride, offset );\n\t}\n\treturn indexed( out, stride, offset );\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten an n-dimensional nested array according to a callback function.\n*\n* @module @stdlib/array/base/flatten-by\n*\n* @example\n* import flattenBy from '@stdlib/array/base/flatten-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flattenBy( x, [ 2, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* import flattenBy from '@stdlib/array/base/flatten-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flattenBy( x, [ 2, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flattenBy from '@stdlib/array/base/flatten-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flattenBy.assign( x, [ 2, 2 ], true, out, 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a two-dimensional nested array.\n*\n* @module @stdlib/array/base/flatten2d\n*\n* @example\n* import flatten2d from '@stdlib/array/base/flatten2d';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2d( x, [ 2, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* import flatten2d from '@stdlib/array/base/flatten2d';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2d( x, [ 2, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten2d from '@stdlib/array/base/flatten2d';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten2d.assign( x, [ 2, 2 ], true, out, 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a two-dimensional nested array and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2d( x, [ 2, 2 ], false, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 2, 3, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2d( x, [ 2, 2 ], true, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*/\nfunction flatten2d( x, shape, colexicographic, out, stride, offset ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar a0;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 1 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tout[ io ] = x[ i1 ][ i0 ]; // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\tio += stride;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\ta0 = x[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tout[ io ] = a0[ i0 ]; // equivalent to storing in row-major (C-style) order\n\t\t\tio += stride;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a two-dimensional nested array according to a callback function.\n*\n* @module @stdlib/array/base/flatten2d-by\n*\n* @example\n* import flatten2dBy from '@stdlib/array/base/flatten2d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2dBy( x, [ 2, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* import flatten2dBy from '@stdlib/array/base/flatten2d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2dBy( x, [ 2, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten2dBy from '@stdlib/array/base/flatten2d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten2dBy( x, [ 2, 2 ], true, out, 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a two-dimensional nested array according to a callback function and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Collection>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2dBy( x, [ 2, 2 ], false, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 4, 6, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n*\n* var out = flatten2dBy( x, [ 2, 2 ], true, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*/\nfunction flatten2dBy( x, shape, colexicographic, out, stride, offset, clbk, thisArg ) { // eslint-disable-line max-len\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar a0;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 1 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tout[ io ] = clbk.call( thisArg, x[ i1 ][ i0 ], [ i1, i0 ], x ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\tio += stride;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\ta0 = x[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tout[ io ] = clbk.call( thisArg, a0[ i0 ], [ i1, i0 ], x ); // equivalent to storing in row-major (C-style) order\n\t\t\tio += stride;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten2dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a three-dimensional nested array.\n*\n* @module @stdlib/array/base/flatten3d\n*\n* @example\n* import flatten3d from '@stdlib/array/base/flatten3d';\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3d( x, [ 2, 1, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* import flatten3d from '@stdlib/array/base/flatten3d';\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3d( x, [ 2, 1, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten3d from '@stdlib/array/base/flatten3d';\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten3d.assign( x, [ 2, 1, 2 ], true, out, 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*\n* var bool = ( y === out );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a three-dimensional nested array and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Collection>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3d( x, [ 2, 1, 2 ], false, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 2, 3, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3d( x, [ 2, 1, 2 ], true, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*/\nfunction flatten3d( x, shape, colexicographic, out, stride, offset ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar a0;\n\tvar a1;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 2 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tout[ io ] = x[ i2 ][ i1 ][ i0 ]; // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\tio += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\ta1 = x[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta0 = a1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tout[ io ] = a0[ i0 ]; // equivalent to storing in row-major (C-style) order\n\t\t\t\tio += stride;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a three-dimensional nested array according to a callback function.\n*\n* @module @stdlib/array/base/flatten3d-by\n*\n* @example\n* import flatten3dBy from '@stdlib/array/base/flatten3d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3dBy( x, [ 2, 1, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* import flatten3dBy from '@stdlib/array/base/flatten3d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3dBy( x, [ 2, 1, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten3dBy from '@stdlib/array/base/flatten3d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten3dBy.assign( x, [ 2, 1, 2 ], true, out, 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*\n* var bool = ( y === out );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a three-dimensional nested array according to a callback function and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Collection>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3dBy( x, [ 2, 1, 2 ], false, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 4, 6, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ 1, 2 ] ], [ [ 3, 4 ] ] ];\n*\n* var out = flatten3dBy( x, [ 2, 1, 2 ], true, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*/\nfunction flatten3dBy( x, shape, colexicographic, out, stride, offset, clbk, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar a0;\n\tvar a1;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 2 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tout[ io ] = clbk.call( thisArg, x[ i2 ][ i1 ][ i0 ], [ i2, i1, i0 ], x ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\tio += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\ta1 = x[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta0 = a1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tout[ io ] = clbk.call( thisArg, a0[ i0 ], [ i2, i1, i0 ], x ); // equivalent to storing in row-major (C-style) order\n\t\t\t\tio += stride;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten3dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a four-dimensional nested array.\n*\n* @module @stdlib/array/base/flatten4d\n*\n* @example\n* import flatten4d from '@stdlib/array/base/flatten4d';\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4d( x, [ 2, 1, 1, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* import flatten4d from '@stdlib/array/base/flatten4d';\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4d( x, [ 2, 1, 1, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten4d from '@stdlib/array/base/flatten4d';\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten4d.assign( x, [ 2, 1, 1, 2 ], true, out, 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a four-dimensional nested array and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Collection>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4d( x, [ 2, 1, 1, 2 ], false, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 2, 3, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4d( x, [ 2, 1, 1, 2 ], true, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*/\nfunction flatten4d( x, shape, colexicographic, out, stride, offset ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 3 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tout[ io ] = x[ i3 ][ i2 ][ i1 ][ i0 ]; // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t\tio += stride;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\ta2 = x[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\ta1 = a2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tout[ io ] = a0[ i0 ]; // equivalent to storing in row-major (C-style) order\n\t\t\t\t\tio += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a four-dimensional nested array according to a callback function.\n*\n* @module @stdlib/array/base/flatten4d-by\n*\n* @example\n* import flatten4dBy from '@stdlib/array/base/flatten4d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4dBy( x, [ 2, 1, 1, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* import flatten4dBy from '@stdlib/array/base/flatten4d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4dBy( x, [ 2, 1, 1, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten4dBy from '@stdlib/array/base/flatten4d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten4dBy.assign( x, [ 2, 1, 1, 2 ], true, out, 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a four-dimensional nested array according to a callback function and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Collection>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4dBy( x, [ 2, 1, 1, 2 ], false, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 4, 6, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ 1, 2 ] ] ], [ [ [ 3, 4 ] ] ] ];\n*\n* var out = flatten4dBy( x, [ 2, 1, 1, 2 ], true, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*/\nfunction flatten4dBy( x, shape, colexicographic, out, stride, offset, clbk, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 3 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tout[ io ] = clbk.call( thisArg, x[ i3 ][ i2 ][ i1 ][ i0 ], [ i3, i2, i1, i0 ], x ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t\tio += stride;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\ta2 = x[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\ta1 = a2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tout[ io ] = clbk.call( thisArg, a0[ i0 ], [ i3, i2, i1, i0 ], x ); // equivalent to storing in row-major (C-style) order\n\t\t\t\t\tio += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten4dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a five-dimensional nested array.\n*\n* @module @stdlib/array/base/flatten5d\n*\n* @example\n* import flatten5d from '@stdlib/array/base/flatten5d';\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5d( x, [ 2, 1, 1, 1, 2 ], false );\n* // returns [ 1, 2, 3, 4 ]\n*\n* @example\n* import flatten5d from '@stdlib/array/base/flatten5d';\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5d( x, [ 2, 1, 1, 1, 2 ], true );\n* // returns [ 1, 3, 2, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten5d from '@stdlib/array/base/flatten5d';\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten5d.assign( x, [ 2, 1, 1, 1, 2 ], true, out, 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-depth */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a five-dimensional nested array and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Array<Collection>>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5d( x, [ 2, 1, 1, 1, 2 ], false, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 2, 3, 4 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5d( x, [ 2, 1, 1, 1, 2 ], true, new Float64Array( 4 ), 1, 0 );\n* // returns <Float64Array>[ 1, 3, 2, 4 ]\n*/\nfunction flatten5d( x, shape, colexicographic, out, stride, offset ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 4 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\t\t\t\t\t\tout[ io ] = x[ i4 ][ i3 ][ i2 ][ i1 ][ i0 ]; // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t\t\tio += stride;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\ta3 = x[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\ta2 = a3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta1 = a2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tout[ io ] = a0[ i0 ]; // equivalent to storing in row-major (C-style) order\n\t\t\t\t\t\tio += stride;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Flatten a five-dimensional nested array according to a callback function.\n*\n* @module @stdlib/array/base/flatten5d-by\n*\n* @example\n* import flatten5dBy from '@stdlib/array/base/flatten5d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5dBy( x, [ 2, 1, 1, 1, 2 ], false, scale );\n* // returns [ 2, 4, 6, 8 ]\n*\n* @example\n* import flatten5dBy from '@stdlib/array/base/flatten5d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5dBy( x, [ 2, 1, 1, 1, 2 ], true, scale );\n* // returns [ 2, 6, 4, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import flatten5dBy from '@stdlib/array/base/flatten5d-by';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = new Float64Array( 4 );\n* var y = flatten5dBy.assign( x, [ 2, 1, 1, 1, 2 ], true, out, 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*\n* var bool = ( y === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-depth, max-len */\n\n'use strict';\n\n// MAIN //\n\n/**\n* Flattens a five-dimensional nested array according to a callback function and assigns elements to a provided output array.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length (i.e., the input array is **not** a ragged array).\n*\n* @param {Array<Array<Array<Array<Collection>>>>} x - input nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {boolean} colexicographic - specifies whether to flatten array values in colexicographic order\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5dBy( x, [ 2, 1, 1, 1, 2 ], false, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 4, 6, 8 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function scale( v ) {\n*     return v * 2;\n* }\n*\n* var x = [ [ [ [ [ 1, 2 ] ] ] ], [ [ [ [ 3, 4 ] ] ] ] ];\n*\n* var out = flatten5dBy( x, [ 2, 1, 1, 1, 2 ], true, new Float64Array( 4 ), 1, 0, scale );\n* // returns <Float64Array>[ 2, 6, 4, 8 ]\n*/\nfunction flatten5dBy( x, shape, colexicographic, out, stride, offset, clbk, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar io;\n\n\t// Extract loop variables:\n\tS0 = shape[ 4 ]; // for nested arrays, the last dimensions have the fastest changing indices\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\n\t// Iterate over the array dimensions...\n\tio = offset;\n\tif ( colexicographic ) {\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\t\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\t\t\t\t\t\tout[ io ] = clbk.call( thisArg, x[ i4 ][ i3 ][ i2 ][ i1 ][ i0 ], [ i4, i3, i2, i1, i0 ], x ); // equivalent to storing in column-major (Fortran-style) order\n\t\t\t\t\t\t\tio += stride;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\ta3 = x[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\ta2 = a3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta1 = a2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\ta0 = a1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tout[ io ] = clbk.call( thisArg, a0[ i0 ], [ i4, i3, i2, i1, i0 ], x ); // equivalent to storing in row-major (C-style) order\n\t\t\t\t\t\tio += stride;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flatten5dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in a two-dimensional nested input array and assign results to elements in a new two-dimensional nested output array.\n*\n* @module @stdlib/array/base/map2d\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import map2d from '@stdlib/array/base/map2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = map2d( x, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n* import map2d from '@stdlib/array/base/map2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* var out = map2d.assign( x, y, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a two-dimensional nested input array and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {ArrayLikeObject<Collection>} y - output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* var out = map2d( x, y, shape, scale );\n* // returns [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\nfunction map2d( x, y, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn y;\n\t}\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ty0[ i0 ] = fcn.call( thisArg, x0[ i0 ], [ i1, i0 ], x );\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in a three-dimensional nested input array and assign results to elements in a new three-dimensional nested output array.\n*\n* @module @stdlib/array/base/map3d\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import map3d from '@stdlib/array/base/map3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = map3d( x, shape, scale );\n* // returns [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ]\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n* import map3d from '@stdlib/array/base/map3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = zeros3d( shape );\n*\n* var out = map3d.assign( x, y, shape, scale );\n* // returns [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a three-dimensional nested input array and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {ArrayLikeObject<Collection>} y - output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = zeros3d( shape );\n*\n* var out = map3d( x, y, shape, scale );\n* // returns [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\nfunction map3d( x, y, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar y0;\n\tvar x1;\n\tvar y1;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn y;\n\t}\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\ty0[ i0 ] = fcn.call( thisArg, x0[ i0 ], [ i2, i1, i0 ], x );\n\t\t\t}\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in a four-dimensional nested input array and assign results to elements in a new four-dimensional nested output array.\n*\n* @module @stdlib/array/base/map4d\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import map4d from '@stdlib/array/base/map4d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = map4d( x, shape, scale );\n* // returns [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ]\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n* import map4d from '@stdlib/array/base/map4d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = zeros4d( shape );\n*\n* var out = map4d.assign( x, y, shape, scale );\n* // returns [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a four-dimensional nested input array and assigns results to elements in a four-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {ArrayLikeObject<Collection>} y - output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = zeros4d( shape );\n*\n* var out = map4d( x, y, shape, scale );\n* // returns [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\nfunction map4d( x, y, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar y0;\n\tvar x1;\n\tvar y1;\n\tvar x2;\n\tvar y2;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn y;\n\t}\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = y[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\ty0[ i0 ] = fcn.call( thisArg, x0[ i0 ], [ i3, i2, i1, i0 ], x ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a function to elements in a five-dimensional nested input array and assign results to elements in a new five-dimensional nested output array.\n*\n* @module @stdlib/array/base/map5d\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import map5d from '@stdlib/array/base/map5d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = map5d( x, shape, scale );\n* // returns [ [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ] ]\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n* import map5d from '@stdlib/array/base/map5d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = zeros5d( shape );\n*\n* var out = map5d.assign( x, y, shape, scale );\n* // returns [ [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a function to elements in a five-dimensional nested input array and assigns results to elements in a five-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Collection>} x - input nested array\n* @param {ArrayLikeObject<Collection>} y - output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @returns {Array<Array>} output array\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = zeros5d( shape );\n*\n* var out = map5d( x, y, shape, scale );\n* // returns [ [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ] ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\nfunction map5d( x, y, shape, fcn, thisArg ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar y0;\n\tvar x1;\n\tvar y1;\n\tvar x2;\n\tvar y2;\n\tvar x3;\n\tvar y3;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn y;\n\t}\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = y[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\ty0[ i0 ] = fcn.call( thisArg, x0[ i0 ], [ i4, i3, i2, i1, i0 ], x ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default map5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array whose elements increment by 1 starting from one.\n*\n* @module @stdlib/array/base/one-to\n*\n* @example\n* import oneTo from '@stdlib/array/base/one-to';\n*\n* var arr = oneTo( 6 );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* @example\n* import oneTo from '@stdlib/array/base/one-to';\n*\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n* var arr = oneTo.assign( out, 1, 0 );\n* // returns [ 1, 2, 3, 4, 5, 6 ]\n*\n* var bool = ( out === arr );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// VARIABLES //\n\nvar arraySlice = Array.prototype.slice;\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'slice' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Returns a shallow copy of a portion of an array using the `Array#slice` built-in.\n*\n* @private\n* @param {Collection} x - input array\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = builtin( x, 1, 3 );\n* // returns [ 2, 3 ]\n*/\nfunction builtin( x, start, end ) {\n\treturn arraySlice.call( x, start, end );\n}\n\n/**\n* Returns a shallow copy of a portion of an accessor array.\n*\n* @private\n* @param {Object} x - input array object\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @returns {Array} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var out = accessors( x, 1, 3 );\n* // returns [ 2, 3 ]\n*/\nfunction accessors( x, start, end ) {\n\tvar data;\n\tvar get;\n\tvar out;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\tout = [];\n\tfor ( i = start; i < end; i++ ) {\n\t\tout.push( get( data, i ) );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a shallow copy of a portion of an array.\n*\n* @param {Collection} x - input array\n* @param {integer} start - starting index (inclusive)\n* @param {integer} end - ending index (exclusive)\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = slice( x, 1, 3 );\n* // returns [ 2, 3 ]\n*\n* var bool = ( out === x );\n* // returns false\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var out = slice( x, 1, 3 );\n* // returns <Int32Array>[ 2, 3 ]\n*\n* var bool = ( out === x );\n* // returns false\n*/\nfunction slice( x, start, end ) {\n\tvar obj;\n\tif ( hasMethod( x, 'slice' ) ) {\n\t\treturn x.slice( start, end );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, start, end );\n\t}\n\t// Assume we can use the built-in `Array#slice` method to copy elements to a generic array:\n\treturn builtin( x, start, end );\n}\n\n\n// EXPORTS //\n\nexport default slice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport normalizeIndex from '@stdlib/ndarray/base/normalize-index';\nimport { factory as indexFunction } from '@stdlib/ndarray/base/ind';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar NDIMS = 2;\n\n\n// MAIN //\n\n/**\n* Takes elements from a two-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function does **not** deep copy nested array elements.\n*\n* @param {ArrayLikeObject<Collection>} x - input array\n* @param {NonNegativeIntegerArray} indices - list of indices\n* @param {integer} dimension - dimension along which to take elements\n* @param {string} mode - index mode specifying how to handle an index which is out-of-bounds\n* @throws {RangeError} third argument exceeds the number of dimensions\n* @throws {TypeError} fourth argument must be a recognized index mode\n* @returns {(Array<Array>|Array<Collection>)} output array\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n* var indices = [ 1, 1, 0, 0, -1, -1 ];\n*\n* var y = take2d( x, indices, 1, 'normalize' );\n* // returns [ [ 2, 2, 1, 1, 2, 2 ], [ 4, 4, 3, 3, 4, 4 ] ]\n*/\nfunction take2d( x, indices, dimension, mode ) {\n\tvar lastIndex;\n\tvar out;\n\tvar dim;\n\tvar ind;\n\tvar idx;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\n\tdim = normalizeIndex( dimension, NDIMS-1 );\n\tif ( dim === -1 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Third argument exceeds the number of dimensions. Number of dimensions: %d. Value: `%d`.', NDIMS, dimension ) );\n\t}\n\tind = indexFunction( mode );\n\tout = [];\n\tif ( dim === 0 ) {\n\t\tlastIndex = x.length - 1;\n\t\tfor ( i1 = 0; i1 < indices.length; i1++ ) {\n\t\t\tidx = ind( indices[ i1 ], lastIndex );\n\t\t\tout.push( x[ idx ] );\n\t\t}\n\t\treturn out;\n\t}\n\t// Case: dim === 1\n\tfor ( i1 = 0; i1 < x.length; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = [];\n\t\tlastIndex = x0.length - 1;\n\t\tfor ( i0 = 0; i0 < indices.length; i0++ ) {\n\t\t\tidx = ind( indices[ i0 ], lastIndex );\n\t\t\ty0.push( x0[ idx ] );\n\t\t}\n\t\tout.push( y0 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default take2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Recursively applies a unary callback.\n*\n* @private\n* @param {ArrayLikeObject} x - input array\n* @param {ArrayLikeObject} y - output array\n* @param {NonNegativeInteger} ndims - number of dimensions\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {NonNegativeInteger} dim - dimension index\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*/\nfunction recurse( x, y, ndims, shape, dim, fcn ) {\n\tvar S;\n\tvar d;\n\tvar i;\n\n\tS = shape[ dim ];\n\n\t// Check whether we've reached the innermost dimension:\n\td = dim + 1;\n\n\tif ( d === ndims ) {\n\t\t// Apply the provided callback...\n\t\tfor ( i = 0; i < S; i++ ) {\n\t\t\ty[ i ] = fcn( x[ i ] );\n\t\t}\n\t\treturn;\n\t}\n\t// Continue recursing into the nested arrays...\n\tfor ( i = 0; i < S; i++ ) {\n\t\trecurse( x[ i ], y[ i ], ndims, shape, d, fcn );\n\t}\n}\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in an n-dimensional nested input array and assigns results to elements in an n-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject} arrays - array-like object containing one input nested array and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import onesnd from '@stdlib/array/base/onesnd';\n* import zerosnd from '@stdlib/array/base/zerosnd';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = onesnd( shape );\n* var y = zerosnd( shape );\n*\n* unarynd( [ x, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*/\nfunction unarynd( arrays, shape, fcn ) {\n\treturn recurse( arrays[ 0 ], arrays[ 1 ], shape.length, shape, 0, fcn );\n}\n\n\n// EXPORTS //\n\nexport default unarynd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array whose elements increment by 1 starting from zero.\n*\n* @param {number} n - number of elements\n* @returns {Array<number>} linearly spaced numeric array\n*\n* @example\n* var arr = zeroTo( 6 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*/\nfunction zeroTo( n ) {\n\tvar arr;\n\tvar i;\n\n\tarr = [];\n\tif ( n <= 0 ) {\n\t\treturn arr;\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tarr.push( i );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default zeroTo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplex128Array from './../../../base/assert/is-complex128array';\nimport isComplex64Array from './../../../base/assert/is-complex64array';\nimport arraylike2object from './../../../base/arraylike2object';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\n\n\n// FUNCTIONS //\n\n/**\n* Fills an indexed array with linearly spaced numeric elements which increment by 1 starting from zero.\n*\n* @private\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = indexed( out, 1, 0 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = indexed( out, -1, out.length-1 );\n* // returns [ 5, 4, 3, 2, 1, 0 ]\n*/\nfunction indexed( out, stride, offset ) {\n\tvar v;\n\tvar i;\n\n\ti = offset;\n\tv = 0;\n\twhile ( i >= 0 && i < out.length ) {\n\t\tout[ i ] = v;\n\t\ti += stride;\n\t\tv += 1;\n\t}\n\treturn out;\n}\n\n/**\n* Fills a complex number array with linearly spaced numeric elements which increment by 1 starting from zero.\n*\n* @private\n* @param {(Complex128Array|Complex64Array)} out - output complex number array\n* @param {(Float64Array|Float32Array)} data - output array data\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {(Complex128Array|Complex64Array)} output array\n*\n* @example\n* import Complex128Array from '@stdlib/array/complex128';\n* import reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\n*\n* var out = new Complex128Array( [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n* // returns <Complex128Array>\n*\n* var data = reinterpret128( out, 0 );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* var arr = complex( out, data, 1, 0 );\n* // returns <Complex128Array>\n*\n* var bool = ( arr === out );\n* // returns true\n*\n* data = reinterpret128( out, 0 );\n* returns <Float64Array>[ 0.0, 0.0, 1.0, 0.0, 2.0, 0.0 ]\n*/\nfunction complex( out, data, stride, offset ) {\n\tvar v;\n\tvar s;\n\tvar i;\n\n\ts = stride * 2;\n\ti = offset * 2;\n\tv = 0.0;\n\twhile ( i >= 0 && i < data.length ) {\n\t\tdata[ i ] = v;     // real component\n\t\tdata[ i+1 ] = 0.0; // imaginary component\n\t\ti += s;\n\t\tv += 1.0;\n\t}\n\treturn out;\n}\n\n/**\n* Fills an accessor array with linearly spaced numeric elements which increment by 1 starting from zero.\n*\n* @private\n* @param {Object} out - output array object\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n\n* var out = toAccessorArray( [ 0, 0, 0, 0, 0, 0 ] );\n* var arr = accessors( arraylike2object( out ), 1, 0 );\n*\n* var bool = ( arr === out );\n* // returns true\n*\n* var v = out.get( 0 );\n* // returns 0\n*\n* v = out.get( out.length-1 );\n* // returns 5\n*/\nfunction accessors( out, stride, offset ) {\n\tvar data;\n\tvar set;\n\tvar v;\n\tvar i;\n\n\tdata = out.data;\n\tset = out.accessors[ 1 ];\n\n\ti = offset;\n\tv = 0;\n\twhile ( i >= 0 && i < data.length ) {\n\t\tset( data, i, v );\n\t\ti += stride;\n\t\tv += 1;\n\t}\n\treturn data;\n}\n\n\n// MAIN //\n\n/**\n* Fills an array with linearly spaced numeric elements which increment by 1 starting from zero.\n*\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = assign( out, 1, 0 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*\n* @example\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n*\n* var arr = assign( out, -1, out.length-1 );\n* // returns [ 5, 4, 3, 2, 1, 0 ]\n*/\nfunction assign( out, stride, offset ) {\n\tvar obj = arraylike2object( out );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and only set the real components...\n\t\tif ( isComplex128Array( out ) ) {\n\t\t\treturn complex( out, reinterpret128( out, 0 ), stride, offset );\n\t\t}\n\t\tif ( isComplex64Array( out ) ) {\n\t\t\treturn complex( out, reinterpret64( out, 0 ), stride, offset );\n\t\t}\n\t\treturn accessors( obj, stride, offset );\n\t}\n\treturn indexed( out, stride, offset );\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array whose elements increment by 1 starting from zero.\n*\n* @module @stdlib/array/base/zero-to\n*\n* @example\n* import zeroTo from '@stdlib/array/base/zero-to';\n*\n* var arr = zeroTo( 6 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*\n* @example\n* import zeroTo from '@stdlib/array/base/zero-to';\n*\n* var out = [ 0, 0, 0, 0, 0, 0 ];\n* var arr = zeroTo.assign( out, 1, 0 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*\n* var bool = ( out === arr );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name AccessorArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/accessor}\n*/\nimport AccessorArray from './../../base/accessor';\nsetReadOnly( ns, 'AccessorArray', AccessorArray );\n\n/**\n* @name accessorGetter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/accessor-getter}\n*/\nimport accessorGetter from './../../base/accessor-getter';\nsetReadOnly( ns, 'accessorGetter', accessorGetter );\n\n/**\n* @name accessorSetter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/accessor-setter}\n*/\nimport accessorSetter from './../../base/accessor-setter';\nsetReadOnly( ns, 'accessorSetter', accessorSetter );\n\n/**\n* @name accessors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/accessors}\n*/\nimport accessors from './../../base/accessors';\nsetReadOnly( ns, 'accessors', accessors );\n\n/**\n* @name any\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/any}\n*/\nimport any from './../../base/any';\nsetReadOnly( ns, 'any', any );\n\n/**\n* @name anyBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/any-by}\n*/\nimport anyBy from './../../base/any-by';\nsetReadOnly( ns, 'anyBy', anyBy );\n\n/**\n* @name anyByRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/any-by-right}\n*/\nimport anyByRight from './../../base/any-by-right';\nsetReadOnly( ns, 'anyByRight', anyByRight );\n\n/**\n* @name arraylike2object\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/arraylike2object}\n*/\nimport arraylike2object from './../../base/arraylike2object';\nsetReadOnly( ns, 'arraylike2object', arraylike2object );\n\n/**\n* @name assert\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/assert}\n*/\nimport assert from './../../base/assert';\nsetReadOnly( ns, 'assert', assert );\n\n/**\n* @name bifurcateEntries\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/bifurcate-entries}\n*/\nimport bifurcateEntries from './../../base/bifurcate-entries';\nsetReadOnly( ns, 'bifurcateEntries', bifurcateEntries );\n\n/**\n* @name bifurcateEntriesBy\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/bifurcate-entries-by}\n*/\nimport bifurcateEntriesBy from './../../base/bifurcate-entries-by';\nsetReadOnly( ns, 'bifurcateEntriesBy', bifurcateEntriesBy );\n\n/**\n* @name bifurcateIndices\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/bifurcate-indices}\n*/\nimport bifurcateIndices from './../../base/bifurcate-indices';\nsetReadOnly( ns, 'bifurcateIndices', bifurcateIndices );\n\n/**\n* @name bifurcateIndicesBy\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/bifurcate-indices-by}\n*/\nimport bifurcateIndicesBy from './../../base/bifurcate-indices-by';\nsetReadOnly( ns, 'bifurcateIndicesBy', bifurcateIndicesBy );\n\n/**\n* @name bifurcateValues\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/bifurcate-values}\n*/\nimport bifurcateValues from './../../base/bifurcate-values';\nsetReadOnly( ns, 'bifurcateValues', bifurcateValues );\n\n/**\n* @name bifurcateValuesBy\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base/bifurcate-values-by}\n*/\nimport bifurcateValuesBy from './../../base/bifurcate-values-by';\nsetReadOnly( ns, 'bifurcateValuesBy', bifurcateValuesBy );\n\n/**\n* @name binary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/binary2d}\n*/\nimport binary2d from './../../base/binary2d';\nsetReadOnly( ns, 'binary2d', binary2d );\n\n/**\n* @name binary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/binary3d}\n*/\nimport binary3d from './../../base/binary3d';\nsetReadOnly( ns, 'binary3d', binary3d );\n\n/**\n* @name binary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/binary4d}\n*/\nimport binary4d from './../../base/binary4d';\nsetReadOnly( ns, 'binary4d', binary4d );\n\n/**\n* @name binary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/binary5d}\n*/\nimport binary5d from './../../base/binary5d';\nsetReadOnly( ns, 'binary5d', binary5d );\n\n/**\n* @name binarynd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/binarynd}\n*/\nimport binarynd from './../../base/binarynd';\nsetReadOnly( ns, 'binarynd', binarynd );\n\n/**\n* @name broadcastArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcast-array}\n*/\nimport broadcastArray from './../../base/broadcast-array';\nsetReadOnly( ns, 'broadcastArray', broadcastArray );\n\n/**\n* @name bbinary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-binary2d}\n*/\nimport bbinary2d from './../../base/broadcasted-binary2d';\nsetReadOnly( ns, 'bbinary2d', bbinary2d );\n\n/**\n* @name bbinary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-binary3d}\n*/\nimport bbinary3d from './../../base/broadcasted-binary3d';\nsetReadOnly( ns, 'bbinary3d', bbinary3d );\n\n/**\n* @name bbinary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-binary4d}\n*/\nimport bbinary4d from './../../base/broadcasted-binary4d';\nsetReadOnly( ns, 'bbinary4d', bbinary4d );\n\n/**\n* @name bbinary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-binary5d}\n*/\nimport bbinary5d from './../../base/broadcasted-binary5d';\nsetReadOnly( ns, 'bbinary5d', bbinary5d );\n\n/**\n* @name bquaternary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-quaternary2d}\n*/\nimport bquaternary2d from './../../base/broadcasted-quaternary2d';\nsetReadOnly( ns, 'bquaternary2d', bquaternary2d );\n\n/**\n* @name bquinary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-quinary2d}\n*/\nimport bquinary2d from './../../base/broadcasted-quinary2d';\nsetReadOnly( ns, 'bquinary2d', bquinary2d );\n\n/**\n* @name bternary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-ternary2d}\n*/\nimport bternary2d from './../../base/broadcasted-ternary2d';\nsetReadOnly( ns, 'bternary2d', bternary2d );\n\n/**\n* @name bunary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-unary2d}\n*/\nimport bunary2d from './../../base/broadcasted-unary2d';\nsetReadOnly( ns, 'bunary2d', bunary2d );\n\n/**\n* @name bunary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-unary3d}\n*/\nimport bunary3d from './../../base/broadcasted-unary3d';\nsetReadOnly( ns, 'bunary3d', bunary3d );\n\n/**\n* @name bunary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-unary4d}\n*/\nimport bunary4d from './../../base/broadcasted-unary4d';\nsetReadOnly( ns, 'bunary4d', bunary4d );\n\n/**\n* @name bunary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/broadcasted-unary5d}\n*/\nimport bunary5d from './../../base/broadcasted-unary5d';\nsetReadOnly( ns, 'bunary5d', bunary5d );\n\n/**\n* @name cartesianPower\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/cartesian-power}\n*/\nimport cartesianPower from './../../base/cartesian-power';\nsetReadOnly( ns, 'cartesianPower', cartesianPower );\n\n/**\n* @name cartesianProduct\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/cartesian-product}\n*/\nimport cartesianProduct from './../../base/cartesian-product';\nsetReadOnly( ns, 'cartesianProduct', cartesianProduct );\n\n/**\n* @name cartesianSquare\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/cartesian-square}\n*/\nimport cartesianSquare from './../../base/cartesian-square';\nsetReadOnly( ns, 'cartesianSquare', cartesianSquare );\n\n/**\n* @name copy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/copy}\n*/\nimport copy from './../../base/copy';\nsetReadOnly( ns, 'copy', copy );\n\n/**\n* @name copyIndexed\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/copy-indexed}\n*/\nimport copyIndexed from './../../base/copy-indexed';\nsetReadOnly( ns, 'copyIndexed', copyIndexed );\n\n/**\n* @name dedupe\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/dedupe}\n*/\nimport dedupe from './../../base/dedupe';\nsetReadOnly( ns, 'dedupe', dedupe );\n\n/**\n* @name every\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/every}\n*/\nimport every from './../../base/every';\nsetReadOnly( ns, 'every', every );\n\n/**\n* @name everyBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/every-by}\n*/\nimport everyBy from './../../base/every-by';\nsetReadOnly( ns, 'everyBy', everyBy );\n\n/**\n* @name everyByRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/every-by-right}\n*/\nimport everyByRight from './../../base/every-by-right';\nsetReadOnly( ns, 'everyByRight', everyByRight );\n\n/**\n* @name filled\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled}\n*/\nimport filled from './../../base/filled';\nsetReadOnly( ns, 'filled', filled );\n\n/**\n* @name filledBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled-by}\n*/\nimport filledBy from './../../base/filled-by';\nsetReadOnly( ns, 'filledBy', filledBy );\n\n/**\n* @name filled2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled2d}\n*/\nimport filled2d from './../../base/filled2d';\nsetReadOnly( ns, 'filled2d', filled2d );\n\n/**\n* @name filled2dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled2d-by}\n*/\nimport filled2dBy from './../../base/filled2d-by';\nsetReadOnly( ns, 'filled2dBy', filled2dBy );\n\n/**\n* @name filled3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled3d}\n*/\nimport filled3d from './../../base/filled3d';\nsetReadOnly( ns, 'filled3d', filled3d );\n\n/**\n* @name filled3dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled3d-by}\n*/\nimport filled3dBy from './../../base/filled3d-by';\nsetReadOnly( ns, 'filled3dBy', filled3dBy );\n\n/**\n* @name filled4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled4d}\n*/\nimport filled4d from './../../base/filled4d';\nsetReadOnly( ns, 'filled4d', filled4d );\n\n/**\n* @name filled4dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled4d-by}\n*/\nimport filled4dBy from './../../base/filled4d-by';\nsetReadOnly( ns, 'filled4dBy', filled4dBy );\n\n/**\n* @name filled5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled5d}\n*/\nimport filled5d from './../../base/filled5d';\nsetReadOnly( ns, 'filled5d', filled5d );\n\n/**\n* @name filled5dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/filled5d-by}\n*/\nimport filled5dBy from './../../base/filled5d-by';\nsetReadOnly( ns, 'filled5dBy', filled5dBy );\n\n/**\n* @name fillednd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/fillednd}\n*/\nimport fillednd from './../../base/fillednd';\nsetReadOnly( ns, 'fillednd', fillednd );\n\n/**\n* @name filledndBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/fillednd-by}\n*/\nimport filledndBy from './../../base/fillednd-by';\nsetReadOnly( ns, 'filledndBy', filledndBy );\n\n/**\n* @name first\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/first}\n*/\nimport first from './../../base/first';\nsetReadOnly( ns, 'first', first );\n\n/**\n* @name flatten\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten}\n*/\nimport flatten from './../../base/flatten';\nsetReadOnly( ns, 'flatten', flatten );\n\n/**\n* @name flattenBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten-by}\n*/\nimport flattenBy from './../../base/flatten-by';\nsetReadOnly( ns, 'flattenBy', flattenBy );\n\n/**\n* @name flatten2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten2d}\n*/\nimport flatten2d from './../../base/flatten2d';\nsetReadOnly( ns, 'flatten2d', flatten2d );\n\n/**\n* @name flatten2dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten2d-by}\n*/\nimport flatten2dBy from './../../base/flatten2d-by';\nsetReadOnly( ns, 'flatten2dBy', flatten2dBy );\n\n/**\n* @name flatten3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten3d}\n*/\nimport flatten3d from './../../base/flatten3d';\nsetReadOnly( ns, 'flatten3d', flatten3d );\n\n/**\n* @name flatten3dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten3d-by}\n*/\nimport flatten3dBy from './../../base/flatten3d-by';\nsetReadOnly( ns, 'flatten3dBy', flatten3dBy );\n\n/**\n* @name flatten4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten4d}\n*/\nimport flatten4d from './../../base/flatten4d';\nsetReadOnly( ns, 'flatten4d', flatten4d );\n\n/**\n* @name flatten4dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten4d-by}\n*/\nimport flatten4dBy from './../../base/flatten4d-by';\nsetReadOnly( ns, 'flatten4dBy', flatten4dBy );\n\n/**\n* @name flatten5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten5d}\n*/\nimport flatten5d from './../../base/flatten5d';\nsetReadOnly( ns, 'flatten5d', flatten5d );\n\n/**\n* @name flatten5dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flatten5d-by}\n*/\nimport flatten5dBy from './../../base/flatten5d-by';\nsetReadOnly( ns, 'flatten5dBy', flatten5dBy );\n\n/**\n* @name fliplr2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/fliplr2d}\n*/\nimport fliplr2d from './../../base/fliplr2d';\nsetReadOnly( ns, 'fliplr2d', fliplr2d );\n\n/**\n* @name fliplr3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/fliplr3d}\n*/\nimport fliplr3d from './../../base/fliplr3d';\nsetReadOnly( ns, 'fliplr3d', fliplr3d );\n\n/**\n* @name fliplr4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/fliplr4d}\n*/\nimport fliplr4d from './../../base/fliplr4d';\nsetReadOnly( ns, 'fliplr4d', fliplr4d );\n\n/**\n* @name fliplr5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/fliplr5d}\n*/\nimport fliplr5d from './../../base/fliplr5d';\nsetReadOnly( ns, 'fliplr5d', fliplr5d );\n\n/**\n* @name flipud2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flipud2d}\n*/\nimport flipud2d from './../../base/flipud2d';\nsetReadOnly( ns, 'flipud2d', flipud2d );\n\n/**\n* @name flipud3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flipud3d}\n*/\nimport flipud3d from './../../base/flipud3d';\nsetReadOnly( ns, 'flipud3d', flipud3d );\n\n/**\n* @name flipud4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flipud4d}\n*/\nimport flipud4d from './../../base/flipud4d';\nsetReadOnly( ns, 'flipud4d', flipud4d );\n\n/**\n* @name flipud5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/flipud5d}\n*/\nimport flipud5d from './../../base/flipud5d';\nsetReadOnly( ns, 'flipud5d', flipud5d );\n\n/**\n* @name strided2array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/from-strided}\n*/\nimport strided2array from './../../base/from-strided';\nsetReadOnly( ns, 'strided2array', strided2array );\n\n/**\n* @name getter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/getter}\n*/\nimport getter from './../../base/getter';\nsetReadOnly( ns, 'getter', getter );\n\n/**\n* @name groupEntries\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/group-entries}\n*/\nimport groupEntries from './../../base/group-entries';\nsetReadOnly( ns, 'groupEntries', groupEntries );\n\n/**\n* @name groupEntriesBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/group-entries-by}\n*/\nimport groupEntriesBy from './../../base/group-entries-by';\nsetReadOnly( ns, 'groupEntriesBy', groupEntriesBy );\n\n/**\n* @name groupIndices\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/group-indices}\n*/\nimport groupIndices from './../../base/group-indices';\nsetReadOnly( ns, 'groupIndices', groupIndices );\n\n/**\n* @name groupIndicesBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/group-indices-by}\n*/\nimport groupIndicesBy from './../../base/group-indices-by';\nsetReadOnly( ns, 'groupIndicesBy', groupIndicesBy );\n\n/**\n* @name groupValues\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/group-values}\n*/\nimport groupValues from './../../base/group-values';\nsetReadOnly( ns, 'groupValues', groupValues );\n\n/**\n* @name groupValuesBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/group-values-by}\n*/\nimport groupValuesBy from './../../base/group-values-by';\nsetReadOnly( ns, 'groupValuesBy', groupValuesBy );\n\n/**\n* @name incrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/incrspace}\n*/\nimport incrspace from './../../base/incrspace';\nsetReadOnly( ns, 'incrspace', incrspace );\n\n/**\n* @name indexOf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/index-of}\n*/\nimport indexOf from './../../base/index-of';\nsetReadOnly( ns, 'indexOf', indexOf );\n\n/**\n* @name last\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/last}\n*/\nimport last from './../../base/last';\nsetReadOnly( ns, 'last', last );\n\n/**\n* @name lastIndexOf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/last-index-of}\n*/\nimport lastIndexOf from './../../base/last-index-of';\nsetReadOnly( ns, 'lastIndexOf', lastIndexOf );\n\n/**\n* @name linspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/linspace}\n*/\nimport linspace from './../../base/linspace';\nsetReadOnly( ns, 'linspace', linspace );\n\n/**\n* @name logspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/logspace}\n*/\nimport logspace from './../../base/logspace';\nsetReadOnly( ns, 'logspace', logspace );\n\n/**\n* @name map2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/map2d}\n*/\nimport map2d from './../../base/map2d';\nsetReadOnly( ns, 'map2d', map2d );\n\n/**\n* @name map3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/map3d}\n*/\nimport map3d from './../../base/map3d';\nsetReadOnly( ns, 'map3d', map3d );\n\n/**\n* @name map4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/map4d}\n*/\nimport map4d from './../../base/map4d';\nsetReadOnly( ns, 'map4d', map4d );\n\n/**\n* @name map5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/map5d}\n*/\nimport map5d from './../../base/map5d';\nsetReadOnly( ns, 'map5d', map5d );\n\n/**\n* @name mskbinary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/mskbinary2d}\n*/\nimport mskbinary2d from './../../base/mskbinary2d';\nsetReadOnly( ns, 'mskbinary2d', mskbinary2d );\n\n/**\n* @name mskfilter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/mskfilter}\n*/\nimport mskfilter from './../../base/mskfilter';\nsetReadOnly( ns, 'mskfilter', mskfilter );\n\n/**\n* @name mskunary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/mskunary2d}\n*/\nimport mskunary2d from './../../base/mskunary2d';\nsetReadOnly( ns, 'mskunary2d', mskunary2d );\n\n/**\n* @name mskunary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/mskunary3d}\n*/\nimport mskunary3d from './../../base/mskunary3d';\nsetReadOnly( ns, 'mskunary3d', mskunary3d );\n\n/**\n* @name nCartesianProduct\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/n-cartesian-product}\n*/\nimport nCartesianProduct from './../../base/n-cartesian-product';\nsetReadOnly( ns, 'nCartesianProduct', nCartesianProduct );\n\n/**\n* @name none\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/none}\n*/\nimport none from './../../base/none';\nsetReadOnly( ns, 'none', none );\n\n/**\n* @name noneBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/none-by}\n*/\nimport noneBy from './../../base/none-by';\nsetReadOnly( ns, 'noneBy', noneBy );\n\n/**\n* @name noneByRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/none-by-right}\n*/\nimport noneByRight from './../../base/none-by-right';\nsetReadOnly( ns, 'noneByRight', noneByRight );\n\n/**\n* @name oneTo\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/one-to}\n*/\nimport oneTo from './../../base/one-to';\nsetReadOnly( ns, 'oneTo', oneTo );\n\n/**\n* @name ones\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ones}\n*/\nimport ones from './../../base/ones';\nsetReadOnly( ns, 'ones', ones );\n\n/**\n* @name ones2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ones2d}\n*/\nimport ones2d from './../../base/ones2d';\nsetReadOnly( ns, 'ones2d', ones2d );\n\n/**\n* @name ones3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ones3d}\n*/\nimport ones3d from './../../base/ones3d';\nsetReadOnly( ns, 'ones3d', ones3d );\n\n/**\n* @name ones4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ones4d}\n*/\nimport ones4d from './../../base/ones4d';\nsetReadOnly( ns, 'ones4d', ones4d );\n\n/**\n* @name ones5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ones5d}\n*/\nimport ones5d from './../../base/ones5d';\nsetReadOnly( ns, 'ones5d', ones5d );\n\n/**\n* @name onesnd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/onesnd}\n*/\nimport onesnd from './../../base/onesnd';\nsetReadOnly( ns, 'onesnd', onesnd );\n\n/**\n* @name quaternary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quaternary2d}\n*/\nimport quaternary2d from './../../base/quaternary2d';\nsetReadOnly( ns, 'quaternary2d', quaternary2d );\n\n/**\n* @name quaternary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quaternary3d}\n*/\nimport quaternary3d from './../../base/quaternary3d';\nsetReadOnly( ns, 'quaternary3d', quaternary3d );\n\n/**\n* @name quaternary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quaternary4d}\n*/\nimport quaternary4d from './../../base/quaternary4d';\nsetReadOnly( ns, 'quaternary4d', quaternary4d );\n\n/**\n* @name quaternary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quaternary5d}\n*/\nimport quaternary5d from './../../base/quaternary5d';\nsetReadOnly( ns, 'quaternary5d', quaternary5d );\n\n/**\n* @name quinary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quinary2d}\n*/\nimport quinary2d from './../../base/quinary2d';\nsetReadOnly( ns, 'quinary2d', quinary2d );\n\n/**\n* @name quinary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quinary3d}\n*/\nimport quinary3d from './../../base/quinary3d';\nsetReadOnly( ns, 'quinary3d', quinary3d );\n\n/**\n* @name quinary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quinary4d}\n*/\nimport quinary4d from './../../base/quinary4d';\nsetReadOnly( ns, 'quinary4d', quinary4d );\n\n/**\n* @name quinary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/quinary5d}\n*/\nimport quinary5d from './../../base/quinary5d';\nsetReadOnly( ns, 'quinary5d', quinary5d );\n\n/**\n* @name resolveGetter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/resolve-getter}\n*/\nimport resolveGetter from './../../base/resolve-getter';\nsetReadOnly( ns, 'resolveGetter', resolveGetter );\n\n/**\n* @name reverse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/reverse}\n*/\nimport reverse from './../../base/reverse';\nsetReadOnly( ns, 'reverse', reverse );\n\n/**\n* @name setter\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/setter}\n*/\nimport setter from './../../base/setter';\nsetReadOnly( ns, 'setter', setter );\n\n/**\n* @name slice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/slice}\n*/\nimport slice from './../../base/slice';\nsetReadOnly( ns, 'slice', slice );\n\n/**\n* @name strided2array2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/strided2array2d}\n*/\nimport strided2array2d from './../../base/strided2array2d';\nsetReadOnly( ns, 'strided2array2d', strided2array2d );\n\n/**\n* @name strided2array3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/strided2array3d}\n*/\nimport strided2array3d from './../../base/strided2array3d';\nsetReadOnly( ns, 'strided2array3d', strided2array3d );\n\n/**\n* @name strided2array4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/strided2array4d}\n*/\nimport strided2array4d from './../../base/strided2array4d';\nsetReadOnly( ns, 'strided2array4d', strided2array4d );\n\n/**\n* @name strided2array5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/strided2array5d}\n*/\nimport strided2array5d from './../../base/strided2array5d';\nsetReadOnly( ns, 'strided2array5d', strided2array5d );\n\n/**\n* @name take\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/take}\n*/\nimport take from './../../base/take';\nsetReadOnly( ns, 'take', take );\n\n/**\n* @name takeIndexed\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/take-indexed}\n*/\nimport takeIndexed from './../../base/take-indexed';\nsetReadOnly( ns, 'takeIndexed', takeIndexed );\n\n/**\n* @name take2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/take2d}\n*/\nimport take2d from './../../base/take2d';\nsetReadOnly( ns, 'take2d', take2d );\n\n/**\n* @name take3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/take3d}\n*/\nimport take3d from './../../base/take3d';\nsetReadOnly( ns, 'take3d', take3d );\n\n/**\n* @name ternary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ternary2d}\n*/\nimport ternary2d from './../../base/ternary2d';\nsetReadOnly( ns, 'ternary2d', ternary2d );\n\n/**\n* @name ternary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ternary3d}\n*/\nimport ternary3d from './../../base/ternary3d';\nsetReadOnly( ns, 'ternary3d', ternary3d );\n\n/**\n* @name ternary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ternary4d}\n*/\nimport ternary4d from './../../base/ternary4d';\nsetReadOnly( ns, 'ternary4d', ternary4d );\n\n/**\n* @name ternary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/ternary5d}\n*/\nimport ternary5d from './../../base/ternary5d';\nsetReadOnly( ns, 'ternary5d', ternary5d );\n\n/**\n* @name toAccessorArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/to-accessor-array}\n*/\nimport toAccessorArray from './../../base/to-accessor-array';\nsetReadOnly( ns, 'toAccessorArray', toAccessorArray );\n\n/**\n* @name toDeduped\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/to-deduped}\n*/\nimport toDeduped from './../../base/to-deduped';\nsetReadOnly( ns, 'toDeduped', toDeduped );\n\n/**\n* @name toReversed\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/to-reversed}\n*/\nimport toReversed from './../../base/to-reversed';\nsetReadOnly( ns, 'toReversed', toReversed );\n\n/**\n* @name unary2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unary2d}\n*/\nimport unary2d from './../../base/unary2d';\nsetReadOnly( ns, 'unary2d', unary2d );\n\n/**\n* @name unary2dBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unary2d-by}\n*/\nimport unary2dBy from './../../base/unary2d-by';\nsetReadOnly( ns, 'unary2dBy', unary2dBy );\n\n/**\n* @name unary3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unary3d}\n*/\nimport unary3d from './../../base/unary3d';\nsetReadOnly( ns, 'unary3d', unary3d );\n\n/**\n* @name unary4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unary4d}\n*/\nimport unary4d from './../../base/unary4d';\nsetReadOnly( ns, 'unary4d', unary4d );\n\n/**\n* @name unary5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unary5d}\n*/\nimport unary5d from './../../base/unary5d';\nsetReadOnly( ns, 'unary5d', unary5d );\n\n/**\n* @name unarynd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unarynd}\n*/\nimport unarynd from './../../base/unarynd';\nsetReadOnly( ns, 'unarynd', unarynd );\n\n/**\n* @name unitspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/unitspace}\n*/\nimport unitspace from './../../base/unitspace';\nsetReadOnly( ns, 'unitspace', unitspace );\n\n/**\n* @name zeroTo\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zero-to}\n*/\nimport zeroTo from './../../base/zero-to';\nsetReadOnly( ns, 'zeroTo', zeroTo );\n\n/**\n* @name zeros\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zeros}\n*/\nimport zeros from './../../base/zeros';\nsetReadOnly( ns, 'zeros', zeros );\n\n/**\n* @name zeros2d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zeros2d}\n*/\nimport zeros2d from './../../base/zeros2d';\nsetReadOnly( ns, 'zeros2d', zeros2d );\n\n/**\n* @name zeros3d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zeros3d}\n*/\nimport zeros3d from './../../base/zeros3d';\nsetReadOnly( ns, 'zeros3d', zeros3d );\n\n/**\n* @name zeros4d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zeros4d}\n*/\nimport zeros4d from './../../base/zeros4d';\nsetReadOnly( ns, 'zeros4d', zeros4d );\n\n/**\n* @name zeros5d\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zeros5d}\n*/\nimport zeros5d from './../../base/zeros5d';\nsetReadOnly( ns, 'zeros5d', zeros5d );\n\n/**\n* @name zerosnd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/base/zerosnd}\n*/\nimport zerosnd from './../../base/zerosnd';\nsetReadOnly( ns, 'zerosnd', zerosnd );\n\n\n// EXPORTS //\n\nexport default ns;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'some' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = internal( x, isPositive );\n* // returns true\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( predicate.call( thisArg, x[ i ], i, x ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns true\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( predicate.call( thisArg, get( data, i ), i, data ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = anyBy( x, isPositive );\n* // returns true\n*/\nfunction anyBy( x, predicate, thisArg ) {\n\tvar obj;\n\tif ( hasMethod( x, 'some' ) ) {\n\t\treturn x.some( predicate, thisArg );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default anyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = internal( x, isPositive );\n* // returns true\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar i;\n\tfor ( i = x.length-1; i >= 0; i-- ) {\n\t\tif ( predicate.call( thisArg, x[ i ], i, x ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns true\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = data.length-1; i >= 0; i-- ) {\n\t\tif ( predicate.call( thisArg, get( data, i ), i, data ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in an array passes a test implemented by a predicate function, while iterating from right to left.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = anyByRight( x, isPositive );\n* // returns true\n*/\nfunction anyByRight( x, predicate, thisArg ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default anyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits array element entries into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateEntries( x, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateEntries( x, filter ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, v ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits element entries into two groups according to a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - predicate function execution context\n* @returns {Object} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateEntriesBy( x, predicate );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateEntriesBy( x, predicate, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = get( x, i );\n\t\tif ( predicate.call( thisArg, v, i, x ) ) {\n\t\t\tout[ 0 ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, v ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateEntriesBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits array element indices into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateIndices( x, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcateIndices( x, filter ) {\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIndices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits element indices into two groups according to a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - predicate function execution context\n* @returns {Object} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateIndicesBy( x, predicate );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcateIndicesBy( x, predicate, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( predicate.call( thisArg, get( x, i ), i, x ) ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateIndicesBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits array element values into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateValues( x, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateValues( x, filter ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Splits element values into two groups according to a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - predicate function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - predicate function execution context\n* @returns {Object} group results\n*\n* @example\n* function predicate( v ) {\n*     return v[ 0 ] === 'b';\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = bifurcateValuesBy( x, predicate );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcateValuesBy( x, predicate, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = get( x, i );\n\t\tif ( predicate.call( thisArg, v, i, x ) ) {\n\t\t\tout[ 0 ].push( v );\n\t\t} else {\n\t\t\tout[ 1 ].push( v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default bifurcateValuesBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two two-dimensional nested input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = ones2d( shape );\n* var z = zeros2d( shape );\n*\n* binary2d( [ x, y, z ], shape, add );\n*\n* console.log( z );\n* // => [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ]\n*/\nfunction binary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tz0 = z[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tz0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ] );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two three-dimensional nested input arrays and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shape = [ 2, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = ones3d( shape );\n* var z = zeros3d( shape );\n*\n* binary3d( [ x, y, z ], shape, add );\n*\n* console.log( z );\n* // => [ [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ], [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ] ]\n*/\nfunction binary3d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar x1;\n\tvar y0;\n\tvar y1;\n\tvar z0;\n\tvar z1;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tz1 = z[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tz0 = z1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tz0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two four-dimensional nested input arrays and assigns results to elements in a four-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shape = [ 1, 2, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = ones4d( shape );\n* var z = zeros4d( shape );\n*\n* binary4d( [ x, y, z ], shape, add );\n*\n* console.log( z );\n* // => [ [ [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ], [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ] ] ]\n*/\nfunction binary4d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar z0;\n\tvar z1;\n\tvar z2;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = y[ i3 ];\n\t\tz2 = z[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tz1 = z2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tz0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two five-dimensional nested input arrays and assigns results to elements in a five-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shape = [ 1, 1, 2, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = ones5d( shape );\n* var z = zeros5d( shape );\n*\n* binary5d( [ x, y, z ], shape, add );\n*\n* console.log( z );\n* // => [ [ [ [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ], [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ] ] ] ]\n*/\nfunction binary5d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar x3;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar y3;\n\tvar z0;\n\tvar z1;\n\tvar z2;\n\tvar z3;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = y[ i4 ];\n\t\tz3 = z[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tz2 = z3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tz1 = z2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tz0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default binary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two broadcasted input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 1 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = ones2d( shapes[ 1 ] );\n* var z = zeros2d( shapes[ 2 ] );\n*\n* bbinary2d( [ x, y, z ], shapes, add );\n*\n* console.log( z );\n* // => [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ]\n*/\nfunction bbinary2d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dy0;\n\tvar dy1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar j0;\n\tvar j1;\n\tvar k0;\n\tvar k1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tsh = shapes[ 2 ];\n\tS0 = sh[ 1 ];\n\tS1 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 1 ];\n\tdx1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 1 ];\n\tdy1 = st[ 0 ];\n\n\tz = arrays[ 2 ];\n\n\tj1 = 0;\n\tk1 = 0;\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tj0 = 0;\n\t\tk0 = 0;\n\t\tx0 = x[ j1 ];\n\t\ty0 = y[ k1 ];\n\t\tz0 = z[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tz0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ] );\n\t\t\tj0 += dx0;\n\t\t\tk0 += dy0;\n\t\t}\n\t\tj1 += dx1;\n\t\tk1 += dy1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bbinary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two broadcasted input arrays and assigns results to elements in a three-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shapes = [\n*     [ 1, 1, 2 ],\n*     [ 2, 1, 1 ],\n*     [ 2, 2, 2 ]\n* ];\n*\n* var x = ones3d( shapes[ 0 ] );\n* var y = ones3d( shapes[ 1 ] );\n* var z = zeros3d( shapes[ 2 ] );\n*\n* bbinary3d( [ x, y, z ], shapes, add );\n*\n* console.log( z );\n* // => [ [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ], [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ] ]\n*/\nfunction bbinary3d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dy0;\n\tvar dy1;\n\tvar dy2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar k0;\n\tvar k1;\n\tvar k2;\n\tvar x0;\n\tvar x1;\n\tvar y0;\n\tvar y1;\n\tvar z0;\n\tvar z1;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tsh = shapes[ 2 ];\n\tS0 = sh[ 2 ];\n\tS1 = sh[ 1 ];\n\tS2 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 2 ];\n\tdx1 = st[ 1 ];\n\tdx2 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 2 ];\n\tdy1 = st[ 1 ];\n\tdy2 = st[ 0 ];\n\n\tz = arrays[ 2 ];\n\n\tj2 = 0;\n\tk2 = 0;\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tj1 = 0;\n\t\tk1 = 0;\n\t\tx1 = x[ j2 ];\n\t\ty1 = y[ k2 ];\n\t\tz1 = z[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tj0 = 0;\n\t\t\tk0 = 0;\n\t\t\tx0 = x1[ j1 ];\n\t\t\ty0 = y1[ k1 ];\n\t\t\tz0 = z1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tz0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ] );\n\t\t\t\tj0 += dx0;\n\t\t\t\tk0 += dy0;\n\t\t\t}\n\t\t\tj1 += dx1;\n\t\t\tk1 += dy1;\n\t\t}\n\t\tj2 += dx2;\n\t\tk2 += dy2;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bbinary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two broadcasted input arrays and assigns results to elements in a four-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shapes = [\n*     [ 1, 1, 1, 2 ],\n*     [ 1, 2, 1, 1 ],\n*     [ 1, 2, 2, 2 ]\n* ];\n*\n* var x = ones4d( shapes[ 0 ] );\n* var y = ones4d( shapes[ 1 ] );\n* var z = zeros4d( shapes[ 2 ] );\n*\n* bbinary4d( [ x, y, z ], shapes, add );\n*\n* console.log( z );\n* // => [ [ [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ], [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ] ] ]\n*/\nfunction bbinary4d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dx3;\n\tvar dy0;\n\tvar dy1;\n\tvar dy2;\n\tvar dy3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar j3;\n\tvar k0;\n\tvar k1;\n\tvar k2;\n\tvar k3;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar z0;\n\tvar z1;\n\tvar z2;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tsh = shapes[ 2 ];\n\tS0 = sh[ 3 ];\n\tS1 = sh[ 2 ];\n\tS2 = sh[ 1 ];\n\tS3 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 3 ];\n\tdx1 = st[ 2 ];\n\tdx2 = st[ 1 ];\n\tdx3 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 3 ];\n\tdy1 = st[ 2 ];\n\tdy2 = st[ 1 ];\n\tdy3 = st[ 0 ];\n\n\tz = arrays[ 2 ];\n\n\tj3 = 0;\n\tk3 = 0;\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tj2 = 0;\n\t\tk2 = 0;\n\t\tx2 = x[ j3 ];\n\t\ty2 = y[ k3 ];\n\t\tz2 = z[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tj1 = 0;\n\t\t\tk1 = 0;\n\t\t\tx1 = x2[ j2 ];\n\t\t\ty1 = y2[ k2 ];\n\t\t\tz1 = z2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tj0 = 0;\n\t\t\t\tk0 = 0;\n\t\t\t\tx0 = x1[ j1 ];\n\t\t\t\ty0 = y1[ k1 ];\n\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tz0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ] );\n\t\t\t\t\tj0 += dx0;\n\t\t\t\t\tk0 += dy0;\n\t\t\t\t}\n\t\t\t\tj1 += dx1;\n\t\t\t\tk1 += dy1;\n\t\t\t}\n\t\t\tj2 += dx2;\n\t\t\tk2 += dy2;\n\t\t}\n\t\tj3 += dx3;\n\t\tk3 += dy3;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bbinary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two broadcasted input arrays and assigns results to elements in a five-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array>} arrays - array-like object containing two input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - binary callback\n* @returns {void}\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shapes = [\n*     [ 1, 1, 1, 1, 2 ],\n*     [ 1, 1, 2, 1, 1 ],\n*     [ 1, 1, 2, 2, 2 ]\n* ];\n*\n* var x = ones5d( shapes[ 0 ] );\n* var y = ones5d( shapes[ 1 ] );\n* var z = zeros5d( shapes[ 2 ] );\n*\n* bbinary5d( [ x, y, z ], shapes, add );\n*\n* console.log( z );\n* // => [ [ [ [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ], [ [ 2.0, 2.0 ], [ 2.0, 2.0 ] ] ] ] ]\n*/\nfunction bbinary5d( arrays, shapes, fcn ) { // eslint-disable-line max-statements\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dx3;\n\tvar dx4;\n\tvar dy0;\n\tvar dy1;\n\tvar dy2;\n\tvar dy3;\n\tvar dy4;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar j3;\n\tvar j4;\n\tvar k0;\n\tvar k1;\n\tvar k2;\n\tvar k3;\n\tvar k4;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar x3;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar y3;\n\tvar z0;\n\tvar z1;\n\tvar z2;\n\tvar z3;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\n\tsh = shapes[ 2 ];\n\tS0 = sh[ 4 ];\n\tS1 = sh[ 3 ];\n\tS2 = sh[ 2 ];\n\tS3 = sh[ 1 ];\n\tS4 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 4 ];\n\tdx1 = st[ 3 ];\n\tdx2 = st[ 2 ];\n\tdx3 = st[ 1 ];\n\tdx4 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 4 ];\n\tdy1 = st[ 3 ];\n\tdy2 = st[ 2 ];\n\tdy3 = st[ 1 ];\n\tdy4 = st[ 0 ];\n\n\tz = arrays[ 2 ];\n\n\tj4 = 0;\n\tk4 = 0;\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tj3 = 0;\n\t\tk3 = 0;\n\t\tx3 = x[ j4 ];\n\t\ty3 = y[ k4 ];\n\t\tz3 = z[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tj2 = 0;\n\t\t\tk2 = 0;\n\t\t\tx2 = x3[ j3 ];\n\t\t\ty2 = y3[ k3 ];\n\t\t\tz2 = z3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tj1 = 0;\n\t\t\t\tk1 = 0;\n\t\t\t\tx1 = x2[ j2 ];\n\t\t\t\ty1 = y2[ k2 ];\n\t\t\t\tz1 = z2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tj0 = 0;\n\t\t\t\t\tk0 = 0;\n\t\t\t\t\tx0 = x1[ j1 ];\n\t\t\t\t\ty0 = y1[ k1 ];\n\t\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tz0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ] );\n\t\t\t\t\t\tj0 += dx0;\n\t\t\t\t\t\tk0 += dy0;\n\t\t\t\t\t}\n\t\t\t\t\tj1 += dx1;\n\t\t\t\t\tk1 += dy1;\n\t\t\t\t}\n\t\t\t\tj2 += dx2;\n\t\t\t\tk2 += dy2;\n\t\t\t}\n\t\t\tj3 += dx3;\n\t\t\tk3 += dy3;\n\t\t}\n\t\tj4 += dx4;\n\t\tk4 += dy4;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bbinary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to elements in four broadcasted input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing four input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add4';\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 1 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = ones2d( shapes[ 1 ] );\n* var z = ones2d( shapes[ 2 ] );\n* var w = ones2d( shapes[ 3 ] );\n* var out = zeros2d( shapes[ 4 ] );\n*\n* bquaternary2d( [ x, y, z, w, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ 4.0, 4.0 ], [ 4.0, 4.0 ] ]\n*/\nfunction bquaternary2d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dy0;\n\tvar dy1;\n\tvar dz0;\n\tvar dz1;\n\tvar dw0;\n\tvar dw1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar j0;\n\tvar j1;\n\tvar k0;\n\tvar k1;\n\tvar m0;\n\tvar m1;\n\tvar n0;\n\tvar n1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\n\tsh = shapes[ 4 ];\n\tS0 = sh[ 1 ];\n\tS1 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 1 ];\n\tdx1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 1 ];\n\tdy1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 2 ], shapes[ 2 ], sh );\n\tz = o.data;\n\tst = o.strides;\n\tdz0 = st[ 1 ];\n\tdz1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 3 ], shapes[ 3 ], sh );\n\tw = o.data;\n\tst = o.strides;\n\tdw0 = st[ 1 ];\n\tdw1 = st[ 0 ];\n\n\tu = arrays[ 4 ];\n\n\tj1 = 0;\n\tk1 = 0;\n\tm1 = 0;\n\tn1 = 0;\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tj0 = 0;\n\t\tk0 = 0;\n\t\tm0 = 0;\n\t\tn0 = 0;\n\t\tx0 = x[ j1 ];\n\t\ty0 = y[ k1 ];\n\t\tz0 = z[ m1 ];\n\t\tw0 = w[ n1 ];\n\t\tu0 = u[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tu0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ], z0[ m0 ], w0[ n0 ] );\n\t\t\tj0 += dx0;\n\t\t\tk0 += dy0;\n\t\t\tm0 += dz0;\n\t\t\tn0 += dw0;\n\t\t}\n\t\tj1 += dx1;\n\t\tk1 += dy1;\n\t\tm1 += dz1;\n\t\tn1 += dw1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bquaternary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a quinary callback to elements in five broadcasted input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing five input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* function add( x, y, z, w, v ) {\n*     return x + y + z + w + v;\n* }\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 1 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = ones2d( shapes[ 1 ] );\n* var z = ones2d( shapes[ 2 ] );\n* var w = ones2d( shapes[ 3 ] );\n* var v = ones2d( shapes[ 4 ] );\n* var out = zeros2d( shapes[ 5 ] );\n*\n* bquinary2d( [ x, y, z, w, v, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ]\n*/\nfunction bquinary2d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dy0;\n\tvar dy1;\n\tvar dz0;\n\tvar dz1;\n\tvar dw0;\n\tvar dw1;\n\tvar du0;\n\tvar du1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar j0;\n\tvar j1;\n\tvar k0;\n\tvar k1;\n\tvar m0;\n\tvar m1;\n\tvar n0;\n\tvar n1;\n\tvar p0;\n\tvar p1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar v0;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tsh = shapes[ 5 ];\n\tS0 = sh[ 1 ];\n\tS1 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 1 ];\n\tdx1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 1 ];\n\tdy1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 2 ], shapes[ 2 ], sh );\n\tz = o.data;\n\tst = o.strides;\n\tdz0 = st[ 1 ];\n\tdz1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 3 ], shapes[ 3 ], sh );\n\tw = o.data;\n\tst = o.strides;\n\tdw0 = st[ 1 ];\n\tdw1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 4 ], shapes[ 4 ], sh );\n\tu = o.data;\n\tst = o.strides;\n\tdu0 = st[ 1 ];\n\tdu1 = st[ 0 ];\n\n\tv = arrays[ 5 ];\n\n\tj1 = 0;\n\tk1 = 0;\n\tm1 = 0;\n\tn1 = 0;\n\tp1 = 0;\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tj0 = 0;\n\t\tk0 = 0;\n\t\tm0 = 0;\n\t\tn0 = 0;\n\t\tp0 = 0;\n\t\tx0 = x[ j1 ];\n\t\ty0 = y[ k1 ];\n\t\tz0 = z[ m1 ];\n\t\tw0 = w[ n1 ];\n\t\tu0 = u[ p1 ];\n\t\tv0 = v[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tv0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ], z0[ m0 ], w0[ n0 ], u0[ p0 ] );\n\t\t\tj0 += dx0;\n\t\t\tk0 += dy0;\n\t\t\tm0 += dz0;\n\t\t\tn0 += dw0;\n\t\t\tp0 += du0;\n\t\t}\n\t\tj1 += dx1;\n\t\tk1 += dy1;\n\t\tm1 += dz1;\n\t\tn1 += dw1;\n\t\tp1 += du1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bquinary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a ternary callback to elements in three broadcasted input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing three input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n* import add from '@stdlib/math/base/ops/add3';\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 1 ],\n*     [ 1, 1 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = ones2d( shapes[ 1 ] );\n* var z = ones2d( shapes[ 2 ] );\n* var out = zeros2d( shapes[ 3 ] );\n*\n* bternary2d( [ x, y, z, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ 3.0, 3.0 ], [ 3.0, 3.0 ] ]\n*/\nfunction bternary2d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dy0;\n\tvar dy1;\n\tvar dz0;\n\tvar dz1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar j0;\n\tvar j1;\n\tvar k0;\n\tvar k1;\n\tvar m0;\n\tvar m1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\n\tsh = shapes[ 3 ];\n\tS0 = sh[ 1 ];\n\tS1 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 1 ];\n\tdx1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 1 ];\n\tdy1 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 2 ], shapes[ 2 ], sh );\n\tz = o.data;\n\tst = o.strides;\n\tdz0 = st[ 1 ];\n\tdz1 = st[ 0 ];\n\n\tw = arrays[ 3 ];\n\n\tj1 = 0;\n\tk1 = 0;\n\tm1 = 0;\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tj0 = 0;\n\t\tk0 = 0;\n\t\tm0 = 0;\n\t\tx0 = x[ j1 ];\n\t\ty0 = y[ k1 ];\n\t\tz0 = z[ m1 ];\n\t\tw0 = w[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tw0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ], z0[ m0 ] );\n\t\t\tj0 += dx0;\n\t\t\tk0 += dy0;\n\t\t\tm0 += dz0;\n\t\t}\n\t\tj1 += dx1;\n\t\tk1 += dy1;\n\t\tm1 += dz1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bternary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a broadcasted nested input array and assigns results to elements in a two-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shapes = [\n*     [ 1, 2 ],\n*     [ 2, 2 ]\n* ];\n*\n* var x = ones2d( shapes[ 0 ] );\n* var y = zeros2d( shapes[ 1 ] );\n*\n* bunary2d( [ x, y ], shapes, scale );\n*\n* console.log( y );\n* // => [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*/\nfunction bunary2d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar j0;\n\tvar j1;\n\tvar x0;\n\tvar y0;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\n\tsh = shapes[ 1 ];\n\tS0 = sh[ 1 ];\n\tS1 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 1 ];\n\tdx1 = st[ 0 ];\n\n\ty = arrays[ 1 ];\n\n\tj1 = 0;\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tj0 = 0;\n\t\tx0 = x[ j1 ];\n\t\ty0 = y[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ty0[ i0 ] = fcn( x0[ j0 ] );\n\t\t\tj0 += dx0;\n\t\t}\n\t\tj1 += dx1;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bunary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a broadcasted nested input array and assigns results to elements in a three-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shapes = [\n*     [ 1, 1, 2 ],\n*     [ 1, 2, 2 ]\n* ];\n*\n* var x = ones3d( shapes[ 0 ] );\n* var y = zeros3d( shapes[ 1 ] );\n*\n* bunary3d( [ x, y ], shapes, scale );\n*\n* console.log( y );\n* // => [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ]\n*/\nfunction bunary3d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar x0;\n\tvar x1;\n\tvar y0;\n\tvar y1;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\n\tsh = shapes[ 1 ];\n\tS0 = sh[ 2 ];\n\tS1 = sh[ 1 ];\n\tS2 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 2 ];\n\tdx1 = st[ 1 ];\n\tdx2 = st[ 0 ];\n\n\ty = arrays[ 1 ];\n\tj2 = 0;\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tj1 = 0;\n\t\tx1 = x[ j2 ];\n\t\ty1 = y[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tj0 = 0;\n\t\t\tx0 = x1[ j1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\ty0[ i0 ] = fcn( x0[ j0 ] );\n\t\t\t\tj0 += dx0;\n\t\t\t}\n\t\t\tj1 += dx1;\n\t\t}\n\t\tj2 += dx2;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bunary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a broadcasted nested input array and assigns results to elements in a four-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shapes = [\n*     [ 1, 1, 1, 2 ],\n*     [ 1, 1, 2, 2 ]\n* ];\n*\n* var x = ones4d( shapes[ 0 ] );\n* var y = zeros4d( shapes[ 1 ] );\n*\n* bunary4d( [ x, y ], shapes, scale );\n*\n* console.log( y );\n* // => [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ]\n*/\nfunction bunary4d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dx3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar j3;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\n\tsh = shapes[ 1 ];\n\tS0 = sh[ 3 ];\n\tS1 = sh[ 2 ];\n\tS2 = sh[ 1 ];\n\tS3 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 3 ];\n\tdx1 = st[ 2 ];\n\tdx2 = st[ 1 ];\n\tdx3 = st[ 0 ];\n\n\ty = arrays[ 1 ];\n\tj3 = 0;\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tj2 = 0;\n\t\tx2 = x[ j3 ];\n\t\ty2 = y[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tj1 = 0;\n\t\t\tx1 = x2[ j2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tj0 = 0;\n\t\t\t\tx0 = x1[ j1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\ty0[ i0 ] = fcn( x0[ j0 ] );\n\t\t\t\t\tj0 += dx0;\n\t\t\t\t}\n\t\t\t\tj1 += dx1;\n\t\t\t}\n\t\t\tj2 += dx2;\n\t\t}\n\t\tj3 += dx3;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bunary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport broadcastArray from './../../../base/broadcast-array';\n\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a broadcasted nested input array and assigns results to elements in a five-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shapes = [\n*     [ 1, 1, 1, 1, 2 ],\n*     [ 1, 1, 1, 2, 2 ]\n* ];\n*\n* var x = ones5d( shapes[ 0 ] );\n* var y = zeros5d( shapes[ 1 ] );\n*\n* bunary5d( [ x, y ], shapes, scale );\n*\n* console.log( y );\n* // => [ [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ] ]\n*/\nfunction bunary5d( arrays, shapes, fcn ) {\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dx3;\n\tvar dx4;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar j3;\n\tvar j4;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar x3;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar y3;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\n\tsh = shapes[ 1 ];\n\tS0 = sh[ 4 ];\n\tS1 = sh[ 3 ];\n\tS2 = sh[ 2 ];\n\tS3 = sh[ 1 ];\n\tS4 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 4 ];\n\tdx1 = st[ 3 ];\n\tdx2 = st[ 2 ];\n\tdx3 = st[ 1 ];\n\tdx4 = st[ 0 ];\n\n\ty = arrays[ 1 ];\n\tj4 = 0;\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tj3 = 0;\n\t\tx3 = x[ j4 ];\n\t\ty3 = y[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tj2 = 0;\n\t\t\tx2 = x3[ j3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tj1 = 0;\n\t\t\t\tx1 = x2[ j2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tj0 = 0;\n\t\t\t\t\tx0 = x1[ j1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\ty0[ i0 ] = fcn( x0[ j0 ] );\n\t\t\t\t\t\tj0 += dx0;\n\t\t\t\t\t}\n\t\t\t\t\tj1 += dx1;\n\t\t\t\t}\n\t\t\t\tj2 += dx2;\n\t\t\t}\n\t\t\tj3 += dx3;\n\t\t}\n\t\tj4 += dx4;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default bunary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport pow from '@stdlib/math/base/special/pow';\n\n\n// MAIN //\n\n/**\n* Returns the Cartesian power.\n*\n* ## Notes\n*\n* -   The Cartesian power is an n-fold Cartesian product involving a single array. The main insight of this implementation is that the n-fold Cartesian product can be presented as an n-dimensional array stored in row-major order. As such, we can\n*\n*     -   Compute the total number of tuples, which is simply the size of the provided array (set) raised to the specified power `n`. For n-dimensional arrays, this is the equivalent of computing the product of array dimensions to determine the total number of elements.\n*     -   Initialize an array for storing indices for indexing into the provided array. For n-dimensional arrays, the index array is equivalent to an array of subscripts for indexing into each dimension.\n*     -   For the outermost loop, treat the loop index as a linear index into an n-dimensional array and resolve the corresponding subscripts.\n*     -   Continue iterating until all tuples have been generated.\n*\n* @param {ArrayLikeObject} x - input array\n* @param {NonNegativeInteger} n - power\n* @returns {Array<Array>} list of ordered tuples comprising the Cartesian product\n*\n* @example\n* var x = [ 1, 2 ];\n*\n* var out = cartesianPower( x, 2 );\n* // returns [ [ 1, 1 ], [ 1, 2 ], [ 2, 1 ], [ 2, 2 ] ]\n*/\nfunction cartesianPower( x, n ) {\n\tvar out;\n\tvar tmp;\n\tvar idx;\n\tvar len;\n\tvar N;\n\tvar s;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tN = x.length;\n\tif ( N <= 0 || n <= 0 ) {\n\t\treturn [];\n\t}\n\t// Compute the total number of ordered tuples:\n\tlen = pow( N, n );\n\n\t// Initialize a list of indices for indexing into the array (equivalent to ndarray subscripts):\n\tidx = [];\n\tfor ( i = 0; i < n; i++ ) {\n\t\tidx.push( 0 );\n\t}\n\t// Compute the n-fold Cartesian product...\n\tout = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\t// Resolve a linear index to array indices (logic is equivalent to what is found in ndarray/base/ind2sub for an ndarray stored in row-major order; see https://github.com/stdlib-js/stdlib/blob/215ca5355f3404f15996fd0ced58a98e46f22be6/lib/node_modules/%40stdlib/ndarray/base/ind2sub/lib/assign.js)...\n\t\tk = i;\n\t\tfor ( j = n-1; j >= 0; j-- ) {\n\t\t\ts = k % N;\n\t\t\tk -= s;\n\t\t\tk /= N;\n\t\t\tidx[ j ] = s;\n\t\t}\n\t\t// Generate the next ordered tuple...\n\t\ttmp = [];\n\t\tfor ( j = 0; j < n; j++ ) {\n\t\t\ttmp.push( x[ idx[ j ] ] );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default cartesianPower;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the Cartesian product.\n*\n* @param {ArrayLikeObject} x1 - first input array\n* @param {ArrayLikeObject} x2 - second input array\n* @returns {Array<Array>} list of ordered tuples comprising the Cartesian product\n*\n* @example\n* var x1 = [ 1, 2, 3 ];\n* var x2 = [ 4, 5 ];\n*\n* var out = cartesianProduct( x1, x2 );\n* // returns [ [ 1, 4 ], [ 1, 5 ], [ 2, 4 ], [ 2, 5 ], [ 3, 4 ], [ 3, 5 ] ]\n*/\nfunction cartesianProduct( x1, x2 ) {\n\tvar out;\n\tvar M;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tM = x1.length;\n\tN = x2.length;\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tv = x1[ i ];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tout.push( [ v, x2[ j ] ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default cartesianProduct;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the Cartesian square.\n*\n* @param {ArrayLikeObject} x - input array\n* @returns {Array<Array>} list of ordered tuples comprising the Cartesian product\n*\n* @example\n* var x = [ 1, 2 ];\n*\n* var out = cartesianSquare( x );\n* // returns [ [ 1, 1 ], [ 1, 2 ], [ 2, 1 ], [ 2, 2 ] ]\n*/\nfunction cartesianSquare( x ) {\n\tvar out;\n\tvar N;\n\tvar v;\n\tvar i;\n\tvar j;\n\n\tN = x.length;\n\tout = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ i ];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tout.push( [ v, x[ j ] ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default cartesianSquare;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math/base/assert/is-nan';\n\n\n// FUNCTIONS //\n\n/**\n* De-duplicates values in-place.\n*\n* @private\n* @param {Array} x - input array\n* @param {PositiveInteger} limit - number of allowed consecutive duplicates\n* @returns {Array} input array\n*\n* @example\n* var x = [ 1, 1, 2, 3, 3 ];\n*\n* var y = dedupeInPlace( x, 1 );\n* // returns [ 1, 2, 3 ]\n*\n* var bool = ( x === y );\n* // returns true\n*\n* @example\n* var x = [ 1, 1, 1, 2, 1, 1, 3, 3 ];\n*\n* var y = dedupeInPlace( x, 2 );\n* // returns [ 1, 1, 2, 1, 1, 3, 3 ]\n*\n* var bool = ( x === y );\n* // returns true\n*/\nfunction dedupeInPlace( x, limit ) {\n\tvar count;\n\tvar prev;\n\tvar len;\n\tvar ptr;\n\tvar v;\n\tvar i;\n\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn x;\n\t}\n\tprev = x[ 0 ];\n\tcount = 1;\n\tptr = 1;\n\tfor ( i = 1; i < len; i++ ) {\n\t\tv = x[ i ];\n\t\tif ( v === prev ) {\n\t\t\tcount += 1;\n\t\t\tif ( count <= limit ) {\n\t\t\t\tx[ ptr ] = prev;\n\t\t\t\tptr += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v;\n\t\t\tcount = 1;\n\t\t\tx[ ptr ] = prev;\n\t\t\tptr += 1;\n\t\t}\n\t}\n\tx.length = ptr;\n\treturn x;\n}\n\n/**\n* De-duplicates values in-place, treating `NaN` values as equal.\n*\n* @private\n* @param {Array} x - input array\n* @param {PositiveInteger} limit - number of allowed consecutive duplicates\n* @returns {Array} input array\n*\n* @example\n* var x = [ 1, 1, 2, NaN, NaN, 3, 3 ];\n*\n* var y = dedupeEqualNaNs( x, 1 );\n* // returns [ 1, 2, NaN, 3 ]\n*\n* var bool = ( x === y );\n* // returns true\n*\n* @example\n* var x = [ 1, 1, 1, 2, 1, 1, NaN, NaN, NaN, 3, 3 ];\n*\n* var y = dedupeEqualNaNs( x, 2 );\n* // returns [ 1, 1, 2, 1, 1, NaN, NaN, 3, 3 ]\n*\n* var bool = ( x === y );\n* // returns true\n*/\nfunction dedupeEqualNaNs( x, limit ) {\n\tvar count;\n\tvar prev;\n\tvar len;\n\tvar ptr;\n\tvar FLG;\n\tvar v;\n\tvar i;\n\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn x;\n\t}\n\tFLG = false;\n\tprev = x[ 0 ];\n\tif ( isnan( prev ) ) {\n\t\tFLG = true;\n\t}\n\tcount = 1;\n\tptr = 1;\n\tfor ( i = 1; i < len; i++ ) {\n\t\tv = x[ i ];\n\t\tif ( v === prev || ( FLG && isnan( v ) ) ) {\n\t\t\tcount += 1;\n\t\t\tif ( count <= limit ) {\n\t\t\t\tx[ ptr ] = prev;\n\t\t\t\tptr += 1;\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v;\n\t\t\tcount = 1;\n\t\t\tx[ ptr ] = prev;\n\t\t\tptr += 1;\n\t\t\tFLG = false;\n\t\t\tif ( isnan( prev ) ) {\n\t\t\t\tFLG = true;\n\t\t\t}\n\t\t}\n\t}\n\tx.length = ptr;\n\treturn x;\n}\n\n\n// MAIN //\n\n/**\n* Removes consecutive duplicated values.\n*\n* @param {Array} x - input array\n* @param {PositiveInteger} limit - number of allowed consecutive duplicates\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {Array} de-duplicated values\n*\n* @example\n* var x = [ 1, 1, 2, 3, 3 ];\n*\n* var y = dedupe( x, 1, false );\n* // returns [ 1, 2, 3 ]\n*\n* var bool = ( x === y );\n* // returns true\n*\n* @example\n* var x = [ 1, 1, 1, 2, 1, 1, 3, 3 ];\n*\n* var y = dedupe( x, 2, false );\n* // returns [ 1, 1, 2, 1, 1, 3, 3 ]\n*\n* var bool = ( x === y );\n* // returns true\n*/\nfunction dedupe( x, limit, equalNaNs ) {\n\tif ( equalNaNs ) {\n\t\treturn dedupeEqualNaNs( x, limit );\n\t}\n\treturn dedupeInPlace( x, limit );\n}\n\n\n// EXPORTS //\n\nexport default dedupe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'every' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internal( x, isPositive );\n* // returns true\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( !predicate.call( thisArg, x[ i ], i, x ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns true\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( !predicate.call( thisArg, get( data, i ), i, data ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = everyBy( x, isPositive );\n* // returns true\n*/\nfunction everyBy( x, predicate, thisArg ) {\n\tvar obj;\n\tif ( hasMethod( x, 'every' ) ) {\n\t\treturn x.every( predicate, thisArg );\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default everyBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internal( x, isPositive );\n* // returns true\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar i;\n\tfor ( i = x.length-1; i >= 0; i-- ) {\n\t\tif ( !predicate.call( thisArg, x[ i ], i, x ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns true\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = data.length-1; i >= 0; i-- ) {\n\t\tif ( !predicate.call( thisArg, get( data, i ), i, data ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array pass a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {boolean} boolean indicating whether all elements pass a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = everyByRight( x, isPositive );\n* // returns true\n*/\nfunction everyByRight( x, predicate, thisArg ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default everyByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled two-dimensional nested array according to a provided callback function.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* import constantFunction from '@stdlib/utils/constant-function';\n*\n* var out = filled2dBy( [ 1, 3 ], constantFunction( 'beep' ) );\n* // returns [ [ 'beep', 'beep', 'beep' ] ]\n*/\nfunction filled2dBy( shape, clbk, thisArg ) {\n\tvar arr;\n\tvar a0;\n\tvar S0;\n\tvar S1;\n\tvar i;\n\tvar j;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < S1; i++ ) {\n\t\ta0 = [];\n\t\tfor ( j = 0; j < S0; j++ ) {\n\t\t\ta0.push( clbk.call( thisArg, [ i, j ] ) );\n\t\t}\n\t\tarr.push( a0 );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled2dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled three-dimensional nested array according to a provided callback function.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* import constantFunction from '@stdlib/utils/constant-function';\n*\n* var out = filled3dBy( [ 1, 1, 3 ], constantFunction( 'beep' ) );\n* // returns [ [ [ 'beep', 'beep', 'beep' ] ] ]\n*/\nfunction filled3dBy( shape, clbk, thisArg ) {\n\tvar arr;\n\tvar a0;\n\tvar a1;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\ta1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta0 = [];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\ta0.push( clbk.call( thisArg, [ i2, i1, i0 ] ) );\n\t\t\t}\n\t\t\ta1.push( a0 );\n\t\t}\n\t\tarr.push( a1 );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled3dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled four-dimensional nested array according to a provided callback function.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* import constantFunction from '@stdlib/utils/constant-function';\n*\n* var out = filled4dBy( [ 1, 1, 1, 3 ], constantFunction( 'beep' ) );\n* // returns [ [ [ [ 'beep', 'beep', 'beep' ] ] ] ]\n*/\nfunction filled4dBy( shape, clbk, thisArg ) {\n\tvar arr;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\ta2 = [];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\ta1 = [];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\ta0 = [];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\ta0.push( clbk.call( thisArg, [ i3, i2, i1, i0 ] ) );\n\t\t\t\t}\n\t\t\t\ta1.push( a0 );\n\t\t\t}\n\t\t\ta2.push( a1 );\n\t\t}\n\t\tarr.push( a2 );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled4dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled five-dimensional nested array according to a provided callback function.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* import constantFunction from '@stdlib/utils/constant-function';\n*\n* var out = filled5dBy( [ 1, 1, 1, 1, 3 ], constantFunction( 'beep' ) );\n* // returns [ [ [ [ [ 'beep', 'beep', 'beep' ] ] ] ] ]\n*/\nfunction filled5dBy( shape, clbk, thisArg ) {\n\tvar arr;\n\tvar a0;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\ta3 = [];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\ta2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta1 = [];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\ta0 = [];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\ta0.push( clbk.call( thisArg, [ i4, i3, i2, i1, i0 ] ) );\n\t\t\t\t\t}\n\t\t\t\t\ta1.push( a0 );\n\t\t\t\t}\n\t\t\t\ta2.push( a1 );\n\t\t\t}\n\t\t\ta3.push( a2 );\n\t\t}\n\t\tarr.push( a3 );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled5dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Returns the first element of an array-like object.\n*\n* @param {Collection} arr - input array\n* @returns {*} - first element\n*\n* @example\n* var out = first( [ 1, 2, 3 ] );\n* // returns 1\n*/\nfunction first( arr ) {\n\tvar get;\n\n\tif ( arr.length === 0 ) {\n\t\treturn;\n\t}\n\t// Resolve an accessor for retrieving input array elements:\n\tget = resolveGetter( arr );\n\n\t// Return the first element:\n\treturn get( arr, 0 );\n}\n\n\n// EXPORTS //\n\nexport default first;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fliplr4d from './../../../base/fliplr4d';\n\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the last dimension of a five-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<ArrayLikeObject<ArrayLikeObject<ArrayLikeObject<Collection>>>>} x - nested input array\n* @returns {Array<Array<Array<Array<Collection>>>>} output array\n*\n* @example\n* var x = [ [ [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ] ] ];\n*\n* var out = fliplr5d( x );\n* // returns [ [ [ [ [ 2, 1 ], [ 4, 3 ], [ 6, 5 ] ] ] ] ]\n*/\nfunction fliplr5d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( fliplr4d( x[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fliplr5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport flipud4d from './../../../base/flipud4d';\n\n\n// MAIN //\n\n/**\n* Reverses the order of elements along the second-to-last dimension of a five-dimensional nested input array.\n*\n* ## Notes\n*\n* -   The function does **not** perform a deep copy of nested array elements.\n*\n* @param {ArrayLikeObject<ArrayLikeObject<ArrayLikeObject<ArrayLikeObject<Collection>>>>} x - nested input array\n* @returns {Array<Array<Array<Array<Collection>>>>} output array\n*\n* @example\n* var x = [ [ [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ] ] ];\n*\n* var out = flipud5d( x );\n* // returns [ [ [ [ [ 5, 6 ], [ 3, 4 ], [ 1, 2 ] ] ] ] ]\n*/\nfunction flipud5d( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( flipud4d( x[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default flipud5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Converts a strided array to a non-strided generic array.\n*\n* ## Notes\n*\n* -   The function assumes that the input array is compatible with the specified number of elements, index stride, and index offset.\n*\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} x - input array\n* @param {integer} stride - index stride\n* @param {NonNegativeInteger} offset - index of the first indexed value in the input array\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array( 3, x, 2, 0 );\n* // returns [ 1, 3, 5 ]\n*/\nfunction strided2array( N, x, stride, offset ) {\n\tvar out;\n\tvar get;\n\tvar ix;\n\tvar i;\n\n\t// Resolve an accessor function for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Copy strided elements to a dense non-strided array...\n\tix = offset;\n\tout = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tout.push( get( x, ix ) );\n\t\tix += stride;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default strided2array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element entries as arrays associated with distinct keys.\n*\n* @param {Collection} x - input array\n* @param {Collection} groups - array defining which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {Object} group results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = groupEntries( x, groups );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupEntries( x, groups ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( groups.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( groups );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( groups, i ).toString();\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ i, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element entries according to an indicator function.\n*\n* @param {Collection} x - input array\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - indicator function execution context\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupEntriesBy( x, indicator );\n* // returns { 'b': [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], 'f': [ [ 2, 'foo' ] ] }\n*/\nfunction groupEntriesBy( x, indicator, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = get( x, i );\n\t\tg = indicator.call( thisArg, v, i, x );\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ g ] = [ [ i, v ] ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupEntriesBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element indices as arrays associated with distinct keys.\n*\n* @param {Collection} x - input array\n* @param {Collection} groups - array defining which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {Object} group results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = groupIndices( x, groups );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*/\nfunction groupIndices( x, groups ) {\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( groups.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\t// Resolve accessors for retrieving array elements:\n\tgget = resolveGetter( groups );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = gget( groups, i ).toString();\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( i );\n\t\t} else {\n\t\t\tout[ g ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIndices;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element indices according to an indicator function.\n*\n* @param {Collection} x - input array\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - indicator function execution context\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupIndicesBy( x, indicator );\n* // returns { 'b': [ 0, 1, 3 ], 'f': [ 2 ] }\n*/\nfunction groupIndicesBy( x, indicator, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tg = indicator.call( thisArg, get( x, i ), i, x );\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( i );\n\t\t} else {\n\t\t\tout[ g ] = [ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupIndicesBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups elements as arrays associated with distinct keys.\n*\n* @param {Collection} x - input array\n* @param {Collection} groups - array defining which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {Object} group results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var groups = [ 'b', 'b', 'f', 'b' ];\n*\n* var out = groupValues( x, groups );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupValues( x, groups ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( groups.length !== len ) {\n\t\tthrow new RangeError( 'invalid argument. The first and second arguments must have the same length.' );\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( groups );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( groups, i ).toString();\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupValues;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Groups element values according to an indicator function.\n*\n* @param {Collection} x - input array\n* @param {Function} indicator - indicator function specifying which group an element in the input collection belongs to\n* @param {*} [thisArg] - indicator function execution context\n* @returns {Object} group results\n*\n* @example\n* function indicator( v ) {\n*     return v[ 0 ];\n* }\n*\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n*\n* var out = groupValuesBy( x, indicator );\n* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }\n*/\nfunction groupValuesBy( x, indicator, thisArg ) {\n\tvar get;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\n\t// Resolve an accessor for retrieving array elements:\n\tget = resolveGetter( x );\n\n\t// Loop over the elements and assign each to a group...\n\tout = {};\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = get( x, i );\n\t\tg = indicator.call( thisArg, v, i, x );\n\t\to = out[ g ];\n\t\tif ( isArray( o ) ) {\n\t\t\to.push( v );\n\t\t} else {\n\t\t\tout[ g ] = [ v ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default groupValuesBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\nimport isnan from '@stdlib/math/base/assert/is-nan';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'indexOf' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Returns the index of the first element which equals a provided search element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {*} searchElement - search element\n* @param {NonNegativeInteger} fromIndex - starting index (inclusive)\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {integer} index\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var idx = internal( x, 2, 0, false );\n* // returns 1\n*/\nfunction internal( x, searchElement, fromIndex, equalNaNs ) {\n\tvar i;\n\tif ( equalNaNs && isnan( searchElement ) ) {\n\t\tfor ( i = fromIndex; i < x.length; i++ ) {\n\t\t\tif ( isnan( x[ i ] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tfor ( i = fromIndex; i < x.length; i++ ) {\n\t\tif ( searchElement === x[ i ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n* Returns the index of the first element which equals a provided search element.\n*\n* @private\n* @param {Object} x - input array object\n* @param {*} searchElement - search element\n* @param {NonNegativeInteger} fromIndex - starting index (inclusive)\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {integer} index\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var idx = accessors( x, 2, 0, false );\n* // returns 1\n*/\nfunction accessors( x, searchElement, fromIndex, equalNaNs ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tif ( equalNaNs && isnan( searchElement ) ) {\n\t\tfor ( i = fromIndex; i < data.length; i++ ) {\n\t\t\tif ( isnan( get( data, i ) ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tfor ( i = fromIndex; i < data.length; i++ ) {\n\t\tif ( searchElement === get( data, i ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Returns the index of the first element which equals a provided search element.\n*\n* ## Notes\n*\n* -   If unable to find an element which equals a provided search element, the function returns `-1`.\n*\n* @param {Collection} x - input array\n* @param {*} searchElement - search element\n* @param {integer} fromIndex - starting index (inclusive)\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {integer} index\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var idx = indexOf( x, 2, 0, false );\n* // returns 1\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var idx = indexOf( x, 2, 0, false );\n* // returns 1\n*/\nfunction indexOf( x, searchElement, fromIndex, equalNaNs ) {\n\tvar obj;\n\tif ( hasMethod( x, 'indexOf' ) && equalNaNs === false ) {\n\t\treturn x.indexOf( searchElement, fromIndex );\n\t}\n\tif ( fromIndex < 0 ) {\n\t\tfromIndex += x.length;\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex = 0;\n\t\t}\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, searchElement, fromIndex, equalNaNs );\n\t}\n\treturn internal( x, searchElement, fromIndex, equalNaNs );\n}\n\n\n// EXPORTS //\n\nexport default indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Returns the last element of an array-like object.\n*\n* @param {Collection} arr - input array\n* @returns {*} - last element\n*\n* @example\n* var out = last( [ 1, 2, 3 ] );\n* // returns 3\n*/\nfunction last( arr ) {\n\tvar get;\n\tvar idx;\n\n\t// Resolve an accessor for retrieving input array elements:\n\tget = resolveGetter( arr );\n\n\t// Resolve the last index:\n\tidx = arr.length - 1;\n\n\t// Return the last element:\n\tif ( idx < 0 ) {\n\t\treturn;\n\t}\n\treturn get( arr, idx );\n}\n\n\n// EXPORTS //\n\nexport default last;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\nimport isnan from '@stdlib/math/base/assert/is-nan';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'lastIndexOf' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Returns the index of the last element which equals a provided search element.\n*\n* @private\n* @param {Collection} x - input array\n* @param {*} searchElement - search element\n* @param {NonNegativeInteger} fromIndex - starting index (inclusive)\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {integer} index\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var idx = internal( x, 2, 3, false );\n* // returns 1\n*/\nfunction internal( x, searchElement, fromIndex, equalNaNs ) {\n\tvar i;\n\tif ( equalNaNs && isnan( searchElement ) ) {\n\t\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\t\tif ( isnan( x[ i ] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tif ( searchElement === x[ i ] ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n* Returns the index of the last element which equals a provided search element.\n*\n* @private\n* @param {Object} x - input array object\n* @param {*} searchElement - search element\n* @param {NonNegativeInteger} fromIndex - starting index (inclusive)\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {integer} index\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = arraylike2object( toAccessorArray( [ 1, 2, 3, 4 ] ) );\n*\n* var idx = accessors( x, 2, 3, false );\n* // returns 1\n*/\nfunction accessors( x, searchElement, fromIndex, equalNaNs ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tif ( equalNaNs && isnan( searchElement ) ) {\n\t\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\t\tif ( isnan( get( data, i ) ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tfor ( i = fromIndex; i >= 0; i-- ) {\n\t\tif ( searchElement === get( data, i ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// MAIN //\n\n/**\n* Returns the index of the last element which equals a provided search element.\n*\n* ## Notes\n*\n* -   If unable to find an element which equals a provided search element, the function returns `-1`.\n*\n* @param {Collection} x - input array\n* @param {*} searchElement - search element\n* @param {integer} fromIndex - starting index (inclusive)\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {integer} index\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var idx = lastIndexOf( x, 2, 3, false );\n* // returns 1\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var idx = lastIndexOf( x, 2, 3, false );\n* // returns 1\n*/\nfunction lastIndexOf( x, searchElement, fromIndex, equalNaNs ) {\n\tvar obj;\n\tif ( hasMethod( x, 'lastIndexOf' ) && equalNaNs === false ) {\n\t\treturn x.lastIndexOf( searchElement, fromIndex );\n\t}\n\tif ( fromIndex < 0 ) {\n\t\tfromIndex += x.length;\n\t\tif ( fromIndex < 0 ) {\n\t\t\treturn -1;\n\t\t}\n\t} else if ( fromIndex > x.length ) {\n\t\tfromIndex = x.length - 1;\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, searchElement, fromIndex, equalNaNs );\n\t}\n\treturn internal( x, searchElement, fromIndex, equalNaNs );\n}\n\n\n// EXPORTS //\n\nexport default lastIndexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - last array value\n* @param {NonNegativeInteger} len - length of output array\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = linspace( 0, 100, 6 );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\nfunction linspace( x1, x2, len ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Calculate the increment:\n\tN = len - 1;\n\td = ( x2-x1 ) / N;\n\n\t// Build the output array...\n\tarr = [ x1 ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( x1 + (d*i) );\n\t}\n\tarr.push( x2 );\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a binary callback to elements in two two-dimensional nested input arrays according to elements in a two-dimensional nested mask array and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing two input nested arrays, an input nested mask array, and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n* import add from '@stdlib/math/base/ops/add';\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = ones2d( shape );\n* var z = zeros2d( shape );\n*\n* var mask = [ [ 0, 1 ], [ 0, 0 ] ];\n*\n* mskbinary2d( [ x, y, mask, z ], shape, add );\n*\n* console.log( z );\n* // => [ [ 2.0, 0.0 ], [ 2.0, 2.0 ] ]\n*/\nfunction mskbinary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar m0;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar m;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 3 ];\n\tm = arrays[ 2 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tz0 = z[ i1 ];\n\t\tm0 = m[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tif ( m0[ i0 ] === 0 ) {\n\t\t\t\tz0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskbinary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Returns a new array by applying a mask to a provided input array.\n*\n* @param {Collection} x - input array\n* @param {Collection} mask - mask array\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var mask = [ 0, 1, 0, 1 ];\n*\n* var y = mskfilter( x, mask );\n* // returns [ 2, 4 ]\n*/\nfunction mskfilter( x, mask ) {\n\tvar xget;\n\tvar mget;\n\tvar out;\n\tvar i;\n\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tmget = resolveGetter( mask );\n\n\t// Extract each desired element from the provided array...\n\tout = [];\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( mget( mask, i ) ) {\n\t\t\tout.push( xget( x, i ) ); // use `Array#push` to ensure \"fast\" elements\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default mskfilter;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a two-dimensional nested input array according to elements in a two-dimensional nested mask array and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array, an input nested mask array, and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* var mask = [ [ 0, 1 ], [ 0, 0 ] ];\n*\n* mskunary2d( [ x, mask, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ 10.0, 0.0 ], [ 10.0, 10.0 ] ]\n*/\nfunction mskunary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar m0;\n\tvar x;\n\tvar y;\n\tvar m;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 2 ];\n\tm = arrays[ 1 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tm0 = m[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tif ( m0[ i0 ] === 0 ) {\n\t\t\t\ty0[ i0 ] = fcn( x0[ i0 ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskunary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a three-dimensional nested input array according to elements in a three-dimensional nested mask array and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array, an input nested mask array, and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = zeros3d( shape );\n*\n* var mask = [ [ [ 0, 1 ], [ 0, 0 ] ] ];\n*\n* mskunary3d( [ x, mask, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ [ 10.0, 0.0 ], [ 10.0, 10.0 ] ] ]\n*/\nfunction mskunary3d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar x1;\n\tvar y0;\n\tvar y1;\n\tvar m0;\n\tvar m1;\n\tvar x;\n\tvar y;\n\tvar m;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 2 ];\n\tm = arrays[ 1 ];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tm1 = m[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tm0 = m1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tif ( m0[ i0 ] === 0 ) {\n\t\t\t\t\ty0[ i0 ] = fcn( x0[ i0 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mskunary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the n-fold Cartesian product.\n*\n* ## Notes\n*\n* -   The main insight of this implementation is that the n-fold Cartesian product can be presented as an n-dimensional array stored in row-major order. As such, we can\n*\n*     -   Compute the total number of tuples, which is simply the product of the size of each provided array (set). For n-dimensional arrays, this is the equivalent of computing the product of array dimensions to determine the total number of elements.\n*     -   Initialize an array for storing indices for indexing into each provided array. For n-dimensional arrays, the index array is equivalent to an array of subscripts for indexing into each dimension.\n*     -   For the outermost loop, treat the loop index as a linear index into an n-dimensional array and resolve the corresponding subscripts.\n*     -   Continue iterating until all tuples have been generated.\n*\n* @param {ArrayLikeObject} x1 - first input array\n* @param {ArrayLikeObject} x2 - second input array\n* @param {ArrayLikeObject} [...args] - additional input arrays\n* @returns {Array<Array>} list of ordered tuples comprising the n-fold Cartesian product\n*\n* @example\n* var x1 = [ 1, 2, 3 ];\n* var x2 = [ 4, 5 ];\n*\n* var out = nCartesianProduct( x1, x2 );\n* // returns [ [ 1, 4 ], [ 1, 5 ], [ 2, 4 ], [ 2, 5 ], [ 3, 4 ], [ 3, 5 ] ]\n*/\nfunction nCartesianProduct( x1, x2 ) {\n\tvar nargs;\n\tvar dims;\n\tvar arr;\n\tvar out;\n\tvar tmp;\n\tvar arg;\n\tvar idx;\n\tvar N;\n\tvar s;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tnargs = arguments.length;\n\n\t// Initialize the list of arrays:\n\tarr = [ x1, x2 ];\n\n\t// Initialize the list of array dimensions (equivalent to ndarray shape):\n\tdims = [ x1.length, x2.length ];\n\n\t// Initialize a list of indices for indexing into each array (equivalent to ndarray subscripts):\n\tidx = [ 0, 0 ];\n\n\t// Compute the total number of ordered tuples:\n\tN = dims[ 0 ] * dims[ 1 ];\n\n\t// Update loop variables for any additional arrays...\n\tfor ( i = 2; i < nargs; i++ ) {\n\t\targ = arguments[ i ];\n\t\tarr.push( arg );\n\t\tdims.push( arg.length );\n\t\tidx.push( 0 );\n\t\tN *= dims[ i ];\n\t}\n\t// Compute the n-fold Cartesian product...\n\tout = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\t// Resolve a linear index to array indices (logic is equivalent to what is found in ndarray/base/ind2sub for an ndarray stored in row-major order; see https://github.com/stdlib-js/stdlib/blob/215ca5355f3404f15996fd0ced58a98e46f22be6/lib/node_modules/%40stdlib/ndarray/base/ind2sub/lib/assign.js)...\n\t\tk = i;\n\t\tfor ( j = nargs-1; j >= 0; j-- ) {\n\t\t\ts = k % dims[ j ];\n\t\t\tk -= s;\n\t\t\tk /= dims[ j ];\n\t\t\tidx[ j ] = s;\n\t\t}\n\t\t// Generate the next ordered tuple...\n\t\ttmp = [];\n\t\tfor ( j = 0; j < nargs; j++ ) {\n\t\t\ttmp.push( arr[ j ][ idx[ j ] ] );\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default nCartesianProduct;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array fail a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internal( x, isPositive );\n* // returns true\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( predicate.call( thisArg, x[ i ], i, x ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array fail a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns true\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( predicate.call( thisArg, get( data, i ), i, data ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array fail a test implemented by a predicate function.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = noneBy( x, isPositive );\n* // returns true\n*/\nfunction noneBy( x, predicate, thisArg ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default noneBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether all elements in an array fail a test implemented by a predicate function.\n*\n* @private\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internal( x, isPositive );\n* // returns true\n*/\nfunction internal( x, predicate, thisArg ) {\n\tvar i;\n\tfor ( i = x.length-1; i >= 0; i-- ) {\n\t\tif ( predicate.call( thisArg, x[ i ], i, x ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n* Tests whether all elements in an array fail a test implemented by a predicate function.\n*\n* @private\n* @param {Object} x - input array object\n* @param {Function} predicate - test function\n* @param {*} thisArg - execution context\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n*\n* var out = accessors( x, isPositive );\n* // returns true\n*/\nfunction accessors( x, predicate, thisArg ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = data.length-1; i >= 0; i-- ) {\n\t\tif ( predicate.call( thisArg, get( data, i ), i, data ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether all elements in an array fail a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} x - input array\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @returns {boolean} boolean indicating whether all elements fail a test\n*\n* @example\n* function isPositive( v ) {\n*     return v > 0;\n* }\n*\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = noneByRight( x, isPositive );\n* // returns true\n*/\nfunction noneByRight( x, predicate, thisArg ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj, predicate, thisArg );\n\t}\n\treturn internal( x, predicate, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default noneByRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from './../../../base/filled';\n\n\n// MAIN //\n\n/**\n* Returns a \"generic\" array filled with ones.\n*\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} output array\n*\n* @example\n* var out = ones( 3 );\n* // returns [ 1.0, 1.0, 1.0 ]\n*/\nfunction ones( len ) {\n\treturn filled( 1.0, len );\n}\n\n\n// EXPORTS //\n\nexport default ones;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled2d from './../../../base/filled2d';\n\n\n// MAIN //\n\n/**\n* Returns a two-dimensional nested array filled with ones.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {ArrayArray} filled array\n*\n* @example\n* var out = ones2d( [ 1, 3 ] );\n* // returns [ [ 1.0, 1.0, 1.0 ] ]\n*/\nfunction ones2d( shape ) {\n\treturn filled2d( 1.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default ones2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled3d from './../../../base/filled3d';\n\n\n// MAIN //\n\n/**\n* Returns a three-dimensional nested array filled with ones.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = ones3d( [ 1, 1, 3 ] );\n* // returns [ [ [ 1.0, 1.0, 1.0 ] ] ]\n*/\nfunction ones3d( shape ) {\n\treturn filled3d( 1.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default ones3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled4d from './../../../base/filled4d';\n\n\n// MAIN //\n\n/**\n* Returns a four-dimensional nested array filled with ones.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = ones4d( [ 1, 1, 1, 3 ] );\n* // returns [ [ [ [ 1.0, 1.0, 1.0 ] ] ] ]\n*/\nfunction ones4d( shape ) {\n\treturn filled4d( 1.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default ones4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled5d from './../../../base/filled5d';\n\n\n// MAIN //\n\n/**\n* Returns a five-dimensional nested array filled with ones.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = ones5d( [ 1, 1, 1, 1, 3 ] );\n* // returns [ [ [ [ [ 1.0, 1.0, 1.0 ] ] ] ] ]\n*/\nfunction ones5d( shape ) {\n\treturn filled5d( 1.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default ones5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fillednd from './../../../base/fillednd';\n\n\n// MAIN //\n\n/**\n* Returns an n-dimensional nested array filled with ones.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = onesnd( [ 3 ] );\n* // returns [ 1.0, 1.0, 1.0 ]\n*\n* @example\n* var out = onesnd( [ 1, 3 ] );\n* // returns [ [ 1.0, 1.0, 1.0 ] ]\n*/\nfunction onesnd( shape ) {\n\treturn fillednd( 1.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default onesnd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to elements in four two-dimensional nested input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing four input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add4';\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = ones2d( shape );\n* var z = ones2d( shape );\n* var w = ones2d( shape );\n* var out = zeros2d( shape );\n*\n* quaternary2d( [ x, y, z, w, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ 4.0, 4.0 ], [ 4.0, 4.0 ] ]\n*/\nfunction quaternary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar v0;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar v;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tv = arrays[ 4 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tz0 = z[ i1 ];\n\t\tw0 = w[ i1 ];\n\t\tv0 = v[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ] );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quaternary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to elements in four three-dimensional nested input arrays and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Collection>>>} arrays - array-like object containing four input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add4';\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = ones3d( shape );\n* var z = ones3d( shape );\n* var w = ones3d( shape );\n* var out = zeros3d( shape );\n*\n* quaternary3d( [ x, y, z, w, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ 4.0, 4.0 ], [ 4.0, 4.0 ] ] ]\n*/\nfunction quaternary3d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar v0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar v1;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar v;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tv = arrays[ 4 ];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tz1 = z[ i2 ];\n\t\tw1 = w[ i2 ];\n\t\tv1 = v[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tz0 = z1[ i1 ];\n\t\t\tw0 = w1[ i1 ];\n\t\t\tv0 = v1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quaternary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to elements in four four-dimensional nested input arrays and assigns results to elements in a four-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Array<Collection>>>>} arrays - array-like object containing four input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add4';\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = ones4d( shape );\n* var z = ones4d( shape );\n* var w = ones4d( shape );\n* var out = zeros4d( shape );\n*\n* quaternary4d( [ x, y, z, w, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ [ 4.0, 4.0 ], [ 4.0, 4.0 ] ] ] ]\n*/\nfunction quaternary4d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar v0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar v1;\n\tvar x2;\n\tvar y2;\n\tvar z2;\n\tvar w2;\n\tvar v2;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar v;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tv = arrays[ 4 ];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = y[ i3 ];\n\t\tz2 = z[ i3 ];\n\t\tw2 = w[ i3 ];\n\t\tv2 = v[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tz1 = z2[ i2 ];\n\t\t\tw1 = w2[ i2 ];\n\t\t\tv1 = v2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\tw0 = w1[ i1 ];\n\t\t\t\tv0 = v1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quaternary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to elements in four five-dimensional nested input arrays and assigns results to elements in a five-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Array<Collection>>>>} arrays - array-like object containing four input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add4';\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = ones5d( shape );\n* var z = ones5d( shape );\n* var w = ones5d( shape );\n* var out = zeros5d( shape );\n*\n* quaternary5d( [ x, y, z, w, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ [ [ 4.0, 4.0 ], [ 4.0, 4.0 ] ] ] ] ]\n*/\nfunction quaternary5d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar v0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar v1;\n\tvar x2;\n\tvar y2;\n\tvar z2;\n\tvar w2;\n\tvar v2;\n\tvar x3;\n\tvar y3;\n\tvar z3;\n\tvar w3;\n\tvar v3;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar v;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tv = arrays[ 4 ];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = y[ i4 ];\n\t\tz3 = z[ i4 ];\n\t\tw3 = w[ i4 ];\n\t\tv3 = v[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tz2 = z3[ i3 ];\n\t\t\tw2 = w3[ i3 ];\n\t\t\tv2 = v3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tz1 = z2[ i2 ];\n\t\t\t\tw1 = w2[ i2 ];\n\t\t\t\tv1 = v2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\t\tw0 = w1[ i1 ];\n\t\t\t\t\tv0 = v1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ] ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quaternary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quinary callback to elements in five two-dimensional nested input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing five input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n* import add from '@stdlib/math/base/ops/add5';\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = ones2d( shape );\n* var z = ones2d( shape );\n* var w = ones2d( shape );\n* var v = ones2d( shape );\n* var out = zeros2d( shape );\n*\n* quinary2d( [ x, y, z, w, v, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ]\n*/\nfunction quinary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar v0;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tv = arrays[ 5 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tz0 = z[ i1 ];\n\t\tw0 = w[ i1 ];\n\t\tu0 = u[ i1 ];\n\t\tv0 = v[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ], u0[ i0 ] );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quinary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quinary callback to elements in five three-dimensional nested input arrays and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Collection>>>} arrays - array-like object containing five input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n* import add from '@stdlib/math/base/ops/add5';\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = ones3d( shape );\n* var z = ones3d( shape );\n* var w = ones3d( shape );\n* var v = ones3d( shape );\n* var out = zeros3d( shape );\n*\n* quinary3d( [ x, y, z, w, v, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ] ]\n*/\nfunction quinary3d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar v0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar u1;\n\tvar v1;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tv = arrays[ 5 ];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tz1 = z[ i2 ];\n\t\tw1 = w[ i2 ];\n\t\tu1 = u[ i2 ];\n\t\tv1 = v[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tz0 = z1[ i1 ];\n\t\t\tw0 = w1[ i1 ];\n\t\t\tu0 = u1[ i1 ];\n\t\t\tv0 = v1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ], u0[ i0 ] ); // eslint-disable-line max-len\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quinary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quinary callback to elements in five four-dimensional nested input arrays and assigns results to elements in a four-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Array<Collection>>>>} arrays - array-like object containing five input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n* import add from '@stdlib/math/base/ops/add5';\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = ones4d( shape );\n* var z = ones4d( shape );\n* var w = ones4d( shape );\n* var v = ones4d( shape );\n* var out = zeros4d( shape );\n*\n* quinary4d( [ x, y, z, w, v, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ] ] ]\n*/\nfunction quinary4d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar v0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar u1;\n\tvar v1;\n\tvar x2;\n\tvar y2;\n\tvar z2;\n\tvar w2;\n\tvar u2;\n\tvar v2;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tv = arrays[ 5 ];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = y[ i3 ];\n\t\tz2 = z[ i3 ];\n\t\tw2 = w[ i3 ];\n\t\tu2 = u[ i3 ];\n\t\tv2 = v[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tz1 = z2[ i2 ];\n\t\t\tw1 = w2[ i2 ];\n\t\t\tu1 = u2[ i2 ];\n\t\t\tv1 = v2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\tw0 = w1[ i1 ];\n\t\t\t\tu0 = u1[ i1 ];\n\t\t\t\tv0 = v1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ], u0[ i0 ] ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quinary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a quinary callback to elements in five five-dimensional nested input arrays and assigns results to elements in a five-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Array<Array<Collection>>>>>} arrays - array-like object containing five input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - quinary callback\n* @returns {void}\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n* import add from '@stdlib/math/base/ops/add5';\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = ones5d( shape );\n* var z = ones5d( shape );\n* var w = ones5d( shape );\n* var v = ones5d( shape );\n* var out = zeros5d( shape );\n*\n* quinary5d( [ x, y, z, w, v, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ [ [ 5.0, 5.0 ], [ 5.0, 5.0 ] ] ] ] ]\n*/\nfunction quinary5d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar u0;\n\tvar v0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar u1;\n\tvar v1;\n\tvar x2;\n\tvar y2;\n\tvar z2;\n\tvar w2;\n\tvar u2;\n\tvar v2;\n\tvar x3;\n\tvar y3;\n\tvar z3;\n\tvar w3;\n\tvar u3;\n\tvar v3;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tu = arrays[ 4 ];\n\tv = arrays[ 5 ];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = y[ i4 ];\n\t\tz3 = z[ i4 ];\n\t\tw3 = w[ i4 ];\n\t\tu3 = u[ i4 ];\n\t\tv3 = v[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tz2 = z3[ i3 ];\n\t\t\tw2 = w3[ i3 ];\n\t\t\tu2 = u3[ i3 ];\n\t\t\tv2 = v3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tz1 = z2[ i2 ];\n\t\t\t\tw1 = w2[ i2 ];\n\t\t\t\tu1 = u2[ i2 ];\n\t\t\t\tv1 = v2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\t\tw0 = w1[ i1 ];\n\t\t\t\t\tu0 = u1[ i1 ];\n\t\t\t\t\tv0 = v1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tv0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ], w0[ i0 ], u0[ i0 ] ); // eslint-disable-line max-len\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default quinary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\nimport floor from '@stdlib/math/base/special/floor';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'reverse' );\n* // returns true\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Reverses an array in-place.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {Collection} input array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internal( x );\n* // returns [ 4, 3, 2, 1 ]\n*/\nfunction internal( x ) {\n\tvar tmp;\n\tvar N;\n\tvar M;\n\tvar i;\n\tvar j;\n\n\tN = floor( x.length/2 );\n\tM = x.length - 1;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = M - i;\n\t\ttmp = x[ i ];\n\t\tx[ i ] = x[ j ];\n\t\tx[ j ] = tmp;\n\t}\n\treturn x;\n}\n\n/**\n* Reverses an array in-place.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {Collection} input array\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = toAccessorArray( [ 1, 2, 3, 4 ] );\n*\n* var v = x.get( 0 );\n* // returns 1\n*\n* var out = accessors( arraylike2object( x ) );\n*\n* v = x.get( 0 );\n* // returns 4\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar set;\n\tvar tmp;\n\tvar N;\n\tvar M;\n\tvar i;\n\tvar j;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\tset = x.accessors[ 1 ];\n\n\tN = floor( data.length/2 );\n\tM = data.length - 1;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tj = M - i;\n\t\ttmp = get( data, i );\n\t\tset( data, i, get( data, j ) );\n\t\tset( data, j, tmp );\n\t}\n\treturn data;\n}\n\n\n// MAIN //\n\n/**\n* Reverses an array in-place.\n*\n* @param {Collection} x - input array\n* @returns {Collection} input array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = reverse( x );\n* // returns [ 4, 3, 2, 1 ]\n*\n* var bool = ( out === x );\n* // returns true\n*\n* @example\n* import Int32Array from '@stdlib/array/int32';\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n*\n* var out = reverse( x );\n* // returns <Int32Array>[ 4, 3, 2, 1 ]\n*\n* var bool = ( out === x );\n* // returns true\n*/\nfunction reverse( x ) {\n\tvar obj;\n\tif ( hasMethod( x, 'reverse' ) ) {\n\t\treturn x.reverse();\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default reverse;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Converts a strided array to a two-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that the input array is compatible with the specified array shape, dimension strides, and index offset.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - dimension strides\n* @param {NonNegativeInteger} offset - index of the first indexed value in the input array\n* @returns {Array<Array>} two-dimensional nested array\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array2d( x, [ 3, 2 ], [ 2, 1 ], 0 );\n* // returns [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ]\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array2d( x, [ 3, 2 ], [ 1, 3 ], 0 );\n* // returns [ [ 1, 4 ], [ 2, 5 ], [ 3, 6 ] ]\n*/\nfunction strided2array2d( x, shape, strides, offset ) {\n\tvar get;\n\tvar out;\n\tvar tmp;\n\tvar dx0;\n\tvar dx1;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar ix;\n\n\tget = resolveGetter( x );\n\n\tS1 = shape[ 0 ];\n\tS0 = shape[ 1 ];\n\n\tdx1 = strides[ 0 ];\n\tdx0 = strides[ 1 ];\n\n\tout = [];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\ttmp = [];\n\t\tix = offset + ( dx1*i1 );\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ttmp.push( get( x, ix ) );\n\t\t\tix += dx0;\n\t\t}\n\t\tout.push( tmp );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default strided2array2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Converts a strided array to a three-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that the input array is compatible with the specified array shape, dimension strides, and index offset.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - dimension strides\n* @param {NonNegativeInteger} offset - index of the first indexed value in the input array\n* @returns {Array<Array<Array>>} three-dimensional nested array\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array3d( x, [ 1, 3, 2 ], [ 6, 2, 1 ], 0 );\n* // returns [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ]\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array3d( x, [ 1, 3, 2 ], [ 1, 1, 3 ], 0 );\n* // returns [ [ [ 1, 4 ], [ 2, 5 ], [ 3, 6 ] ] ]\n*/\nfunction strided2array3d( x, shape, strides, offset ) {\n\tvar get;\n\tvar out;\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar ix1;\n\tvar ix0;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar t2;\n\tvar t1;\n\n\tget = resolveGetter( x );\n\n\tS2 = shape[ 0 ];\n\tS1 = shape[ 1 ];\n\tS0 = shape[ 2 ];\n\n\tdx2 = strides[ 0 ];\n\tdx1 = strides[ 1 ];\n\tdx0 = strides[ 2 ];\n\n\tout = [];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tt2 = [];\n\t\tix1 = offset + ( dx2*i2 );\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tt1 = [];\n\t\t\tix0 = ix1 + ( dx1*i1 );\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tt1.push( get( x, ix0 ) );\n\t\t\t\tix0 += dx0;\n\t\t\t}\n\t\t\tt2.push( t1 );\n\t\t}\n\t\tout.push( t2 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default strided2array3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Converts a strided array to a four-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that the input array is compatible with the specified array shape, dimension strides, and index offset.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - dimension strides\n* @param {NonNegativeInteger} offset - index of the first indexed value in the input array\n* @returns {Array<Array<Array<Array>>>} four-dimensional nested array\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array4d( x, [ 1, 1, 3, 2 ], [ 6, 6, 2, 1 ], 0 );\n* // returns [ [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ] ]\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array4d( x, [ 1, 1, 3, 2 ], [ 1, 1, 1, 3 ], 0 );\n* // returns [ [ [ [ 1, 4 ], [ 2, 5 ], [ 3, 6 ] ] ] ]\n*/\nfunction strided2array4d( x, shape, strides, offset ) {\n\tvar get;\n\tvar out;\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dx3;\n\tvar ix2;\n\tvar ix1;\n\tvar ix0;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar t3;\n\tvar t2;\n\tvar t1;\n\n\tget = resolveGetter( x );\n\n\tS3 = shape[ 0 ];\n\tS2 = shape[ 1 ];\n\tS1 = shape[ 2 ];\n\tS0 = shape[ 3 ];\n\n\tdx3 = strides[ 0 ];\n\tdx2 = strides[ 1 ];\n\tdx1 = strides[ 2 ];\n\tdx0 = strides[ 3 ];\n\n\tout = [];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tt3 = [];\n\t\tix2 = offset + ( dx3*i3 );\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tt2 = [];\n\t\t\tix1 = ix2 + ( dx2*i2 );\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tt1 = [];\n\t\t\t\tix0 = ix1 + ( dx1*i1 );\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tt1.push( get( x, ix0 ) );\n\t\t\t\t\tix0 += dx0;\n\t\t\t\t}\n\t\t\t\tt2.push( t1 );\n\t\t\t}\n\t\t\tt3.push( t2 );\n\t\t}\n\t\tout.push( t3 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default strided2array4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Converts a strided array to a five-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function assumes that the input array is compatible with the specified array shape, dimension strides, and index offset.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - dimension strides\n* @param {NonNegativeInteger} offset - index of the first indexed value in the input array\n* @returns {Array<Array<Array<Array<Array>>>>} five-dimensional nested array\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array5d( x, [ 1, 1, 1, 3, 2 ], [ 6, 6, 6, 2, 1 ], 0 );\n* // returns [ [ [ [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ] ] ] ] ]\n*\n* @example\n* var x = [ 1, 2, 3, 4, 5, 6 ];\n*\n* var arr = strided2array5d( x, [ 1, 1, 1, 3, 2 ], [ 1, 1, 1, 1, 3 ], 0 );\n* // returns [ [ [ [ [ 1, 4 ], [ 2, 5 ], [ 3, 6 ] ] ] ] ]\n*/\nfunction strided2array5d( x, shape, strides, offset ) {\n\tvar get;\n\tvar out;\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dx3;\n\tvar dx4;\n\tvar ix3;\n\tvar ix2;\n\tvar ix1;\n\tvar ix0;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar t4;\n\tvar t3;\n\tvar t2;\n\tvar t1;\n\n\tget = resolveGetter( x );\n\n\tS4 = shape[ 0 ];\n\tS3 = shape[ 1 ];\n\tS2 = shape[ 2 ];\n\tS1 = shape[ 3 ];\n\tS0 = shape[ 4 ];\n\n\tdx4 = strides[ 0 ];\n\tdx3 = strides[ 1 ];\n\tdx2 = strides[ 2 ];\n\tdx1 = strides[ 3 ];\n\tdx0 = strides[ 4 ];\n\n\tout = [];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tt4 = [];\n\t\tix3 = offset + ( dx4*i4 );\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tt3 = [];\n\t\t\tix2 = ix3 + ( dx3*i3 );\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tt2 = [];\n\t\t\t\tix1 = ix2 + ( dx2*i2 );\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tt1 = [];\n\t\t\t\t\tix0 = ix1 + ( dx1*i1 );\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tt1.push( get( x, ix0 ) );\n\t\t\t\t\t\tix0 += dx0;\n\t\t\t\t\t}\n\t\t\t\t\tt2.push( t1 );\n\t\t\t\t}\n\t\t\t\tt3.push( t2 );\n\t\t\t}\n\t\t\tt4.push( t3 );\n\t\t}\n\t\tout.push( t4 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default strided2array5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from './../../../base/resolve-getter';\n\n\n// MAIN //\n\n/**\n* Takes elements from an array.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} indices - list of indices\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var indices = [ 3, 1, 2, 0 ];\n*\n* var y = take( x, indices );\n* // returns [ 4, 2, 3, 1 ]\n*/\nfunction take( x, indices ) {\n\tvar get;\n\tvar out;\n\tvar i;\n\n\t// Resolve an accessor for retrieving input array elements:\n\tget = resolveGetter( x );\n\n\t// Extract each desired element from the provided array...\n\tout = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tout.push( get( x, indices[ i ] ) ); // use `Array#push` to ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default take;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Takes elements from an indexed array.\n*\n* @param {Collection} x - input array\n* @param {NonNegativeIntegerArray} indices - list of indices\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var indices = [ 3, 1, 2, 0 ];\n*\n* var y = take( x, indices );\n* // returns [ 4, 2, 3, 1 ]\n*/\nfunction take( x, indices ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tout.push( x[ indices[ i ] ] ); // use `Array#push` to ensure \"fast\" elements\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default take;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport normalizeIndex from '@stdlib/ndarray/base/normalize-index';\nimport { factory as indexFunction } from '@stdlib/ndarray/base/ind';\nimport take2d from './../../../base/take2d';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar NDIMS = 3;\n\n\n// MAIN //\n\n/**\n* Takes elements from a three-dimensional nested array.\n*\n* ## Notes\n*\n* -   The function does **not** deep copy nested array elements.\n*\n* @param {ArrayLikeObject<Collection>} x - input array\n* @param {NonNegativeIntegerArray} indices - list of indices\n* @param {integer} dimension - dimension along which to take elements\n* @param {string} mode - index mode specifying how to handle an index which is out-of-bounds\n* @throws {RangeError} third argument exceeds the number of dimensions\n* @throws {TypeError} fourth argument must be a recognized index mode\n* @returns {(Array<Array>|Array<Collection>)} output array\n*\n* @example\n* var x = [ [ [ 1, 2 ], [ 3, 4 ] ] ];\n* var indices = [ 1, 1, 0, 0, -1, -1 ];\n*\n* var y = take3d( x, indices, 2, 'normalize' );\n* // returns [ [ [ 2, 2, 1, 1, 2, 2 ], [ 4, 4, 3, 3, 4, 4 ] ] ]\n*/\nfunction take3d( x, indices, dimension, mode ) {\n\tvar lastIndex;\n\tvar out;\n\tvar dim;\n\tvar ind;\n\tvar idx;\n\tvar i;\n\n\tdim = normalizeIndex( dimension, NDIMS-1 );\n\tif ( dim === -1 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Third argument exceeds the number of dimensions. Number of dimensions: %d. Value: `%d`.', NDIMS, dimension ) );\n\t}\n\tout = [];\n\tif ( dim === 0 ) {\n\t\tind = indexFunction( mode );\n\t\tlastIndex = x.length - 1;\n\t\tfor ( i = 0; i < indices.length; i++ ) {\n\t\t\tidx = ind( indices[ i ], lastIndex );\n\t\t\tout.push( x[ idx ] );\n\t\t}\n\t\treturn out;\n\t}\n\t// Case: dim > 0\n\tdim = dimension - 1;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout.push( take2d( x[ i ], indices, dim, mode ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default take3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a ternary callback to elements in three two-dimensional nested input arrays and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing three input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add3';\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = ones2d( shape );\n* var z = ones2d( shape );\n* var out = zeros2d( shape );\n*\n* ternary2d( [ x, y, z, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ 3.0, 3.0 ], [ 3.0, 3.0 ] ]\n*/\nfunction ternary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tz0 = z[ i1 ];\n\t\tw0 = w[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tw0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ] );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ternary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a ternary callback to elements in three three-dimensional nested input arrays and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Collection>>>} arrays - array-like object containing three input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add3';\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = ones3d( shape );\n* var z = ones3d( shape );\n* var out = zeros3d( shape );\n*\n* ternary3d( [ x, y, z, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ 3.0, 3.0 ], [ 3.0, 3.0 ] ] ]\n*/\nfunction ternary3d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tz1 = z[ i2 ];\n\t\tw1 = w[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tz0 = z1[ i1 ];\n\t\t\tw0 = w1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tw0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ternary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a ternary callback to elements in three four-dimensional nested input arrays and assigns results to elements in a four-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Array<Collection>>>>} arrays - array-like object containing three input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add3';\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = ones4d( shape );\n* var z = ones4d( shape );\n* var out = zeros4d( shape );\n*\n* ternary4d( [ x, y, z, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ [ 3.0, 3.0 ], [ 3.0, 3.0 ] ] ] ]\n*/\nfunction ternary4d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar x2;\n\tvar y2;\n\tvar z2;\n\tvar w2;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = y[ i3 ];\n\t\tz2 = z[ i3 ];\n\t\tw2 = w[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tz1 = z2[ i2 ];\n\t\t\tw1 = w2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\tw0 = w1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\tw0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ternary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a ternary callback to elements in three five-dimensional nested input arrays and assigns results to elements in a five-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Array<Array<Collection>>>>>} arrays - array-like object containing three input nested arrays and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - ternary callback\n* @returns {void}\n*\n* @example\n* import add from '@stdlib/math/base/ops/add3';\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = ones5d( shape );\n* var z = ones5d( shape );\n* var out = zeros5d( shape );\n*\n* ternary5d( [ x, y, z, out ], shape, add );\n*\n* console.log( out );\n* // => [ [ [ [ [ 3.0, 3.0 ], [ 3.0, 3.0 ] ] ] ] ]\n*/\nfunction ternary5d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar y0;\n\tvar z0;\n\tvar w0;\n\tvar x1;\n\tvar y1;\n\tvar z1;\n\tvar w1;\n\tvar x2;\n\tvar y2;\n\tvar z2;\n\tvar w2;\n\tvar x3;\n\tvar y3;\n\tvar z3;\n\tvar w3;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tz = arrays[ 2 ];\n\tw = arrays[ 3 ];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = y[ i4 ];\n\t\tz3 = z[ i4 ];\n\t\tw3 = w[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tz2 = z3[ i3 ];\n\t\t\tw2 = w3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tz1 = z2[ i2 ];\n\t\t\t\tw1 = w2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tz0 = z1[ i1 ];\n\t\t\t\t\tw0 = w1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\tw0[ i0 ] = fcn( x0[ i0 ], y0[ i0 ], z0[ i0 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default ternary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isAccessorArray from './../../../base/assert/is-accessor-array';\nimport AccessorArray from './../../../base/accessor';\n\n\n// MAIN //\n\n/**\n* Converts an array-like object to a minimal array-like object supporting the accessor protocol.\n*\n* ## Notes\n*\n* -   If a provided array-like object already supports the accessor protocol, the function returns the provided array-like object; otherwise, the function wraps the provided value in a object which uses accessors for getting and setting elements.\n*\n* @param {Collection} arr - input array\n* @throws {TypeError} must provide an array-like object\n* @returns {(Collection|AccessorArray)} array-like object supporting the accessor protocol\n*\n* @example\n* var o = toAccessorArray( [ 1, 2, 3 ] );\n* // returns <AccessorArray>\n*\n* var v = o.get( 0 );\n* // returns 1\n*/\nfunction toAccessorArray( arr ) {\n\tif ( arr && typeof arr === 'object' && isAccessorArray( arr ) ) {\n\t\treturn arr;\n\t}\n\treturn new AccessorArray( arr );\n}\n\n\n// EXPORTS //\n\nexport default toAccessorArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math/base/assert/is-nan';\n\n\n// FUNCTIONS //\n\n/**\n* Copies de-duplicated values to a new array.\n*\n* @private\n* @param {Array} x - input array\n* @param {PositiveInteger} limit - number of allowed consecutive duplicates\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 1, 2, 3, 3 ];\n*\n* var y = dedupeCopy( x, 1 );\n* // returns [ 1, 2, 3 ]\n*\n* var bool = ( x === y );\n* // returns false\n*\n* @example\n* var x = [ 1, 1, 1, 2, 1, 1, 3, 3 ];\n*\n* var y = dedupeCopy( x, 2 );\n* // returns [ 1, 1, 2, 1, 1, 3, 3 ]\n*\n* var bool = ( x === y );\n* // returns false\n*/\nfunction dedupeCopy( x, limit ) {\n\tvar count;\n\tvar prev;\n\tvar len;\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\tprev = NaN; // we leverage the fact that `NaN` is not equal to anything, including itself, to handle the initial condition\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = x[ i ];\n\t\tif ( v === prev ) {\n\t\t\tcount += 1;\n\t\t\tif ( count <= limit ) {\n\t\t\t\tout.push( prev );\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v;\n\t\t\tcount = 1;\n\t\t\tout.push( prev );\n\t\t}\n\t}\n\treturn out;\n}\n\n/**\n* Copies de-duplicated values to a new array, treating `NaN` values as equal.\n*\n* @private\n* @param {Array} x - input array\n* @param {PositiveInteger} limit - number of allowed consecutive duplicates\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 1, 2, NaN, NaN, 3, 3 ];\n*\n* var y = dedupeEqualNaNs( x, 1 );\n* // returns [ 1, 2, NaN, 3 ]\n*\n* var bool = ( x === y );\n* // returns false\n*\n* @example\n* var x = [ 1, 1, 1, 2, 1, 1, NaN, NaN, NaN, 3, 3 ];\n*\n* var y = dedupeEqualNaNs( x, 2 );\n* // returns [ 1, 1, 2, 1, 1, NaN, NaN, 3, 3 ]\n*\n* var bool = ( x === y );\n* // returns false\n*/\nfunction dedupeEqualNaNs( x, limit ) {\n\tvar count;\n\tvar prev;\n\tvar len;\n\tvar out;\n\tvar FLG;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\tFLG = false;\n\tprev = NaN; // we leverage the fact that `NaN` is not equal to anything, including itself, to handle the initial condition\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = x[ i ];\n\t\tif ( v === prev || ( FLG && isnan( v ) ) ) {\n\t\t\tcount += 1;\n\t\t\tif ( count <= limit ) {\n\t\t\t\tout.push( prev );\n\t\t\t}\n\t\t} else {\n\t\t\tprev = v;\n\t\t\tcount = 1;\n\t\t\tout.push( prev );\n\t\t\tFLG = false;\n\t\t\tif ( isnan( prev ) ) {\n\t\t\t\tFLG = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Copies elements to a new \"generic\" array after removing consecutive duplicated values.\n*\n* @param {Array} x - input array\n* @param {PositiveInteger} limit - number of allowed consecutive duplicates\n* @param {boolean} equalNaNs - boolean indicating whether NaNs should be considered equal\n* @returns {Array} de-duplicated values\n*\n* @example\n* var x = [ 1, 1, 2, 3, 3 ];\n*\n* var y = dedupe( x, 1, false );\n* // returns [ 1, 2, 3 ]\n*\n* var bool = ( x === y );\n* // returns false\n*\n* @example\n* var x = [ 1, 1, 1, 2, 1, 1, 3, 3 ];\n*\n* var y = dedupe( x, 2, false );\n* // returns [ 1, 1, 2, 1, 1, 3, 3 ]\n*\n* var bool = ( x === y );\n* // returns false\n*/\nfunction dedupe( x, limit, equalNaNs ) {\n\tif ( equalNaNs ) {\n\t\treturn dedupeEqualNaNs( x, limit );\n\t}\n\treturn dedupeCopy( x, limit );\n}\n\n\n// EXPORTS //\n\nexport default dedupe;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from './../../../base/arraylike2object';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'beep' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n/**\n* Returns a new array with elements in reverse order.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = internal( x );\n* // returns [ 4, 3, 2, 1 ]\n*/\nfunction internal( x ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = x.length-1; i >= 0; i-- ) {\n\t\tout.push( x[ i ] );\n\t}\n\treturn out;\n}\n\n/**\n* Returns a new array with elements in reverse order.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {Array} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array/base/to-accessor-array';\n* import arraylike2object from '@stdlib/array/base/arraylike2object';\n*\n* var x = toAccessorArray( [ 1, 2, 3, 4 ] );\n*\n* var v = x.get( 0 );\n* // returns 1\n*\n* var out = accessors( arraylike2object( x ) );\n* // returns [ 4, 3, 2, 1 ]\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar out;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tout = [];\n\tfor ( i = data.length-1; i >= 0; i-- ) {\n\t\tout.push( get( data, i ) );\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a new array with elements in reverse order.\n*\n* @param {Collection} x - input array\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n*\n* var out = toReversed( x );\n* // returns [ 4, 3, 2, 1 ]\n*\n* var bool = ( out === x );\n* // returns false\n*/\nfunction toReversed( x ) {\n\tvar obj;\n\tif ( hasMethod( x, 'toReversed' ) ) {\n\t\treturn x.toReversed();\n\t}\n\tobj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nexport default toReversed;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a two-dimensional nested input array and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* unary2d( [ x, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ]\n*/\nfunction unary2d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar x;\n\tvar y;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\ty0[ i0 ] = fcn( x0[ i0 ] );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary function to each element retrieved from a two-dimensional nested input array according to a callback function and assigns results to elements in a two-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Collection>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Function} fcn - unary function to apply to callback return values\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {void}\n*\n* @example\n* import ones2d from '@stdlib/array/base/ones2d';\n* import zeros2d from '@stdlib/array/base/zeros2d';\n*\n* function accessor( v ) {\n*     return v - 2.0;\n* }\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 2, 2 ];\n*\n* var x = ones2d( shape );\n* var y = zeros2d( shape );\n*\n* unary2dBy( [ x, y ], shape, scale, accessor );\n*\n* console.log( y );\n* // => [ [ -10.0, -10.0 ], [ -10.0, -10.0 ] ]\n*/\nfunction unary2dBy( arrays, shape, fcn, clbk ) {\n\tvar thisArg;\n\tvar S0;\n\tvar S1;\n\tvar i0;\n\tvar i1;\n\tvar x0;\n\tvar y0;\n\tvar x;\n\tvar y;\n\tvar v;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 ) {\n\t\treturn;\n\t}\n\tif ( arguments.length > 4 ) {\n\t\tthisArg = arguments[ 4 ];\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\tx0 = x[ i1 ];\n\t\ty0 = y[ i1 ];\n\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\tv = clbk.call( thisArg, x0[ i0 ], [ i1, i0 ], [ x, y ] );\n\t\t\tif ( v !== void 0 ) {\n\t\t\t\ty0[ i0 ] = fcn( v );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary2dBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a three-dimensional nested input array and assigns results to elements in a three-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Collection>>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones3d from '@stdlib/array/base/ones3d';\n* import zeros3d from '@stdlib/array/base/zeros3d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 2, 2 ];\n*\n* var x = ones3d( shape );\n* var y = zeros3d( shape );\n*\n* unary3d( [ x, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ]\n*/\nfunction unary3d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar x0;\n\tvar x1;\n\tvar y0;\n\tvar y1;\n\tvar x;\n\tvar y;\n\n\tS0 = shape[ 2 ];\n\tS1 = shape[ 1 ];\n\tS2 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tx1 = x[ i2 ];\n\t\ty1 = y[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tx0 = x1[ i1 ];\n\t\t\ty0 = y1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\ty0[ i0 ] = fcn( x0[ i0 ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a four-dimensional nested input array and assigns results to elements in a four-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Collection>>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones4d from '@stdlib/array/base/ones4d';\n* import zeros4d from '@stdlib/array/base/zeros4d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 2, 2 ];\n*\n* var x = ones4d( shape );\n* var y = zeros4d( shape );\n*\n* unary4d( [ x, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ]\n*/\nfunction unary4d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar x;\n\tvar y;\n\n\tS0 = shape[ 3 ];\n\tS1 = shape[ 2 ];\n\tS2 = shape[ 1 ];\n\tS3 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\tx2 = x[ i3 ];\n\t\ty2 = y[ i3 ];\n\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\tx1 = x2[ i2 ];\n\t\t\ty1 = y2[ i2 ];\n\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\ty0[ i0 ] = fcn( x0[ i0 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Applies a unary callback to elements in a five-dimensional nested input array and assigns results to elements in a five-dimensional nested output array.\n*\n* ## Notes\n*\n* -   The function assumes that the input and output arrays have the same shape.\n*\n* @param {ArrayLikeObject<Array<Array<Collection>>>} arrays - array-like object containing one input nested array and one output nested array\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {Callback} fcn - unary callback\n* @returns {void}\n*\n* @example\n* import ones5d from '@stdlib/array/base/ones5d';\n* import zeros5d from '@stdlib/array/base/zeros5d';\n*\n* function scale( x ) {\n*     return x * 10.0;\n* }\n*\n* var shape = [ 1, 1, 1, 2, 2 ];\n*\n* var x = ones5d( shape );\n* var y = zeros5d( shape );\n*\n* unary5d( [ x, y ], shape, scale );\n*\n* console.log( y );\n* // => [ [ [ [ [ 10.0, 10.0 ], [ 10.0, 10.0 ] ] ] ] ]\n*/\nfunction unary5d( arrays, shape, fcn ) {\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar S4;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\tvar i4;\n\tvar x0;\n\tvar x1;\n\tvar x2;\n\tvar x3;\n\tvar y0;\n\tvar y1;\n\tvar y2;\n\tvar y3;\n\tvar x;\n\tvar y;\n\n\tS0 = shape[ 4 ];\n\tS1 = shape[ 3 ];\n\tS2 = shape[ 2 ];\n\tS3 = shape[ 1 ];\n\tS4 = shape[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 || S3 <= 0 || S4 <= 0 ) {\n\t\treturn;\n\t}\n\tx = arrays[ 0 ];\n\ty = arrays[ 1 ];\n\tfor ( i4 = 0; i4 < S4; i4++ ) {\n\t\tx3 = x[ i4 ];\n\t\ty3 = y[ i4 ];\n\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\tx2 = x3[ i3 ];\n\t\t\ty2 = y3[ i3 ];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\tx1 = x2[ i2 ];\n\t\t\t\ty1 = y2[ i2 ];\n\t\t\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\t\t\tx0 = x1[ i1 ];\n\t\t\t\t\ty0 = y1[ i1 ];\n\t\t\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\t\t\ty0[ i0 ] = fcn( x0[ i0 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default unary5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array whose elements increment by 1.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = unitspace( 0, 6 );\n* // returns [ 0, 1, 2, 3, 4, 5 ]\n*/\nfunction unitspace( x1, x2 ) {\n\tvar arr;\n\tvar len;\n\tvar i;\n\n\tlen = x2 - x1;\n\tif ( len <= 1 ) {\n\t\treturn [ x1 ];\n\t}\n\tarr = [ x1 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tarr.push( x1 + i );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default unitspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled2d from './../../../base/filled2d';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled two-dimensional nested array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {ArrayArray} filled array\n*\n* @example\n* var out = zeros2d( [ 1, 3 ] );\n* // returns [ [ 0.0, 0.0, 0.0 ] ]\n*/\nfunction zeros2d( shape ) {\n\treturn filled2d( 0.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default zeros2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled3d from './../../../base/filled3d';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled three-dimensional nested array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = zeros3d( [ 1, 1, 3 ] );\n* // returns [ [ [ 0.0, 0.0, 0.0 ] ] ]\n*/\nfunction zeros3d( shape ) {\n\treturn filled3d( 0.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default zeros3d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled4d from './../../../base/filled4d';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled four-dimensional nested array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = zeros4d( [ 1, 1, 1, 3 ] );\n* // returns [ [ [ [ 0.0, 0.0, 0.0 ] ] ] ]\n*/\nfunction zeros4d( shape ) {\n\treturn filled4d( 0.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default zeros4d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled5d from './../../../base/filled5d';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled five-dimensional nested array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = zeros5d( [ 1, 1, 1, 1, 3 ] );\n* // returns [ [ [ [ [ 0.0, 0.0, 0.0 ] ] ] ] ]\n*/\nfunction zeros5d( shape ) {\n\treturn filled5d( 0.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default zeros5d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport fillednd from './../../../base/fillednd';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled n-dimensional nested array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = zerosnd( [ 3 ] );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = zerosnd( [ 1, 3 ] );\n* // returns [ [ 0.0, 0.0, 0.0 ] ]\n*/\nfunction zerosnd( shape ) {\n\treturn fillednd( 0.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default zerosnd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @module @stdlib/array/buffer\n*\n* @example\n* import ctor from '@stdlib/array/buffer';\n*\n* var buf = new ctor( 10 );\n* // returns <ArrayBuffer>\n*/\n\n// MODULES //\n\nimport hasArrayBufferSupport from '@stdlib/assert/has-arraybuffer-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasArrayBufferSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns an object used to represent a generic, fixed-length raw binary data buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Int16Array from './../../int16';\nimport Int32Array from './../../int32';\nimport Int8Array from './../../int8';\nimport Uint16Array from './../../uint16';\nimport Uint32Array from './../../uint32';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'generic': Array, // TODO: replace with `stdlib` pkg\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray,\n\t'complex64': Complex64Array,\n\t'complex128': Complex128Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns an array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport getType from './../../dtype';\nimport ctors from './../../ctors';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport format from '@stdlib/string/format';\nimport gcopy from '@stdlib/blas/base/gcopy';\nimport copy from './../../base/copy';\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether a data type is a single-precision complex floating-point number data type.\n*\n* @private\n* @param {string} dtype - data type\n* @returns {boolean} boolean indicating whether a provided data type is a single-precision complex floating-point number data type\n*\n* @example\n* var bool = isComplex64( 'float64' );\n* // returns false\n*\n* @example\n* var bool = isComplex64( 'complex64' );\n* // returns true\n*/\nfunction isComplex64( dtype ) {\n\treturn ( dtype === 'complex64' );\n}\n\n/**\n* Tests whether a data type is a double-precision complex floating-point number data type.\n*\n* @private\n* @param {string} dtype - data type\n* @returns {boolean} boolean indicating whether a provided data type is a double-precision complex floating-point number data type\n*\n* @example\n* var bool = isComplex128( 'float64' );\n* // returns false\n*\n* @example\n* var bool = isComplex128( 'complex128' );\n* // returns true\n*/\nfunction isComplex128( dtype ) {\n\treturn ( dtype === 'complex128' );\n}\n\n\n// MAIN //\n\n/**\n* Converts an array to an array of a different data type.\n*\n* @param {Collection} x - array to convert\n* @param {string} dtype - output data type\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a recognized array data type\n* @returns {(Array|TypedArray|ComplexArray)} output array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0 ];\n*\n* var out = convert( arr, 'float64' );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction convert( x, dtype ) {\n\tvar isc64;\n\tvar ctor;\n\tvar xbuf;\n\tvar obuf;\n\tvar out;\n\tvar len;\n\tvar t;\n\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\t// If the output data type is \"generic\", our task is relatively straightforward...\n\tif ( dtype === 'generic' ) {\n\t\treturn copy( x );\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a recognized array data type. Value: `%s`.', dtype ) );\n\t}\n\t// Cache the input array length:\n\tlen = x.length;\n\n\t// Get the input array data type:\n\tt = getType( x );\n\tisc64 = isComplex64( t );\n\n\t// Create the output array:\n\tout = new ctor( len );\n\n\t// As the output data type is not \"generic\", we need to explicitly handle complex number input arrays...\n\tif ( isc64 || isComplex128( t ) ) {\n\t\tif ( isc64 ) {\n\t\t\txbuf = reinterpret64( x, 0 );\n\t\t} else {\n\t\t\txbuf = reinterpret128( x, 0 );\n\t\t}\n\t\t// Check whether the output data type is a complex number data type...\n\t\tif ( isComplex64( dtype ) ) { // cmplx => cmplx\n\t\t\tobuf = reinterpret64( out, 0 );\n\t\t\tgcopy( len*2, xbuf, 1, obuf, 1 );\n\t\t\treturn out;\n\t\t}\n\t\tif ( isComplex128( dtype ) ) { // cmplx => cmplx\n\t\t\tobuf = reinterpret128( out, 0 );\n\t\t\tgcopy( len*2, xbuf, 1, obuf, 1 );\n\t\t\treturn out;\n\t\t}\n\t\t// We assume that the output data type is a real number data type, given that we're looking to convert a provided complex number array; in which case, we'll only extract the real components from the complex number input array...\n\t\tgcopy( len, xbuf, 2, out, 1 ); // cmplx => real\n\t\treturn out;\n\t}\n\t// Check whether we need to explicitly handle complex number output arrays...\n\tisc64 = isComplex64( dtype );\n\tif ( isc64 || isComplex128( dtype ) ) {\n\t\tif ( isc64 ) {\n\t\t\tobuf = reinterpret64( out, 0 );\n\t\t} else {\n\t\t\tobuf = reinterpret128( out, 0 );\n\t\t}\n\t\t// We assume that the input data type is a real number data type, given that we're looking to convert to a complex number array; in which case, we'll only set the real components... (WARNING: we're assuming that the output array has been zero-initialized! The imaginary components should be zero!)\n\t\tgcopy( len, x, 1, obuf, 2 ); // real => cmplx\n\t\treturn out;\n\t}\n\t// At this point, we're no longer handling complex number arrays, so we'll just assume that we can perform a straightforward copy...\n\tgcopy( len, x, 1, out, 1 ); // note: `gcopy` is assumed to support arrays using accessors\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default convert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getType from './../../dtype';\nimport convert from './../../convert';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Converts an array to the same data type as a second input array.\n*\n* @param {Collection} x - array to convert\n* @param {(Array|TypedArray|ComplexArray)} y - array having the desired output data type\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must have a recognized data type\n* @returns {(Array|TypedArray|ComplexArray)} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0 ];\n* var y = new Float64Array( 0 );\n*\n* var out = convertSame( x, y );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ]\n*/\nfunction convertSame( x, y ) {\n\tvar dtype = getType( y );\n\tif ( dtype === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a recognized/supported data type. Type: `%s`. Value: `%s`.', dtype, y ) );\n\t}\n\treturn convert( x, dtype );\n}\n\n\n// EXPORTS //\n\nexport default convertSame;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof DataView === 'function' ) ? DataView : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @module @stdlib/array/dataview\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n* import DataView from '@stdlib/array/dataview';\n*\n* var buf = new ArrayBuffer( 10 );\n* // returns <ArrayBuffer>\n*\n* var dv = new DataView( buf );\n* // returns <DataView>\n*/\n\n// MODULES //\n\nimport hasDataViewSupport from '@stdlib/assert/has-dataview-support';\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasDataViewSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Constructor which returns a data view representing a provided array buffer.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isInteger from '@stdlib/assert/is-integer';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isObject from '@stdlib/assert/is-object';\nimport format from '@stdlib/string/format';\nimport floor from '@stdlib/math/base/special/floor';\nimport round from '@stdlib/math/base/special/round';\nimport ceil from '@stdlib/math/base/special/ceil';\n\n\n// VARIABLES //\n\nvar timestamp = /^\\d{10}$|^\\d{13}$/;\nvar rounders = [ 'floor', 'ceil', 'round' ];\n\n\n// FUNCTIONS //\n\n/**\n* Validates a date parameter.\n*\n* @private\n* @param {*} value - value to be validated\n* @param {string} name - name to be used in error messages\n* @throws {TypeError} value must either be a date string, Date object, Unix timestamp, or JavaScript timestamp\n* @throws {Error} numeric date must be either a Unix or JavaScript timestamp\n* @returns {Date} validated date\n*/\nfunction validDate( value, name ) {\n\tvar type;\n\n\ttype = typeof value;\n\tif ( type === 'string' ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\tthrow new Error( format( 'invalid argument. Unable to parse %s date.', name.toLowerCase() ) );\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( type === 'number' ) {\n\t\tif ( !timestamp.test( value ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Numeric %s date must be either a Unix or JavaScript timestamp.', name.toLowerCase() ) );\n\t\t}\n\t\tif ( value.toString().length === 10 ) {\n\t\t\tvalue *= 1000; // sec to ms\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( !(value instanceof Date) ) {\n\t\tthrow new TypeError( format( 'invalid argument. %s date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.', name ) );\n\t}\n\treturn value;\n}\n\n\n// MAIN //\n\n/**\n* Generates an array of linearly spaced dates.\n*\n* @param {(Date|number|string)} start - start time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {(Date|number|string)} stop - stop time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {number} [length] - output array length (default: 100)\n* @param {Object} [options] - function options\n* @param {string} [options.round] - specifies how sub-millisecond times should be rounded: [ 'floor', 'ceil', 'round' ] (default: 'floor' )\n* @throws {TypeError} length argument must a positive integer\n* @throws {Error} must provide valid options\n* @returns {Array} array of dates\n*\n* @example\n* var stop = '2014-12-02T07:00:54.973Z';\n* var start = new Date( stop ) - 60000;\n*\n* var arr = datespace( start, stop, 6 );\n* // returns [...]\n*\n* @example\n* // Equivalent of Math.ceil():\n* var arr = datespace( 1417503655000, 1417503655001, 3, { 'round': 'ceil' } );\n* // returns [...]\n*\n* // Equivalent of Math.round():\n* arr = datespace( 1417503655000, 1417503655001, 3, { 'round': 'round' } );\n* // returns [...]\n*/\nfunction datespace( start, stop, length, options ) {\n\tvar opts;\n\tvar len;\n\tvar flg;\n\tvar arr;\n\tvar end;\n\tvar fcn;\n\tvar tmp;\n\tvar d;\n\tvar i;\n\n\tlen = 100;\n\tflg = true;\n\topts = {\n\t\t'round': 'floor'\n\t};\n\tstart = validDate( start, 'Start' );\n\tstop = validDate( stop, 'Stop' );\n\tif ( arguments.length > 2 ) {\n\t\tif ( arguments.length === 3 ) {\n\t\t\tif ( isObject( length ) ) {\n\t\t\t\topts = length;\n\t\t\t} else {\n\t\t\t\tlen = length;\n\n\t\t\t\t// Turn off checking the options object...\n\t\t\t\tflg = false;\n\t\t\t}\n\t\t} else {\n\t\t\topts = options;\n\t\t\tlen = length;\n\t\t}\n\t\tif ( len === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( !isInteger( len ) || len < 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t\tif ( flg ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'round' ) ) {\n\t\t\t\tif ( !isString( opts.round ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'round', opts.round ) );\n\t\t\t\t}\n\t\t\t\tif ( rounders.indexOf( opts.round ) === -1 ) {\n\t\t\t\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'round', rounders.join( '\", \"' ), opts.round ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tswitch ( opts.round ) {\n\tcase 'round':\n\t\tfcn = round;\n\t\tbreak;\n\tcase 'ceil':\n\t\tfcn = ceil;\n\t\tbreak;\n\tcase 'floor':\n\tdefault:\n\t\tfcn = floor;\n\t\tbreak;\n\t}\n\n\t// Calculate the increment...\n\tend = len - 1;\n\td = ( stop.getTime() - start.getTime() ) / end;\n\n\t// Build the output array...\n\tarr = new Array( len );\n\ttmp = start;\n\tarr[ 0 ] = tmp;\n\ttmp = tmp.getTime();\n\tfor ( i = 1; i < end; i++ ) {\n\t\ttmp += d;\n\t\tarr[ i ] = new Date( fcn( tmp ) );\n\t}\n\tarr[ end ] = stop;\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default datespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default array settings.\n*\n* @returns {Object} defaults\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t// Data types:\n\t\t'dtypes': {\n\t\t\t'default': 'float64',\n\t\t\t'numeric': 'float64',\n\t\t\t'real': 'float64',\n\t\t\t'floating_point': 'float64',\n\t\t\t'real_floating_point': 'float64',\n\t\t\t'complex_floating_point': 'complex128',\n\t\t\t'integer': 'int32',\n\t\t\t'signed_integer': 'int32',\n\t\t\t'unsigned_integer': 'uint32'\n\t\t}\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defaults from './main.js';\n\n\n// VARIABLES //\n\nvar DEFAULTS = defaults();\nvar HASH = {\n\t'dtypes.default': DEFAULTS.dtypes.default,\n\t'dtypes.numeric': DEFAULTS.dtypes.numeric,\n\t'dtypes.real': DEFAULTS.dtypes.real,\n\t'dtypes.floating_point': DEFAULTS.dtypes.floating_point,\n\t'dtypes.real_floating_point': DEFAULTS.dtypes.real_floating_point,\n\t'dtypes.complex_floating_point': DEFAULTS.dtypes.complex_floating_point,\n\t'dtypes.integer': DEFAULTS.dtypes.integer,\n\t'dtypes.signed_integer': DEFAULTS.dtypes.signed_integer,\n\t'dtypes.unsigned_integer': DEFAULTS.dtypes.unsigned_integer\n};\n\n\n// MAIN //\n\n/**\n* Returns a default array setting.\n*\n* @param {string} name - setting name\n* @returns {*} default setting or null\n*\n* @example\n* var v = get( 'dtypes.default' );\n* // returns <string>\n*/\nfunction get( name ) {\n\tvar v = HASH[ name ];\n\treturn ( v === void 0 ) ? null : v;\n}\n\n\n// EXPORTS //\n\nexport default get;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return default array settings.\n*\n* @module @stdlib/array/defaults\n*\n* @example\n* import defaults from '@stdlib/array/defaults';\n*\n* var o = defaults();\n* // returns {...}\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport get from './get.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'get', get );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport replace from '@stdlib/string/base/replace';\nimport DTYPES from './dtypes.json';\n\n\n// VARIABLES //\n\nvar RE_SUFFIX = /_and_generic$/;\n\n\n// MAIN //\n\n/**\n* Returns a list of array data types.\n*\n* @param {string} [kind] - data type kind\n* @returns {StringArray} list of array data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', ... ]\n*\n* @example\n* var list = dtypes( 'floating_point' );\n* // returns [...]\n*/\nfunction dtypes() {\n\tvar kind;\n\tvar out;\n\tvar FLG;\n\tif ( arguments.length === 0 ) {\n\t\treturn DTYPES.all.slice();\n\t}\n\tFLG = false;\n\tkind = arguments[ 0 ];\n\tif ( RE_SUFFIX.test( kind ) ) {\n\t\tkind = replace( kind, RE_SUFFIX, '' );\n\t\tif ( kind !== 'all' ) {\n\t\t\tFLG = true;\n\t\t}\n\t}\n\tout = DTYPES[ kind ];\n\tout = ( out ) ? out.slice() : [];\n\tif ( FLG && out.length > 0 ) {\n\t\tout.push( 'generic' );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport ctors from './../../ctors';\nimport gzeros from './../../base/zeros';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.default' );\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled array having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = zeros( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = zeros( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*/\nfunction zeros( length ) {\n\tvar dtype;\n\tvar ctor;\n\tif ( !isNonNegativeInteger( length ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', length ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdtype = arguments[ 1 ];\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tif ( dtype === 'generic' ) {\n\t\treturn gzeros( length );\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\treturn new ctor( length ); // WARNING: we assume that, apart from 'generic', the constructors for supported array data types are zero-filled by default\n}\n\n\n// EXPORTS //\n\nexport default zeros;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport zeros from './../../zeros';\n\n\n// MAIN //\n\n/**\n* Creates an uninitialized array having a specified length.\n*\n* @private\n* @param {NonNegativeInteger} length - array length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = empty( 2 );\n* // returns <Float64Array>\n*\n* @example\n* var arr = empty( 2, 'float32' );\n* // returns <Float32Array>\n*/\nfunction empty( length ) {\n\tif ( arguments.length > 1 ) {\n\t\treturn zeros( length, arguments[ 1 ] );\n\t}\n\treturn zeros( length );\n}\n\n\n// EXPORTS //\n\nexport default empty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport dtype from './../../dtype';\nimport empty from './../../empty';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Creates an uninitialized array having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = emptyLike( [ 0.0, 0.0 ] );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var arr = emptyLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>\n*/\nfunction emptyLike( x ) {\n\tvar dt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t}\n\treturn empty( x.length, dt );\n}\n\n\n// EXPORTS //\n\nexport default emptyLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport ctors from './../../ctors';\nimport gfill from '@stdlib/blas/ext/base/gfill';\nimport filled from './../../base/filled';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport iterLength from '@stdlib/iter/length';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.default' );\n\n\n// FUNCTIONS //\n\n/**\n* Creates a filled \"generic\" array from an iterator.\n*\n* @private\n* @param {Iterator} it - iterator\n* @param {*} value - fill value\n* @returns {Array} filled array\n*/\nfunction filledIterator( it, value ) {\n\tvar arr;\n\tvar v;\n\n\tarr = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n/**\n* Fills an array exposing accessors for getting and setting array elements.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {*} value - fill value\n* @returns {Collection} input array\n*/\nfunction filledAccessors( arr, value ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tarr.set( value, i );\n\t}\n\treturn arr;\n}\n\n\n// MAIN //\n\n/**\n* Creates a filled array.\n*\n* @param {*} [value] - fill value\n* @param {(NonNegativeInteger|TypedArray|ArrayLikeObject|ArrayBuffer|Iterable)} [arg] - a length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @throws {TypeError} must provide a length, typed array, array-like object, buffer, or iterable\n* @throws {Error} creating a generic array from an `ArrayBuffer` is not supported\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = filledarray();\n* // returns <Float64Array>\n*\n* @example\n* var arr = filledarray( 1.0, 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1.0, 2, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1.0, 2, 'generic' );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1.0, [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = filledarray( 1, [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 1, 1 ]\n*\n* @example\n* var arr1 = filledarray( 2, [ 5, 3 ], 'int32' );\n* var arr2 = filledarray( 1.0, arr1 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr1 = filledarray( 2, [ 5, 3 ], 'int32' );\n* var arr2 = filledarray( 1, arr1, 'uint32' );\n* // returns <Uint32Array>[ 1, 1 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0, 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 8 );\n* // returns <Float64Array>[ 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarray( 1.0, buf, 8, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarray( 1.0, buf, 8, 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarray( 1, buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 1, 1 ]\n*/\nfunction filledarray() {\n\tvar value;\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\tvar arr;\n\tvar len;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tnargs -= 1;\n\tif ( nargs >= 0 && isString( arguments[ nargs ] ) ) {\n\t\tdtype = arguments[ nargs ];\n\t\tnargs -= 1;\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( dtype === 'generic' ) {\n\t\tif ( nargs <= 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tvalue = arguments[ 0 ];\n\t\targ = arguments[ 1 ];\n\t\tif ( nargs === 1 ) {\n\t\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\t\tlen = arg;\n\t\t\t} else if ( isCollection( arg ) ) {\n\t\t\t\tlen = arg.length;\n\t\t\t}\n\t\t\tif ( len !== void 0 ) {\n\t\t\t\treturn filled( value, len );\n\t\t\t}\n\t\t\tif ( isArrayBuffer( arg ) ) {\n\t\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t\t}\n\t\t\tif ( isObject( arg ) ) {\n\t\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\treturn filledIterator( arg, value );\n\t\t\t}\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) { // length || array-like || ArrayBuffer || iterable\n\t\targ = arguments[ 1 ];\n\t\tif ( isCollection( arg ) ) {\n\t\t\tarr = new ctor( arg.length );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isNonNegativeInteger( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isObject( arg ) ) {\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tarr = new ctor( iterLength( arg ) );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t}\n\t} else if ( nargs === 2 ) {\n\t\tarr = new ctor( arguments[1], arguments[2] ); // (ArrayBuffer, byteOffset)\n\t} else {\n\t\tarr = new ctor( arguments[1], arguments[2], arguments[3] ); // (ArrayBuffer, byteOffset, length)\n\t}\n\tif ( arr.length > 0 ) {\n\t\tif ( /^complex/.test( dtype ) ) {\n\t\t\tfilledAccessors( arr, arguments[ 0 ] );\n\t\t} else {\n\t\t\tgfill( arr.length, arguments[ 0 ], arr, 1 );\n\t\t}\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filledarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isObject from '@stdlib/assert/is-object';\nimport isFunction from '@stdlib/assert/is-function';\nimport ctors from './../../ctors';\nimport gfillBy from '@stdlib/blas/ext/base/gfill-by';\nimport filledArray from './../../base/filled-by';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport iterLength from '@stdlib/iter/length';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.default' );\n\n\n// FUNCTIONS //\n\n/**\n* Creates a filled \"generic\" array from an iterator.\n*\n* @private\n* @param {Iterable} it - iterator\n* @param {Callback} clbk - callback function\n* @param {*} thisArg - callback function execution context\n* @returns {Array} filled array\n*/\nfunction filledArrayIterator( it, clbk, thisArg ) {\n\tvar arr;\n\tvar i;\n\tvar v;\n\n\tarr = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tarr.push( clbk.call( thisArg, i ) );\n\t}\n\treturn arr;\n}\n\n/**\n* Fills an array exposing accessors for getting and setting array elements.\n*\n* @private\n* @param {Collection} arr - input array\n* @param {Callback} clbk - callback function\n* @param {*} thisArg - callback function execution context\n* @returns {Collection} input array\n*/\nfunction filledAccessors( arr, clbk, thisArg ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tarr.set( clbk.call( thisArg, i ), i );\n\t}\n\treturn arr;\n}\n\n\n// MAIN //\n\n/**\n* Creates a filled array according to a provided callback function.\n*\n* @param {(NonNegativeInteger|TypedArray|ArrayLikeObject|ArrayBuffer|Iterable)} [arg] - a length, typed array, array-like object, buffer, or iterable\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @param {Callback} [clbk] - callback to invoke\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} must provide a recognized data type\n* @throws {TypeError} must provide a length, typed array, array-like object, buffer, or iterable\n* @throws {TypeError} callback argument must be a function.\n* @throws {Error} creating a generic array from an `ArrayBuffer` is not supported\n* @returns {(TypedArray|Array)} array or typed array\n*\n* @example\n* var arr = filledarrayBy();\n* // returns <Float64Array>\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( 2, 'generic', clbk );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var arr = filledarrayBy( [ 0.5, 0.5 ], clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk() {\n*     return 1;\n* }\n*\n* var arr = filledarrayBy( [ 5, -3 ], 'int32', clbk );\n* // returns <Int32Array>[ 1, 1 ]\n*\n* @example\n* function clbk1() {\n*     return 10;\n* }\n*\n* function clbk2() {\n*     return 1.0;\n* }\n*\n* var arr1 = filledarrayBy( [ 5, 3 ], 'int32', clbk1 );\n* var arr2 = filledarrayBy( arr1, clbk2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* function clbk1() {\n*     return 1.0;\n* }\n*\n* function clbk2() {\n*     return 2;\n* }\n*\n* var arr1 = filledarrayBy( [ 5, 3 ], 'int32', clbk1 );\n* var arr2 = filledarrayBy( arr1, 'uint32', clbk2 );\n* // returns <Uint32Array>[ 2, 2 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0, 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 8, clbk );\n* // returns <Float64Array>[ 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = filledarrayBy( buf, 8, 'float32', clbk );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* function clbk() {\n*     return 1.0;\n* }\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarrayBy( buf, 8, 2, clbk );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* function clbk() {\n*     return 1;\n* }\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = filledarrayBy( buf, 8, 2, 'int32', clbk );\n* // returns <Int32Array>[ 1, 1 ]\n*/\nfunction filledarrayBy() {\n\tvar thisArg;\n\tvar nargs;\n\tvar dtype;\n\tvar clbk;\n\tvar ctor;\n\tvar arr;\n\tvar len;\n\tvar arg;\n\n\tnargs = arguments.length;\n\n\t// If we weren't provided any arguments, return an empty array...\n\tif ( nargs === 0 ) {\n\t\tctor = ctors( DEFAULT_DTYPE );\n\t\treturn new ctor( 0 );\n\t}\n\t// Check if we were provided a dtype as the first argument...\n\tdtype = arguments[ 0 ];\n\tif ( isString( dtype ) ) {\n\t\t// Invoking this function with arguments `f( dtype, clbk[, thisArg] )` is not allowed (otherwise, we'd need to also allow `f( clbk[, thisArg] )`)...\n\t\tif ( nargs > 1 ) {\n\t\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t\t}\n\t\tctor = ctors( dtype );\n\t\tif ( ctor === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t\t}\n\t\t// Return an empty array having the specified dtype:\n\t\treturn new ctor( 0 );\n\t}\n\t// For all other supported invocations, we need at least two arguments...\n\tif ( nargs < 2 ) {\n\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t}\n\t// At this point, we need to do some argument juggling...\n\tnargs -= 1; // henceforth, the number of available arguments is `nargs+1`\n\n\t// Determine whether the last argument is a callback or \"this\" context...\n\tif ( isFunction( arguments[ nargs ] ) ) {\n\t\t// If the last argument is a function, we need to check the next-to-last argument, and, if the next-to-last argument is a function, assume that the next-to-last argument is the callback and the last argument is a \"this\" context...\n\t\tif ( isFunction( arguments[ nargs-1 ] ) ) {\n\t\t\tthisArg = arguments[ nargs ];\n\t\t\tnargs -= 1;\n\t\t\tclbk = arguments[ nargs ];\n\n\t\t\t// Check if we were provided only a callback and a \"this\" context..\n\t\t\tif ( nargs === 0 ) {\n\t\t\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t\t\t}\n\t\t} else {\n\t\t\t// \"this\" context is left undefined...\n\t\t\tclbk = arguments[ nargs ];\n\t\t}\n\t}\n\t// If we were provided 3 or more arguments and the last argument was not a function, assume that we were provided a callback and a \"this\" context...\n\telse if ( nargs >= 2 ) {\n\t\tthisArg = arguments[ nargs ];\n\t\tnargs -= 1;\n\t\tclbk = arguments[ nargs ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t}\n\t// If were were only provided 2 arguments and the last argument was not a function, we've been provided an insufficient number of arguments...\n\telse {\n\t\tthrow new TypeError( 'invalid arguments. Must provide a length, typed array, array-like object, or an iterable.' );\n\t}\n\t// Now that we've processed the callback arguments, let's continue working backward to see if we've been provided a `dtype` argument...\n\tnargs -= 1;\n\tif ( nargs >= 0 && isString( arguments[ nargs ] ) ) {\n\t\tdtype = arguments[ nargs ];\n\t\tnargs -= 1;\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\t// At this point, we've resolved the output array data type, and now we can actually create the output array...\n\tif ( dtype === 'generic' ) {\n\t\targ = arguments[ 0 ];\n\t\tif ( nargs === 0 ) {\n\t\t\tif ( isNonNegativeInteger( arg ) ) {\n\t\t\t\tlen = arg;\n\t\t\t} else if ( isCollection( arg ) ) {\n\t\t\t\tlen = arg.length;\n\t\t\t}\n\t\t\tif ( len !== void 0 ) {\n\t\t\t\treturn filledArray( len, clbk, thisArg );\n\t\t\t}\n\t\t\tif ( isArrayBuffer( arg ) ) {\n\t\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t\t}\n\t\t\tif ( isObject( arg ) ) {\n\t\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t\t}\n\t\t\t\treturn filledArrayIterator( arg, clbk, thisArg );\n\t\t\t}\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tthrow new Error( 'invalid arguments. Creating a generic array from an ArrayBuffer is not supported.' );\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t}\n\tif ( nargs === 0 ) { // length || array-like || ArrayBuffer || iterable\n\t\targ = arguments[ 0 ];\n\t\tif ( isCollection( arg ) ) {\n\t\t\tarr = new ctor( arg.length );\n\t\t} else if ( isArrayBuffer( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isNonNegativeInteger( arg ) ) {\n\t\t\tarr = new ctor( arg );\n\t\t} else if ( isObject( arg ) ) {\n\t\t\tif ( HAS_ITERATOR_SYMBOL === false ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Environment lacks Symbol.iterator support. Must provide a length, typed array, or array-like object. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tif ( !isFunction( arg[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\targ = arg[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( arg.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t\t}\n\t\t\tarr = new ctor( iterLength( arg ) );\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a length, typed array, array-like object, or an iterable. Value: `%s`.', arg ) );\n\t\t}\n\t} else if ( nargs === 1 ) {\n\t\tarr = new ctor( arguments[0], arguments[1] ); // (ArrayBuffer, byteOffset)\n\t} else {\n\t\tarr = new ctor( arguments[0], arguments[1], arguments[2] ); // (ArrayBuffer, byteOffset, length)\n\t}\n\tif ( arr.length > 0 ) {\n\t\tif ( /^complex/.test( dtype ) ) {\n\t\t\tfilledAccessors( arr, clbk, thisArg );\n\t\t} else {\n\t\t\tgfillBy( arr.length, arr, 1, callback );\n\t\t}\n\t}\n\treturn arr;\n\n\t/**\n\t* Callback which wraps a provided callback and is invoked for each array element.\n\t*\n\t* @private\n\t* @param {*} value - element value\n\t* @param {NonNegativeInteger} aidx - array index\n\t* @param {NonNegativeInteger} sidx - strided index\n\t* @param {Collection} array - input array/collection\n\t* @returns {*} callback return value\n\t*/\n\tfunction callback( value, aidx ) {\n\t\treturn clbk.call( thisArg, aidx );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default filledarrayBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isIteratorLike from '@stdlib/assert/is-iterator-like';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport accessorSetter from './../../base/accessor-setter';\nimport setter from './../../base/setter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Creates (or fills) an array from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} [out] - output array\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} iterator argument must be an iterator\n* @throws {TypeError} callback argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* import randu from '@stdlib/random/iter/randu';\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2array( iter );\n* // returns <Array>\n*/\nfunction iterator2array() {\n\tvar iterator;\n\tvar thisArg;\n\tvar fcn;\n\tvar out;\n\tvar len;\n\tvar set;\n\tvar dt;\n\tvar i;\n\tvar v;\n\n\titerator = arguments[ 0 ];\n\tif ( arguments.length > 1 ) {\n\t\tif ( isCollection( arguments[ 1 ] ) ) {\n\t\t\tout = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Iterator argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\ti = -1;\n\tif ( out === void 0 ) {\n\t\tout = [];\n\t\tif ( fcn ) {\n\t\t\twhile ( true ) {\n\t\t\t\ti += 1;\n\t\t\t\tv = iterator.next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tout.push( fcn.call( thisArg, v.value, i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tout.push( v.value );\n\t\t}\n\t\treturn out;\n\t}\n\tlen = out.length;\n\tdt = dtype( out );\n\tif ( isAccessorArray( out ) ) {\n\t\tset = accessorSetter( dt );\n\t} else {\n\t\tset = setter( dt );\n\t}\n\tif ( fcn ) {\n\t\twhile ( i < len-1 ) {\n\t\t\ti += 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i < len-1 ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default iterator2array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport ctors from './../../ctors';\nimport afill from './../../base/filled';\nimport gfill from '@stdlib/blas/ext/base/gfill';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.default' );\n\n\n// MAIN //\n\n/**\n* Creates a filled array having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {*} value - fill value\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = full( 2, 1.0 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = full( 2, 1.0, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction full( length, value ) {\n\tvar dtype;\n\tvar ctor;\n\tvar out;\n\tif ( !isNonNegativeInteger( length ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', length ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tdtype = arguments[ 2 ];\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tif ( dtype === 'generic' ) {\n\t\treturn afill( value, length );\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tout = new ctor( length );\n\n\t// TODO: revisit the following, as using `gfill` is not the most performant, especially for large arrays. We have two options: (1) use a native add-on which delegates to an appropriate C function which performs the loop or (2) use @stdlib/blas/ext/base/(d|s|c|z)fill functions which use native add-ons. The latter option is not great, as we only get perf boosts for large arrays for a select number of dtypes. The former option is more work, as we may need to write a bespoke add-on for handling the argument signature and the various types that `value` can assume (e.g., number, complex, etc). If we had a generic strided `copy` package with an add-on, we could wrap the value as a single element strided array with a stride of `0` and copy from `x` to `y`, and thus would not need to write a bespoke add-on. Note, however, that calling into a native add-on is not free. For shorter arrays, we'll likely observe a perf hit in Node.js. For now, we focus on just getting something working...\n\tgfill( length, value, out, 1 );\n\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default full;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport dtype from './../../dtype';\nimport full from './../../full';\nimport Complex128 from '@stdlib/complex/float64';\nimport Complex64 from '@stdlib/complex/float32';\n\n\n// MAIN //\n\n/**\n* Creates a filled array having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {number} value - fill value\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} third argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = fullLike( [ 0.0, 0.0 ], 1.0 );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var arr = fullLike( [ 0.0, 0.0 ], 1.0, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction fullLike( x, value ) {\n\tvar dt;\n\tvar v;\n\n\tdt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tdt = arguments[ 2 ];\n\t}\n\tif ( typeof value === 'number' ) {\n\t\tif ( dt === 'complex128' ) {\n\t\t\tv = new Complex128( value, 0.0 );\n\t\t} else if ( dt === 'complex64' ) {\n\t\t\tv = new Complex64( value, 0.0 );\n\t\t} else {\n\t\t\tv = value;\n\t\t}\n\t} else {\n\t\tv = value;\n\t}\n\treturn full( x.length, v, dt );\n}\n\n\n// EXPORTS //\n\nexport default fullLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ceil from '@stdlib/math/base/special/ceil';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport format from '@stdlib/string/format';\nimport MAX_LENGTH from '@stdlib/constants/uint32/max';\nimport gen from './../../base/incrspace';\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array using a provided increment.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @param {number} [increment=1] - increment\n* @throws {TypeError} first argument must be numeric\n* @throws {TypeError} second argument must be numeric\n* @throws {TypeError} third argument must be numeric\n* @throws {RangeError} length of created array must be less than `4294967295` (`2**32 - 1`)\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar len;\n\tvar inc;\n\tif ( !isNumber( x1 ) || isnan( x1 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Start must be numeric. Value: `%s`.', x1 ) );\n\t}\n\tif ( !isNumber( x2 ) || isnan( x2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Stop must be numeric. Value: `%s`.', x2 ) );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tinc = 1;\n\t} else {\n\t\tinc = increment;\n\t\tif ( !isNumber( inc ) || isnan( inc ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Increment must be numeric. Value: `%s`.', inc ) );\n\t\t}\n\t}\n\tlen = ceil( ( x2-x1 ) / inc );\n\tif ( len > MAX_LENGTH ) {\n\t\tthrow new RangeError( 'invalid arguments. Generated array exceeds maximum array length.' );\n\t}\n\treturn gen( x1, x2, inc );\n}\n\n\n// EXPORTS //\n\nexport default incrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Complex128Array from './../../complex128';\nimport Complex64Array from './../../complex64';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'complex128': Complex128Array,\n\t'complex64': Complex64Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns a floating-point typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced array over a specified interval.\n*\n* @private\n* @param {number} start - start of interval\n* @param {number} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Array} linearly spaced array\n*\n* @example\n* var arr = linspace( 0, 100, 6, true );\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*\n* @example\n* var arr = linspace( 0, 100, 5, false );\n* // returns [ 0, 20, 40, 60, 80 ]\n*/\nfunction linspace( start, stop, len, endpoint ) {\n\tvar arr;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\treturn [ stop ];\n\t\t}\n\t\treturn [ start ];\n\t}\n\tarr = [ start ];\n\n\t// Calculate the increment:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\td = ( stop-start ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tarr.push( start + (d*i) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tarr.push( stop );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex64 from '@stdlib/complex/float32';\nimport Complex128 from '@stdlib/complex/float64';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced complex number array over a specified interval.\n*\n* @private\n* @param {string} dt1 - start value data type\n* @param {(number|ComplexLike)} start - start of interval\n* @param {string} dt2 - stop value data type\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Array} linearly spaced array\n*/\nfunction linspace( dt1, start, dt2, stop, len, endpoint ) {\n\tvar cmplx;\n\tvar isf32;\n\tvar arr;\n\tvar re1;\n\tvar re2;\n\tvar im1;\n\tvar im2;\n\tvar re;\n\tvar im;\n\tvar dr;\n\tvar di;\n\tvar N;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tisf32 = 0;\n\tif ( dt1 === 'float64' ) {\n\t\tre1 = start;\n\t\tim1 = 0.0;\n\t} else if ( dt1 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre1 = realf( start );\n\t\tim1 = imagf( start );\n\t} else {\n\t\tre1 = real( start );\n\t\tim1 = imag( start );\n\t}\n\tif ( dt2 === 'float64' ) {\n\t\tre2 = stop;\n\t\tim2 = 0.0;\n\t} else if ( dt2 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre2 = realf( stop );\n\t\tim2 = imagf( stop );\n\t} else {\n\t\tre2 = real( stop );\n\t\tim2 = imag( stop );\n\t}\n\t// Determine which complex number constructor to use according to type promotion rules:\n\tif ( isf32 === 2 ) {\n\t\tcmplx = Complex64;\n\t} else {\n\t\tcmplx = Complex128;\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\treturn [ new cmplx( re2, im2 ) ];\n\t\t}\n\t\treturn [ new cmplx( re1, im1 ) ];\n\t}\n\tarr = [ new cmplx( re1, im1 ) ];\n\n\t// Calculate the increments:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\tdr = ( re2-re1 ) / N;\n\tdi = ( im2-im1 ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tre = re1 + (dr*i);\n\t\tim = im1 + (di*i);\n\t\tarr.push( new cmplx( re, im ) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tarr.push( new cmplx( re2, im2 ) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced sequence over a specified interval and assigns the results to a provided output array.\n*\n* @private\n* @param {TypedArray} out - output array\n* @param {number} start - start of interval\n* @param {number} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {TypedArray} linearly spaced array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var out = new Float64Array( 6 );\n* var arr = linspace( out, 0, 100, out.length, true );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var out = new Float64Array( 5 );\n* var arr = linspace( out, 0, 100, out.length, false );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0 ]\n*/\nfunction linspace( out, start, stop, len, endpoint ) {\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tout[ 0 ] = stop;\n\t\t} else {\n\t\t\tout[ 0 ] = start;\n\t\t}\n\t\treturn out;\n\t}\n\tout[ 0 ] = start;\n\n\t// Calculate the increment:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\td = ( stop-start ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tout[ i ] = start + (d*i);\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tout[ N ] = stop;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced complex number sequence over a specified interval and assigns the results to a provided output array strided view.\n*\n* @private\n* @param {(Float32Array|Float64Array)} out - output array strided view\n* @param {string} dt1 - start value data type\n* @param {(number|ComplexLike)} start - start of interval\n* @param {string} dt2 - stop value data type\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {(Float32Array|Float64Array)} complex number array view\n*/\nfunction linspace( out, dt1, start, dt2, stop, len, endpoint ) {\n\tvar re1;\n\tvar re2;\n\tvar im1;\n\tvar im2;\n\tvar dr;\n\tvar di;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\tif ( dt1 === 'float64' ) {\n\t\tre1 = start;\n\t\tim1 = 0.0;\n\t} else if ( dt1 === 'complex64' ) {\n\t\tre1 = realf( start );\n\t\tim1 = imagf( start );\n\t} else {\n\t\tre1 = real( start );\n\t\tim1 = imag( start );\n\t}\n\tif ( dt2 === 'float64' ) {\n\t\tre2 = stop;\n\t\tim2 = 0.0;\n\t} else if ( dt2 === 'complex64' ) {\n\t\tre2 = realf( stop );\n\t\tim2 = imagf( stop );\n\t} else {\n\t\tre2 = real( stop );\n\t\tim2 = imag( stop );\n\t}\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tout[ 0 ] = re2;\n\t\t\tout[ 1 ] = im2;\n\t\t} else {\n\t\t\tout[ 0 ] = re1;\n\t\t\tout[ 1 ] = im1;\n\t\t}\n\t\treturn out;\n\t}\n\tout[ 0 ] = re1;\n\tout[ 1 ] = im1;\n\n\t// Calculate the increments:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\tdr = ( re2-re1 ) / N;\n\tdi = ( im2-im1 ) / N;\n\n\t// Generate linearly spaced complex numbers:\n\tj = 2;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tout[ j ] = re1 + (dr*i);\n\t\tout[ j+1 ] = im1 + (di*i);\n\t\tj += 2;\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tout[ j ] = re2;\n\t\tout[ j+1 ] = im2;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isBoolean } from '@stdlib/assert/is-boolean';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.dtype] - output array data type\n* @param {boolean} [options.endpoint] - boolean indicating whether the `stop` value in the output array\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'endpoint': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'dtype' ) ) {\n\t\topts.dtype = options.dtype;\n\t\tif ( !isString( opts.dtype ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'dtype', opts.dtype ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'endpoint' ) ) {\n\t\topts.endpoint = options.endpoint;\n\t\tif ( !isBoolean( opts.endpoint ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'endpoint', opts.endpoint ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport dtype from '@stdlib/complex/dtype';\nimport ctors from './../../typed-float-ctors';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport DEFAULTS from './../../defaults';\nimport format from '@stdlib/string/format';\nimport genreal from './generic_real.js';\nimport gencmplx from './generic_complex.js';\nimport typedreal from './typed_real.js';\nimport typedcmplx from './typed_complex.js';\nimport validate from './validate.js';\nimport defaults from './defaults.json';\n\n\n// VARIABLES //\n\nvar DEFAULT_COMPLEX_DTYPE = DEFAULTS.get( 'dtypes.complex_floating_point' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced array over a specified interval.\n*\n* @param {(number|ComplexLike)} start - start of interval\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {Options} [options] - options\n* @param {string} [options.dtype] - output array data type\n* @param {boolean} [options.endpoint=true] - boolean indicating whether to include the `stop` value in the output array\n* @throws {TypeError} first argument must be either a real or complex number\n* @throws {TypeError} second argument must be either a real or complex number\n* @throws {TypeError} third argument must be a nonnegative integer\n* @throws {TypeError} last argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} the output array data type must be a complex number data type or \"generic\" when either `start` or `stop` is a complex number\n* @throws {TypeError} the output array data type must be a real or complex floating-point number data type or \"generic\"\n* @returns {(Array|TypedArray|ComplexArray)} linearly spaced array\n*\n* @example\n* var arr = linspace( 0, 100, 6, {\n*     'dtype': 'generic'\n* });\n* // returns [ 0, 20, 40, 60, 80, 100 ]\n*/\nfunction linspace( start, stop, len ) {\n\tvar opts;\n\tvar ctor;\n\tvar err;\n\tvar out;\n\tvar dt1;\n\tvar dt2;\n\tvar flg;\n\n\tif ( typeof start === 'object' ) {\n\t\tdt1 = dtype( start );\n\t\tif ( dt1 === null ) {\n\t\t\tif ( !isComplexLike( start ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t\t\t}\n\t\t\tdt1 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t} else {\n\t\tdt1 = 'float64';\n\t}\n\tif ( typeof stop === 'object' ) {\n\t\tdt2 = dtype( stop );\n\t\tif ( dt2 === null ) {\n\t\t\tif ( !isComplexLike( stop ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t\t\t}\n\t\t\tdt2 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t} else {\n\t\tdt2 = 'float64';\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\topts = {\n\t\t'endpoint': defaults.endpoint\n\t};\n\tif ( dt1 === dt2 ) {\n\t\topts.dtype = dt1; // one of 'float64' || 'complex64' || 'complex128'\n\t} else {\n\t\t// If dtypes are different, then at least one is a complex number. According to type promotion rules, for all possible dtype permutations, the default output data type should be 'complex128'...\n\t\topts.dtype = DEFAULT_COMPLEX_DTYPE;\n\t}\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, arguments[ 3 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.dtype === 'generic' ) {\n\t\tif ( flg ) {\n\t\t\treturn gencmplx( dt1, start, dt2, stop, len, opts.endpoint );\n\t\t}\n\t\treturn genreal( start, stop, len, opts.endpoint );\n\t}\n\tctor = ctors( opts.dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a real or complex floating-point data type or \"generic\". Option: `%s`.', 'dtype', opts.dtype ) );\n\t}\n\tout = new ctor( len );\n\tif ( opts.dtype === 'complex64' ) {\n\t\ttypedcmplx( reinterpret64( out, 0 ), dt1, start, dt2, stop, len, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( opts.dtype === 'complex128' ) {\n\t\ttypedcmplx( reinterpret128( out, 0 ), dt1, start, dt2, stop, len, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( flg ) {\n\t\tthrow new TypeError( 'invalid arguments. If either of the first two arguments are complex numbers, the output array data type must be a complex number data type or \"generic\".' );\n\t}\n\treturn typedreal( out, start, stop, len, opts.endpoint );\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex64 from '@stdlib/complex/float32';\nimport Complex128 from '@stdlib/complex/float64';\nimport real from '@stdlib/complex/real';\nimport imag from '@stdlib/complex/imag';\nimport realf from '@stdlib/complex/realf';\nimport imagf from '@stdlib/complex/imagf';\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced complex number sequence over a specified interval and assigns results to a provided output array.\n*\n* @private\n* @param {Object} out - output array object\n* @param {ArrayLikeObject} out.data - output array data\n* @param {Array<Function>} out.accessors - array element accessors\n* @param {string} dt1 - start value data type\n* @param {ComplexLike} start - start of interval\n* @param {string} dt2 - stop value data type\n* @param {ComplexLike} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Object} output array object\n*/\nfunction linspace( out, dt1, start, dt2, stop, len, endpoint ) {\n\tvar cmplx;\n\tvar isf32;\n\tvar re1;\n\tvar re2;\n\tvar im1;\n\tvar im2;\n\tvar set;\n\tvar buf;\n\tvar re;\n\tvar im;\n\tvar dr;\n\tvar di;\n\tvar N;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\tisf32 = 0;\n\tif ( dt1 === 'float64' ) {\n\t\tre1 = start;\n\t\tim1 = 0.0;\n\t} else if ( dt1 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre1 = realf( start );\n\t\tim1 = imagf( start );\n\t} else {\n\t\tre1 = real( start );\n\t\tim1 = imag( start );\n\t}\n\tif ( dt2 === 'float64' ) {\n\t\tre2 = stop;\n\t\tim2 = 0.0;\n\t} else if ( dt2 === 'complex64' ) {\n\t\tisf32 += 1;\n\t\tre2 = realf( stop );\n\t\tim2 = imagf( stop );\n\t} else {\n\t\tre2 = real( stop );\n\t\tim2 = imag( stop );\n\t}\n\t// Determine which complex number constructor to use according to type promotion rules:\n\tif ( isf32 === 2 ) {\n\t\tcmplx = Complex64;\n\t} else {\n\t\tcmplx = Complex128;\n\t}\n\t// Cache array object references:\n\tbuf = out.data;\n\tset = out.accessors[ 1 ];\n\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tset( buf, 0, new cmplx( re2, im2 ) );\n\t\t} else {\n\t\t\tset( buf, 0, new cmplx( re1, im1 ) );\n\t\t}\n\t\treturn out;\n\t}\n\tset( buf, 0, new cmplx( re1, im1 ) );\n\n\t// Calculate the increments:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\tdr = ( re2-re1 ) / N;\n\tdi = ( im2-im1 ) / N;\n\n\t// Generate the linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tre = re1 + (dr*i);\n\t\tim = im1 + (di*i);\n\t\tset( buf, i, new cmplx( re, im ) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tset( buf, N, new cmplx( re2, im2 ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a linearly spaced sequence over a specified interval and assigns results to a provided output array.\n*\n* @private\n* @param {Object} out - output array object\n* @param {ArrayLikeObject} out.data - output array data\n* @param {Array<Function>} out.accessors - array element accessors\n* @param {number} start - start of interval\n* @param {number} stop - end of interval\n* @param {NonNegativeInteger} len - length of output array\n* @param {boolean} endpoint - boolean indicating whether to include `stop` in the output array\n* @returns {Object} output array object\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function set( buf, i, v ) {\n*     buf[ i ] = v * 2.0;\n* }\n*\n* var out = new Float64Array( 6 );\n* var obj = {\n*     'data': out,\n*     'accessors': [ null, set ]\n* };\n* linspace( obj, 0, 100, out.length, true );\n*\n* var arr = obj.data;\n* // returns <Float64Array>[ 0.0, 40.0, 80.0, 120.0, 160.0, 200.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* function set( buf, i, v ) {\n*     buf[ i ] = v * 2.0;\n* }\n*\n* var out = new Float64Array( 5 );\n* var obj = {\n*     'data': out,\n*     'accessors': [ null, set ]\n* };\n* linspace( obj, 0, 100, out.length, false );\n*\n* var arr = obj.data;\n* // returns <Float64Array>[ 0.0, 40.0, 80.0, 120.0, 160.0 ]\n*/\nfunction linspace( out, start, stop, len, endpoint ) {\n\tvar buf;\n\tvar set;\n\tvar N;\n\tvar d;\n\tvar i;\n\n\tif ( len === 0 ) {\n\t\treturn out;\n\t}\n\t// Cache array object references:\n\tbuf = out.data;\n\tset = out.accessors[ 1 ];\n\n\t// Set the first value:\n\tif ( len === 1 ) {\n\t\tif ( endpoint ) {\n\t\t\tset( buf, 0, stop );\n\t\t} else {\n\t\t\tset( buf, 0, start );\n\t\t}\n\t\treturn out;\n\t}\n\tset( buf, 0, start );\n\n\t// Calculate the increment:\n\tif ( endpoint ) {\n\t\tN = len - 1;\n\t} else {\n\t\tN = len;\n\t}\n\td = ( stop-start ) / N;\n\n\t// Generate linearly spaced values:\n\tfor ( i = 1; i < N; i++ ) {\n\t\tset( buf, i, start + (d*i) );\n\t}\n\t// Check whether to include the `stop` value in the output array:\n\tif ( endpoint ) {\n\t\tset( buf, N, stop );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport gen from './../../base/logspace';\n\n\n// MAIN //\n\n/**\n* Generates a logarithmically spaced numeric array.\n*\n* @param {number} a - exponent of start value\n* @param {number} b - exponent of end value\n* @param {NonNegativeInteger} [len=10] - length of output array\n* @throws {TypeError} first argument must be numeric\n* @throws {TypeError} second argument must be numeric\n* @throws {TypeError} third argument must be a nonnegative integer\n* @returns {Array} logarithmically spaced numeric array\n*\n* @example\n* var arr = logspace( 0, 2, 6 );\n* // returns [ 1, ~2.5, ~6.31, ~15.85, ~39.81, 100 ]\n*/\nfunction logspace( a, b, len ) {\n\tif ( !isNumber( a ) || isnan( a ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Exponent of start value must be numeric. Value: `%s`.', a ) );\n\t}\n\tif ( !isNumber( b ) || isnan( b ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Exponent of stop value must be numeric. Value: `%s`.', b ) );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tlen = 10;\n\t} else if ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Length must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\treturn gen( a, b, len );\n}\n\n\n// EXPORTS //\n\nexport default logspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isInteger from '@stdlib/math/base/assert/is-integer';\nimport isNegativeZero from '@stdlib/math/base/assert/is-negative-zero';\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport PINF from '@stdlib/constants/float64/pinf';\nimport NINF from '@stdlib/constants/float64/ninf';\nimport FLOAT32_SMALLEST_SUBNORMAL from '@stdlib/constants/float32/smallest-subnormal'; // eslint-disable-line id-length\nimport FLOAT32_MAX_SAFE_INTEGER from '@stdlib/constants/float32/max-safe-integer';\nimport FLOAT32_MIN_SAFE_INTEGER from '@stdlib/constants/float32/min-safe-integer';\nimport INT8_MIN from '@stdlib/constants/int8/min';\nimport INT16_MIN from '@stdlib/constants/int16/min';\nimport INT32_MIN from '@stdlib/constants/int32/min';\nimport UINT8_MAX from '@stdlib/constants/uint8/max';\nimport UINT16_MAX from '@stdlib/constants/uint16/max';\nimport UINT32_MAX from '@stdlib/constants/uint32/max';\n\n\n// FUNCTIONS //\n\n/**\n* Returns the minimum floating-point array data type of the closest \"kind\" necessary for storing a provided scalar.\n*\n* @private\n* @param {number} value - real value\n* @returns {string} array data type\n*/\nfunction minFloatDataType( value ) {\n\tif ( value !== value || value === PINF || value === NINF ) {\n\t\treturn 'float32';\n\t}\n\tif ( isInteger( value ) ) {\n\t\tif ( value >= FLOAT32_MIN_SAFE_INTEGER && value <= FLOAT32_MAX_SAFE_INTEGER ) { // eslint-disable-line max-len\n\t\t\treturn 'float32';\n\t\t}\n\t\treturn 'float64';\n\t}\n\t// Assume that if we are provided a tiny value, we don't want to underflow to zero by storing as `float32`...\n\tif (\n\t\tvalue > -FLOAT32_SMALLEST_SUBNORMAL &&\n\t\tvalue < FLOAT32_SMALLEST_SUBNORMAL\n\t) {\n\t\treturn 'float64';\n\t}\n\t// Any number which reaches this point is less than the maximum single-precision floating-point number, as floating-point format supports a limited number of decimals (e.g., (1.0+EPS)*10**15 => 1000000000000000.2, which is less than ~3.4e38)...\n\treturn 'float32';\n}\n\n\n// MAIN //\n\n/**\n* Returns the minimum array data type of the closest \"kind\" necessary for storing a provided scalar value.\n*\n* @param {*} value - scalar value\n* @returns {string} array data type\n*\n* @example\n* var dt = minDataType( 3.141592653589793 );\n* // returns 'float32'\n*\n* @example\n* var dt = minDataType( 3 );\n* // returns 'uint8'\n*/\nfunction minDataType( value ) {\n\tif ( typeof value !== 'number' ) {\n\t\tif ( isComplexLike( value ) ) {\n\t\t\tif ( minFloatDataType( value.re ) === 'float64' || minFloatDataType( value.im ) === 'float64' ) {\n\t\t\t\treturn 'complex128';\n\t\t\t}\n\t\t\treturn 'complex64';\n\t\t}\n\t\treturn 'generic';\n\t}\n\tif ( value !== value || value === PINF || value === NINF ) {\n\t\treturn 'float32';\n\t}\n\tif ( isInteger( value ) ) {\n\t\tif ( value === 0 && isNegativeZero( value ) ) {\n\t\t\treturn 'float32';\n\t\t}\n\t\tif ( value < 0 ) {\n\t\t\tif ( value >= INT8_MIN ) {\n\t\t\t\treturn 'int8';\n\t\t\t}\n\t\t\tif ( value >= INT16_MIN ) {\n\t\t\t\treturn 'int16';\n\t\t\t}\n\t\t\tif ( value >= INT32_MIN ) {\n\t\t\t\treturn 'int32';\n\t\t\t}\n\t\t\treturn 'float64';\n\t\t}\n\t\tif ( value <= UINT8_MAX ) {\n\t\t\treturn 'uint8';\n\t\t}\n\t\tif ( value <= UINT16_MAX ) {\n\t\t\treturn 'uint16';\n\t\t}\n\t\tif ( value <= UINT32_MAX ) {\n\t\t\treturn 'uint32';\n\t\t}\n\t\treturn 'float64';\n\t}\n\t// Assume that if we are provided a tiny value, we don't want to underflow to zero by storing as `float32`...\n\tif (\n\t\tvalue > -FLOAT32_SMALLEST_SUBNORMAL &&\n\t\tvalue < FLOAT32_SMALLEST_SUBNORMAL\n\t) {\n\t\treturn 'float64';\n\t}\n\t// Any number which reaches this point is less than the maximum single-precision floating-point number, as floating-point format supports a limited number of decimals (e.g., (1.0+EPS)*10**15 => 1000000000000000.2, which is less than ~3.4e38)...\n\treturn 'float32';\n}\n\n\n// EXPORTS //\n\nexport default minDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced array.\n*\n* @module @stdlib/array/linspace\n*\n* @example\n* import linspace from '@stdlib/array/linspace';\n*\n* var arr = linspace( 0, 100, 6 );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*\n* @example\n* import linspace from '@stdlib/array/linspace';\n*\n* var arr = linspace( 0, 100, 5, {\n*     'endpoint': false\n* });\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0 ]\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import linspace from '@stdlib/array/linspace';\n*\n* var arr = new Float64Array( 6 );\n* var out = linspace.assign( 0, 100, out );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n* import linspace from '@stdlib/array/linspace';\n*\n* var arr = new Float64Array( 5 );\n* var out = linspace.assign( 0, 100, out, {\n*     'endpoint': false\n* });\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexLike from '@stdlib/assert/is-complex-like';\nimport { isPrimitive as isNumber } from '@stdlib/assert/is-number';\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\nimport isnan from '@stdlib/math/base/assert/is-nan';\nimport dtype from '@stdlib/complex/dtype';\nimport adtype from './../../dtype';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport arraylike2object from './../../base/arraylike2object';\nimport acccmplx from './accessors_complex.js';\nimport accreal from './accessors_real.js';\nimport typedcmplx from './typed_complex.js';\nimport typedreal from './typed_real.js';\nimport validate from './validate.js';\nimport defaults from './defaults.json';\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced sequence over a specified interval and assigns the results to a provided output array.\n*\n* @param {(number|ComplexLike)} start - start of interval\n* @param {(number|ComplexLike)} stop - end of interval\n* @param {Collection} out - output array\n* @param {Options} [options] - options\n* @param {boolean} [options.endpoint=true] - boolean indicating whether to include the `stop` value in the output array\n* @throws {TypeError} first argument must be either a real or complex number\n* @throws {TypeError} second argument must be either a real or complex number\n* @throws {TypeError} third argument must be an array-like object\n* @throws {TypeError} last argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} the output array data type must be a complex number data type or \"generic\" when either `start` or `stop` is a complex number\n* @returns {Collection} output array\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var out = new Float64Array( 6 );\n* var arr = linspace( 0, 100, out );\n* // returns <Float64Array>[ 0.0, 20.0, 40.0, 60.0, 80.0, 100.0 ]\n*/\nfunction linspace( start, stop, out ) {\n\tvar opts;\n\tvar err;\n\tvar dt1;\n\tvar dt2;\n\tvar flg;\n\tvar odt;\n\tvar o;\n\n\tif ( typeof start === 'object' ) {\n\t\tdt1 = dtype( start );\n\t\tif ( dt1 === null ) {\n\t\t\tif ( !isComplexLike( start ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t\t\t}\n\t\t\tdt1 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( start ) || isnan( start ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either a real or complex number. Value: `%s`.', start ) );\n\t} else {\n\t\tdt1 = 'float64';\n\t}\n\tif ( typeof stop === 'object' ) {\n\t\tdt2 = dtype( stop );\n\t\tif ( dt2 === null ) {\n\t\t\tif ( !isComplexLike( stop ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t\t\t}\n\t\t\tdt2 = 'complex128';\n\t\t}\n\t\tflg = true;\n\t} else if ( !isNumber( stop ) || isnan( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a real or complex number. Value: `%s`.', stop ) );\n\t} else {\n\t\tdt2 = 'float64';\n\t}\n\tif ( !isCollection( out ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an array-like object. Value: `%s`.', out ) );\n\t}\n\topts = {\n\t\t'endpoint': defaults.endpoint\n\t};\n\tif ( arguments.length > 3 ) {\n\t\terr = validate( opts, arguments[ 3 ] );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\todt = adtype( out );\n\tif ( odt === null ) {\n\t\todt = 'generic';\n\t}\n\tif ( odt === 'complex64' ) {\n\t\ttypedcmplx( reinterpret64( out, 0 ), dt1, start, dt2, stop, out.length, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( odt === 'complex128' ) {\n\t\ttypedcmplx( reinterpret128( out, 0 ), dt1, start, dt2, stop, out.length, opts.endpoint ); // eslint-disable-line max-len\n\t\treturn out;\n\t}\n\tif ( flg ) {\n\t\tif ( odt === 'generic' ) {\n\t\t\to = arraylike2object( out );\n\t\t\tacccmplx( o, dt1, start, dt2, stop, out.length, opts.endpoint );\n\t\t\treturn out;\n\t\t}\n\t\tthrow new TypeError( 'invalid arguments. If either of the first two arguments are complex numbers, the output array must be a complex number array or a \"generic\" array-like object.' );\n\t}\n\to = arraylike2object( out );\n\tif ( o.accessorProtocol ) {\n\t\taccreal( o, start, stop, out.length, opts.endpoint );\n\t\treturn out;\n\t}\n\ttypedreal( out, start, stop, out.length, opts.endpoint );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default linspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as contains } from './../../base/assert/contains';\nimport Complex128 from '@stdlib/complex/float64';\nimport Complex64 from '@stdlib/complex/float32';\nimport full from './../../full';\nimport defaults from './../../defaults';\nimport dtypes from './../../dtypes';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( NaN, NaN );\nvar Z64 = new Complex64( NaN, NaN );\nvar DTYPES = dtypes( 'floating_point_and_generic' );\nvar isValidDType = contains( DTYPES );\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.real_floating_point' );\n\n\n// MAIN //\n\n/**\n* Creates an array filled with NaNs and having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a supported data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = nans( 2 );\n* // returns <Float64Array>[ NaN, NaN ]\n*\n* @example\n* var arr = nans( 2, 'float32' );\n* // returns <Float32Array>[ NaN, NaN ]\n*/\nfunction nans( length ) {\n\tvar dtype;\n\tvar value;\n\n\tif ( arguments.length > 1 ) {\n\t\tdtype = arguments[ 1 ];\n\t\tif ( !isValidDType( dtype ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be one of the following: \"%s\". Value: `%s`.', DTYPES.join( '\", \"' ), dtype ) );\n\t\t}\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tif ( dtype === 'complex128' ) {\n\t\tvalue = Z128;\n\t} else if ( dtype === 'complex64' ) {\n\t\tvalue = Z64;\n\t} else {\n\t\tvalue = NaN;\n\t}\n\treturn full( length, value, dtype );\n}\n\n\n// EXPORTS //\n\nexport default nans;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport dtype from './../../dtype';\nimport full from './../../full';\nimport Complex128 from '@stdlib/complex/float64';\nimport Complex64 from '@stdlib/complex/float32';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( NaN, NaN );\nvar Z64 = new Complex64( NaN, NaN );\nvar DTYPES = [ 'float64', 'float32', 'complex128', 'complex64', 'generic' ];\n\n\n// MAIN //\n\n/**\n* Creates an array filled with NaNs and having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a supported data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = nansLike( [ 0.0, 0.0 ] );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var arr = nansLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ NaN, NaN ]\n*/\nfunction nansLike( x ) {\n\tvar dt;\n\tvar v;\n\n\tdt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t\tif ( DTYPES.indexOf( dt ) === -1 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be one of the following: \"%s\". Value: `%s`.', DTYPES.join( '\", \"' ), dt ) );\n\t\t}\n\t} else if ( DTYPES.indexOf( dt ) === -1 ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be one of the following data types: \"%s\". Value: `%s`.', DTYPES.join( '\", \"' ), dt ) );\n\t}\n\tif ( dt === 'complex128' ) {\n\t\tv = Z128;\n\t} else if ( dt === 'complex64' ) {\n\t\tv = Z64;\n\t} else {\n\t\tv = NaN;\n\t}\n\treturn full( x.length, v, dt );\n}\n\n\n// EXPORTS //\n\nexport default nansLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport NEXT_DTYPES from './next_dtypes.json';\n\n\n// FUNCTIONS //\n\n/**\n* Generates a table.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( NEXT_DTYPES );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tout[ dtypes[i] ] = NEXT_DTYPES[ dtypes[i] ];\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns the next larger array data type of the same kind.\n*\n* @param {string} [dtype] - array data type\n* @returns {(Object|string|integer|null)} next larger data type(s) or null\n*\n* @example\n* var dt = nextDataType( 'float32' );\n* // returns 'float64'\n*/\nfunction nextDataType( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateTable();\n\t}\n\tif ( hasOwnProp( NEXT_DTYPES, dtype ) ) {\n\t\treturn NEXT_DTYPES[ dtype ];\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default nextDataType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex128 from '@stdlib/complex/float64';\nimport Complex64 from '@stdlib/complex/float32';\nimport full from './../../full';\nimport defaults from './../../defaults';\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( 1.0, 0.0 );\nvar Z64 = new Complex64( 1.0, 0.0 );\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.default' );\n\n\n// MAIN //\n\n/**\n* Creates an array filled with ones and having a specified length.\n*\n* @param {NonNegativeInteger} length - array length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = ones( 2 );\n* // returns <Float64Array>[ 1.0, 1.0 ]\n*\n* @example\n* var arr = ones( 2, 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction ones( length ) {\n\tvar dtype;\n\tvar value;\n\n\tif ( arguments.length > 1 ) {\n\t\tdtype = arguments[ 1 ];\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tif ( dtype === 'complex128' ) {\n\t\tvalue = Z128;\n\t} else if ( dtype === 'complex64' ) {\n\t\tvalue = Z64;\n\t} else {\n\t\tvalue = 1;\n\t}\n\treturn full( length, value, dtype );\n}\n\n\n// EXPORTS //\n\nexport default ones;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport dtype from './../../dtype';\nimport full from './../../full';\nimport Complex128 from '@stdlib/complex/float64';\nimport Complex64 from '@stdlib/complex/float32';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar Z128 = new Complex128( 1.0, 0.0 );\nvar Z64 = new Complex64( 1.0, 0.0 );\n\n\n// MAIN //\n\n/**\n* Creates an array filled with ones and having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = onesLike( [ 0.0, 0.0 ] );\n* // returns [ 1.0, 1.0 ]\n*\n* @example\n* var arr = onesLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ 1.0, 1.0 ]\n*/\nfunction onesLike( x ) {\n\tvar dt;\n\tvar v;\n\n\tdt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t}\n\tif ( dt === 'complex128' ) {\n\t\tv = Z128;\n\t} else if ( dt === 'complex64' ) {\n\t\tv = Z64;\n\t} else {\n\t\tv = 1.0;\n\t}\n\treturn full( x.length, v, dt );\n}\n\n\n// EXPORTS //\n\nexport default onesLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Int16Array from './../../int16';\nimport Int32Array from './../../int32';\nimport Int8Array from './../../int8';\nimport Uint16Array from './../../uint16';\nimport Uint32Array from './../../uint32';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray,\n\t'complex64': Complex64Array,\n\t'complex128': Complex128Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns a typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.highWaterMark] - maximum total memory which can be allocated\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'highWaterMark': 1024\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'highWaterMark' ) ) {\n\t\topts.highWaterMark = options.highWaterMark;\n\t\tif ( !isNonNegativeInteger( opts.highWaterMark ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'highWaterMark', opts.highWaterMark ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Initializes a cache for pooled typed array buffers.\n*\n* @private\n* @param {NonNegativeInteger} n - base-2 logarithm of the maximum typed array size\n* @returns {ArrayArray} initialized cache\n*/\nfunction pool( n ) {\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tfor ( i = 0; i < n+1; i++ ) {\n\t\tout.push( [] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default pool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isTypedArrayLike from '@stdlib/assert/is-typed-array-like';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isComplex64Array from '@stdlib/assert/is-complex64array';\nimport isComplex128Array from '@stdlib/assert/is-complex128array';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport ctors from './../../typed-ctors';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport accessors from './../../base/accessors';\nimport adtype from './../../dtype';\nimport ARRAY_DEFAULTS from './../../defaults';\nimport format from '@stdlib/string/format';\nimport ArrayBuffer from './../../buffer';\nimport ceil from '@stdlib/math/base/special/ceil';\nimport floor from '@stdlib/math/base/special/floor';\nimport ceil2 from '@stdlib/math/base/special/ceil2';\nimport log2 from '@stdlib/math/base/special/log2';\nimport min from '@stdlib/math/base/special/min';\nimport defaults from './defaults.js';\nimport validate from './validate.js';\nimport createPool from './pool.js';\nimport BYTES_PER_ELEMENT from './bytes_per_element.json';\n\n\n// VARIABLES //\n\nvar DEFAULT_DTYPE = ARRAY_DEFAULTS.get( 'dtypes.default' );\nvar Complex64Array = ctors( 'complex64' );\nvar Complex128Array = ctors( 'complex128' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an array is a single-precision complex floating-point number array.\n*\n* @private\n* @param {Collection} arr - input array\n* @returns {boolean} boolean indicating whether an input array is a single-precision complex floating-point number array\n*/\nfunction isCmplx64Array( arr ) {\n\treturn ( arr instanceof Complex64Array );\n}\n\n/**\n* Tests whether an array is a double-precision complex floating-point number array.\n*\n* @private\n* @param {Collection} arr - input array\n* @returns {boolean} boolean indicating whether an input array is a double-precision complex floating-point number array\n*/\nfunction isCmplx128Array( arr ) {\n\treturn ( arr instanceof Complex128Array );\n}\n\n\n// MAIN //\n\n/**\n* Creates a typed array pool.\n*\n* @param {Options} [options] - pool options\n* @param {NonNegativeInteger} [options.highWaterMark] - maximum total memory which can be allocated\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} allocator\n*\n* @example\n* var typedarraypool = factory();\n*\n* // Allocate an array of doubles:\n* var arr = typedarraypool( 5, 'float64' );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* arr[ 0 ] = 3.14;\n* arr[ 1 ] = 3.14;\n*\n* // ...\n*\n* // Free the allocated memory to be used in a future allocation:\n* typedarraypool.free( arr );\n*/\nfunction factory( options ) {\n\tvar nbytes;\n\tvar pool;\n\tvar opts;\n\tvar err;\n\n\topts = defaults();\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tpool = createPool( ceil( log2( opts.highWaterMark ) ) );\n\tnbytes = 0;\n\n\tsetReadOnly( malloc, 'malloc', malloc ); // circular reference\n\tsetReadOnly( malloc, 'calloc', calloc );\n\tsetReadOnly( malloc, 'free', free );\n\tsetReadOnly( malloc, 'clear', clear );\n\tsetReadOnly( malloc, 'highWaterMark', opts.highWaterMark );\n\tsetReadOnlyAccessor( malloc, 'nbytes', getBytes );\n\n\treturn malloc;\n\n\t/**\n\t* Returns the number of allocated bytes.\n\t*\n\t* @private\n\t* @returns {NonNegativeInteger} number of allocated bytes\n\t*/\n\tfunction getBytes() {\n\t\treturn nbytes;\n\t}\n\n\t/**\n\t* Returns an array buffer.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} n - number of bytes\n\t* @returns {(ArrayBuffer|null)} array buffer or null\n\t*/\n\tfunction arraybuffer( n ) {\n\t\tvar buf;\n\t\tvar i;\n\n\t\t// Convert the number of bytes to an index in our pool table:\n\t\ti = log2( n );\n\n\t\t// If we already have an available array buffer, use it...\n\t\tif ( i < pool.length && pool[ i ].length ) {\n\t\t\treturn pool[ i ].pop();\n\t\t}\n\t\t// Before allocating a new array buffer, ensure that we have not exceeded the maximum number of bytes we are allowed to allocate...\n\t\tif ( nbytes+n > opts.highWaterMark ) {\n\t\t\treturn null;\n\t\t}\n\t\tbuf = new ArrayBuffer( n );\n\n\t\t// Update the running counter of allocated bytes:\n\t\tnbytes += n;\n\n\t\treturn buf;\n\t}\n\n\t/**\n\t* Returns a typed array.\n\t*\n\t* @private\n\t* @param {Function} ctor - typed array constructor\n\t* @param {NonNegativeInteger} len - view length\n\t* @param {string} dtype - data type\n\t* @returns {(TypedArray|null)} typed array or null\n\t*/\n\tfunction typedarray( ctor, len, dtype ) {\n\t\tvar buf;\n\t\tif ( len === 0 ) {\n\t\t\treturn new ctor( 0 );\n\t\t}\n\t\tbuf = arraybuffer( ceil2( len )*BYTES_PER_ELEMENT[ dtype ] );\n\t\tif ( buf === null ) {\n\t\t\treturn buf;\n\t\t}\n\t\treturn new ctor( buf, 0, len );\n\t}\n\n\t/**\n\t* Returns an uninitialized typed array.\n\t*\n\t* ## Notes\n\t*\n\t* -   Memory is **not** initialized.\n\t* -   Memory is lazily allocated.\n\t* -   If the function returns `null`, the function was unable to allocate a new typed array from the typed array pool (most likely due to insufficient memory).\n\t*\n\t* @private\n\t* @param {(NonNegativeInteger|Collection)} [arg] - an array length or an array-like object\n\t* @param {string} [dtype=\"float64\"] - data type\n\t* @throws {TypeError} must provide a valid array length or an array-like object\n\t* @throws {TypeError} must provide a recognized data type\n\t* @returns {(TypedArray|null)} typed array or null\n\t*/\n\tfunction malloc() {\n\t\tvar nargs;\n\t\tvar dtype;\n\t\tvar ctor;\n\t\tvar arr;\n\t\tvar out;\n\t\tvar set;\n\t\tvar get;\n\t\tvar len;\n\t\tvar i;\n\n\t\tnargs = arguments.length;\n\t\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\t\tnargs -= 1;\n\t\t\tdtype = arguments[ nargs ];\n\t\t} else {\n\t\t\tdtype = DEFAULT_DTYPE;\n\t\t}\n\t\tctor = ctors( dtype );\n\t\tif ( ctor === null ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t\t}\n\t\tif ( nargs <= 0 ) {\n\t\t\treturn new ctor( 0 );\n\t\t}\n\t\t// Check if provided a typed array length...\n\t\tif ( isNonNegativeInteger( arguments[ 0 ] ) ) {\n\t\t\treturn typedarray( ctor, arguments[ 0 ], dtype );\n\t\t}\n\t\t// Check if provided an array-like object containing data elements...\n\t\tif ( isCollection( arguments[ 0 ] ) ) {\n\t\t\tarr = arguments[ 0 ];\n\t\t\tlen = arr.length;\n\t\t\tif ( isComplex128Array( arr ) ) {\n\t\t\t\tarr = reinterpret128( arr, 0 );\n\t\t\t} else if ( isComplex64Array( arr ) ) {\n\t\t\t\tarr = reinterpret64( arr, 0 );\n\t\t\t} else if ( /^complex/.test( dtype ) ) {\n\t\t\t\t// Assume we've been provided an array of interleaved real and imaginary components...\n\t\t\t\tlen /= 2;\n\t\t\t}\n\t\t\tout = typedarray( ctor, len, dtype );\n\t\t\tif ( out === null ) {\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\tif ( isCmplx128Array( out ) || isCmplx64Array( out ) ) {\n\t\t\t\tout.set( arr );\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\t// Wrap the arrays in order to account for the possibility that `arr` is a complex number array. As we don't prohibit other \"unsafe\" casts (e.g., providing a `Float64Array` and specifying a `dtype` of `uint8`), we don't prohibit providing a complex number array and specifying a real `dtype`. The results will probably be unexpected/gibberish, but I am not sure we should be overly pedantic in ensuring users don't do ill-advised things...\n\t\t\tget = accessors( adtype( arr ) ).accessors[ 0 ];\n\t\t\tset = accessors( dtype ).accessors[ 1 ];\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tset( out, i, get( arr, i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array length or an array-like object. Value: `%s`.', arguments[ 0 ] ) );\n\t}\n\n\t/**\n\t* Returns a zero-initialized typed array.\n\t*\n\t* ## Notes\n\t*\n\t* -   If the function returns `null`, the function was unable to allocate a new typed array from the typed array pool (most likely due to insufficient memory).\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} [len=0] - array length\n\t* @param {string} [dtype=\"float64\"] - data type\n\t* @throws {TypeError} must provide a valid array length\n\t* @throws {TypeError} must provide a recognized data type\n\t* @returns {(TypedArray|null)} typed array or null\n\t*/\n\tfunction calloc() {\n\t\tvar nargs;\n\t\tvar out;\n\t\tvar tmp;\n\t\tvar i;\n\n\t\tnargs = arguments.length;\n\t\tif ( nargs === 0 ) {\n\t\t\tout = malloc();\n\t\t} else if ( nargs === 1 ) {\n\t\t\tout = malloc( arguments[ 0 ] );\n\t\t} else {\n\t\t\tout = malloc( arguments[ 0 ], arguments[ 1 ] );\n\t\t}\n\t\tif ( out !== null ) {\n\t\t\t// Initialize the memory...\n\t\t\tif ( isCmplx128Array( out ) ) {\n\t\t\t\ttmp = reinterpret128( out, 0 );\n\t\t\t} else if ( isCmplx64Array( out ) ) {\n\t\t\t\ttmp = reinterpret64( out, 0 );\n\t\t\t} else {\n\t\t\t\ttmp = out;\n\t\t\t}\n\t\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\t\ttmp[ i ] = 0.0;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Frees a typed array or typed array buffer.\n\t*\n\t* ## Notes\n\t*\n\t* -   Implicitly, we support providing non-internally allocated arrays and array buffer (e.g., \"freeing\" a typed array allocated in userland); however, the freed array buffer is likely to have excess capacity when compared to other members in its pool.\n\t*\n\t* @private\n\t* @param {(TypedArray|ArrayBuffer)} buf - typed array or array buffer to free\n\t* @throws {TypeError} must provide a typed array or typed array buffer\n\t* @returns {boolean} boolean indicating whether the typed array or array buffer was successfully freed\n\t*/\n\tfunction free( buf ) {\n\t\tvar n;\n\t\tvar p;\n\t\tvar i;\n\t\tif ( isTypedArrayLike( buf ) && buf.buffer ) {\n\t\t\tbuf = buf.buffer;\n\t\t} else if ( !isArrayBuffer( buf ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array or ArrayBuffer. Value: `%s`.', buf ) );\n\t\t}\n\t\tif ( buf.byteLength > 0 ) {\n\t\t\tn = floor( log2( buf.byteLength ) );\n\n\t\t\t// Prohibit \"freeing\" array buffers which would potentially allow users to circumvent high water mark limits:\n\t\t\tn = min( pool.length-1, n );\n\n\t\t\t// Ensure that we do not attempt to free the same buffer more than once...\n\t\t\tp = pool[ n ];\n\t\t\tfor ( i = 0; i < p.length; i++ ) {\n\t\t\t\tif ( p[ i ] === buf ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add the buffer to our pool of free buffers:\n\t\t\tp.push( buf );\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t* Clears the typed array pool allowing garbage collection of previously allocated (and currently free) array buffers.\n\t*\n\t* @private\n\t*/\n\tfunction clear() {\n\t\tvar i;\n\t\tfor ( i = 0; i < pool.length; i++ ) {\n\t\t\tpool[ i ].length = 0;\n\t\t}\n\t\tnbytes = 0;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*\n* @example\n* var o = defaults();\n* // returns {...}\n*/\nfunction defaults() {\n\treturn {\n\t\t'highWaterMark': 9007199254740992\n\t};\n}\n\n\n// EXPORTS //\n\nexport default defaults;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport factory from './factory.js';\n\n\n// MAIN //\n\n/**\n* Returns an uninitialized typed array.\n*\n* ## Notes\n*\n* -   Memory is **not** initialized.\n* -   Memory is lazily allocated.\n* -   If the function returns `null`, the function was unable to allocate a new typed array from the typed array pool (most likely due to insufficient memory).\n*\n* @name typedarraypool\n* @type {Function}\n* @param {(NonNegativeInteger|ArrayLikeObject)} [arg] - an array length or an array-like object\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a valid array length or an array-like object\n* @throws {TypeError} must provide a recognized data type\n* @returns {(TypedArray|null)} typed array or null\n*\n* @example\n* // Allocate an array of doubles:\n* var arr = typedarraypool( 5, 'float64' );\n* // e.g., returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* arr[ 0 ] = 3.14;\n* arr[ 1 ] = 3.14;\n*\n* // ...\n*\n* // Free the allocated memory to be used in a future allocation:\n* typedarraypool.free( arr );\n*/\nvar typedarraypool = factory();\n\n\n// EXPORTS //\n\nexport default typedarraypool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array pool.\n*\n* @module @stdlib/array/pool\n*\n* @example\n* import typedarraypool from '@stdlib/array/pool';\n*\n* // Allocate an array of doubles:\n* var arr = typedarraypool( 5, 'float64' );\n* // returns <Float64Array>[ 0.0, 0.0, 0.0, 0.0, 0.0 ]\n*\n* arr[ 0 ] = 3.14;\n* arr[ 1 ] = 3.14;\n*\n* // ...\n*\n* // Free the allocated memory to be used in a future allocation:\n* typedarraypool.free( arr );\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport PROMOTION_RULES from './promotion_rules.json';\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of promotion rules.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( PROMOTION_RULES );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = PROMOTION_RULES[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns the array data type with the smallest size and closest \"kind\" to which array data types can be safely cast.\n*\n* @param {string} [dtype1] - array data type\n* @param {string} [dtype2] - array data type\n* @returns {(Object|integer|string|null)} promotion rule(s) or null\n*\n* @example\n* var table = promotionRules();\n* // returns {...}\n*\n* @example\n* var dt = promotionRules( 'float32', 'uint32' );\n* // returns 'float64'\n*\n* @example\n* var dt = promotionRules( 'float32', 'foo' );\n* // returns null\n*/\nfunction promotionRules( dtype1, dtype2 ) {\n\tvar o;\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( hasOwnProp( PROMOTION_RULES, dtype1 ) ) {\n\t\to = PROMOTION_RULES[ dtype1 ];\n\t\tif ( hasOwnProp( o, dtype2 ) ) {\n\t\t\treturn o[ dtype2 ];\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default promotionRules;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Int16Array from './../../int16';\nimport Int32Array from './../../int32';\nimport Int8Array from './../../int8';\nimport Uint16Array from './../../uint16';\nimport Uint32Array from './../../uint32';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\n\n\n// MAIN //\n\nvar ctors = {\n\t'Float64Array': Float64Array,\n\t'Float32Array': Float32Array,\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array,\n\t'Int16Array': Int16Array,\n\t'Uint16Array': Uint16Array,\n\t'Int8Array': Int8Array,\n\t'Uint8Array': Uint8Array,\n\t'Uint8ClampedArray': Uint8ClampedArray,\n\t'Complex64Array': Complex64Array,\n\t'Complex128Array': Complex128Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert/is-array';\nimport ctors from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized typed array.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|TypedArray)} value or typed array\n*\n* @example\n* import parseJSON from '@stdlib/utils/parse-json';\n*\n* var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\n*\n* var arr = parseJSON( str, reviveTypedArray );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*/\nfunction reviveTypedArray( key, value ) {\n\tvar ctor;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisArray( value.data )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\treturn new ctor( value.data );\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default reviveTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport SAFE_CASTS from './safe_casts.json';\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of safe casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of safe casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAFE_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAFE_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of array data types to which a provided array data type can be safely cast.\n*\n* @param {string} [dtype] - array data type\n* @returns {(Object|StringArray|null)} list of array data types or null\n*\n* @example\n* var list = safeCasts( 'float32' );\n* // returns [...]\n*/\nfunction safeCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default safeCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport SAME_KIND_CASTS from './same_kind_casts.json';\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// FUNCTIONS //\n\n/**\n* Generates a full table of same \"kind\" casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateFullTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAME_KIND_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAME_KIND_CASTS[ dt1 ];\n\t\ttmp = {};\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\ttmp[ dt2 ] = o[ dt2 ];\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n/**\n* Generates a table of same \"kind\" casts for each array data type.\n*\n* @private\n* @returns {Object} table\n*/\nfunction generateTable() {\n\tvar dtypes;\n\tvar ntypes;\n\tvar out;\n\tvar tmp;\n\tvar dt1;\n\tvar dt2;\n\tvar o;\n\tvar j;\n\tvar i;\n\n\tout = {};\n\tdtypes = objectKeys( SAME_KIND_CASTS );\n\tntypes = dtypes.length;\n\tfor ( i = 0; i < ntypes; i++ ) {\n\t\tdt1 = dtypes[ i ];\n\t\to = SAME_KIND_CASTS[ dt1 ];\n\t\ttmp = [];\n\t\tfor ( j = 0; j < ntypes; j++ ) {\n\t\t\tdt2 = dtypes[ j ];\n\t\t\tif ( o[ dt2 ] === 1 ) {\n\t\t\t\ttmp.push( dt2 );\n\t\t\t}\n\t\t}\n\t\tout[ dt1 ] = tmp;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Returns a list of array data types to which a provided array data type can be safely cast or cast within the same \"kind\".\n*\n* @param {string} [dtype] - array data type\n* @returns {(Object|StringArray|null)} list of array data types or null\n*\n* @example\n* var list = sameKindCasts( 'float32' );\n* // returns [...]\n*/\nfunction sameKindCasts( dtype ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn generateFullTable();\n\t}\n\tif ( TABLE === void 0 ) {\n\t\t// Lazily generate table...\n\t\tTABLE = generateTable();\n\t}\n\tif ( hasOwnProp( TABLE, dtype ) ) {\n\t\treturn TABLE[ dtype ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default sameKindCasts;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport format from '@stdlib/string/format';\n\n\n// FUNCTIONS //\n\n/**\n* Recursively (and eagerly) attempts to resolve nested array dimensions.\n*\n* @private\n* @param {Array} shape - output array\n* @param {ArrayLikeObject} arr - array\n* @returns {Array} shape array\n*/\nfunction recurse( shape, arr ) {\n\tvar v = arr[ 0 ];\n\tif ( isArrayLikeObject( v ) ) {\n\t\tshape.push( v.length );\n\t\trecurse( shape, v );\n\t}\n\treturn shape;\n}\n\n/**\n* Recursively verifies that all nested arrays have consistent dimensions.\n*\n* @private\n* @param {PositiveInteger} ndims - number of dimensions\n* @param {Array} shape - shape array\n* @param {NonNegativeInteger} d - dimension\n* @param {ArrayLikeObject} arr - array element to verify\n* @param {boolean} flg - boolean indicating whether to continue recursing\n* @returns {NonNegativeInteger} number of consistent dimensions\n*/\nfunction check( ndims, shape, d, arr, flg ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\n\t// Get the size of the current dimension:\n\tlen = shape[ d ];\n\n\t// Ensure that each array element is an array of the same size:\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tv = arr[ i ];\n\n\t\t// If the array element is not an array or is not the same size, we have found an inconsistent dimension:\n\t\tif ( !isArrayLikeObject( v ) || v.length !== len ) {\n\t\t\t// `d` is one more than the index of the last consistent dimension and thus equal to the number of consistent dimensions:\n\t\t\treturn d;\n\t\t}\n\t\t// Recursively examine nested elements:\n\t\tif ( flg ) {\n\t\t\tv = check( ndims, shape, d+1, v, d+1 < ndims-1 );\n\t\t\tif ( v < ndims ) {\n\t\t\t\t// Propagate the number of consistent dimensions up the recursion chain...\n\t\t\t\treturn v;\n\t\t\t}\n\t\t}\n\t}\n\treturn ndims;\n}\n\n\n// MAIN //\n\n/**\n* Determines (nested) array dimensions.\n*\n* @param {ArrayLikeObject} arr - array\n* @throws {TypeError} must provide an array\n* @returns {Array} array shape\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3, 3 ]\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8 ] ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*\n* @example\n* var arr = [ [ 1, 2, 3 ], [ 4, 5, 6 ], null ];\n*\n* var shape = arrayShape( arr );\n* // returns [ 3 ]\n*/\nfunction arrayShape( arr ) {\n\tvar shape;\n\tvar ndims;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array-like object. Value: `%s`.', arr ) );\n\t}\n\t// Initialize the shape/dimensions array:\n\tshape = [ arr.length ];\n\n\t// Eagerly determine array dimensions:\n\trecurse( shape, arr );\n\tndims = shape.length;\n\n\t// Check that all array element dimensions are consistent:\n\tif ( ndims > 1 ) {\n\t\t// If `check()` returns a value less than `ndims`, trim off the inconsistent dimensions:\n\t\tshape.length = check( ndims, shape, 1, arr, ndims > 2 );\n\t}\n\treturn shape;\n}\n\n\n// EXPORTS //\n\nexport default arrayShape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof SharedArrayBuffer === 'function' ) ? SharedArrayBuffer : null; // eslint-disable-line stdlib/require-globals, no-undef\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor returning an object used to represent a generic, fixed-length raw binary data buffer which can be used to create views of shared memory.\n*\n* @module @stdlib/array/shared-buffer\n*\n* @example\n* import ctor from '@stdlib/array/shared-buffer';\n*\n* var buf;\n* try {\n*     buf = new ctor( 10 );\n*     // returns <SharedArrayBuffer>\n* } catch ( err ) {\n*     console.log( 'Environment does not support SharedArrayBuffers.' );\n* }\n*/\n\n// MODULES //\n\nimport hasSharedArrayBufferSupport from '@stdlib/assert/has-sharedarraybuffer-support'; // eslint-disable-line id-length\nimport builtin from './main.js';\nimport polyfill from './polyfill.js';\n\n\n// MAIN //\n\nvar ctor;\nif ( hasSharedArrayBufferSupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nexport default ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Constructor returning an object used to represent a generic, fixed-length raw binary data buffer which can be used to create views of shared memory.\n*\n* @param {NonNegativeInteger} size - number of bytes\n* @throws {Error} not implemented\n*/\nfunction polyfill( size ) { // eslint-disable-line no-unused-vars\n\tthrow new Error( 'not supported. The current environment does not support SharedArrayBuffers, and, unfortunately, SharedArrayBuffers cannot be polyfilled. For shared memory applications, upgrade your runtime environment to one which supports SharedArrayBuffers.' );\n}\n\n\n// EXPORTS //\n\nexport default polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isObject from '@stdlib/assert/is-plain-object';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which repeatedly iterates over each element in an array-like object.\n*\n* @param {Collection} src - input value\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {integer} [options.dir=1] - iteration direction\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction circarray2iterator( src ) {\n\tvar thisArg;\n\tvar options;\n\tvar count;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\topts = {\n\t\t'iter': 1e308, // ~infinity\n\t\t'dir': 1       // left to right iteration\n\t};\n\tif ( arguments.length > 1 ) {\n\t\tif ( isObject( arguments[ 1 ] ) ) {\n\t\t\toptions = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\t\topts.iter = options.iter;\n\t\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'dir' ) ) {\n\t\t\t\topts.dir = options.dir;\n\t\t\t\tif ( options.dir !== 1 && options.dir !== -1 ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either `1` or `-1`. Option: `%s`.', 'dir', options.dir ) );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a function or an options object. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tif ( opts.dir === 1 ) {\n\t\t\ti = -1;\n\t\t\tsetReadOnly( iter, 'next', next1a );\n\t\t} else {\n\t\t\ti = src.length;\n\t\t\tsetReadOnly( iter, 'next', next1b );\n\t\t}\n\t} else if ( opts.dir === 1 ) {\n\t\ti = -1;\n\t\tsetReadOnly( iter, 'next', next2a );\n\t} else {\n\t\ti = src.length;\n\t\tsetReadOnly( iter, 'next', next2b );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn circarray2iterator( src, opts, fcn, thisArg );\n\t\t}\n\t\treturn circarray2iterator( src, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default circarray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in an array-like object.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = array2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction array2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn array2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn array2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default array2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each element in an array-like object.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with iterating from left to right is when elements are pushed onto the beginning (end) of an array. In other words, iterating from left to right combined with `[].push()` is consistent with iterating from right to left combined with `[].unshift()`.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = array2iteratorRight( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 2\n*\n* // ...\n*/\nfunction array2iteratorRight( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar len;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\tlen = src.length;\n\ti = len;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\tif ( FLG || i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\tif ( FLG || i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn array2iteratorRight( src, fcn, thisArg );\n\t\t}\n\t\treturn array2iteratorRight( src );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default array2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from './../../int8';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\nimport Int16Array from './../../int16';\nimport Uint16Array from './../../uint16';\nimport Int32Array from './../../int32';\nimport Uint32Array from './../../uint32';\nimport Float32Array from './../../float32';\nimport Float64Array from './../../float64';\nimport Complex64Array from './../../complex64';\nimport Complex128Array from './../../complex128';\n\n\n// MAIN //\n\nvar CTORS = [\n\t[ Float64Array, 'Float64Array' ],\n\t[ Float32Array, 'Float32Array' ],\n\t[ Int32Array, 'Int32Array' ],\n\t[ Uint32Array, 'Uint32Array' ],\n\t[ Int16Array, 'Int16Array' ],\n\t[ Uint16Array, 'Uint16Array' ],\n\t[ Int8Array, 'Int8Array' ],\n\t[ Uint8Array, 'Uint8Array' ],\n\t[ Uint8ClampedArray, 'Uint8ClampedArray' ],\n\t[ Complex64Array, 'Complex64Array' ],\n\t[ Complex128Array, 'Complex128Array' ]\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport instanceOf from '@stdlib/assert/instance-of';\nimport ctorName from '@stdlib/utils/constructor-name';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport CTORS from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns the typed array type.\n*\n* @private\n* @param {TypedArray} arr - typed array\n* @returns {(string|void)} typed array type\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( 5 );\n* var str = typeName( arr );\n* // returns 'Float64Array'\n*/\nfunction typeName( arr ) {\n\tvar v;\n\tvar i;\n\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( arr, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( arr ) {\n\t\tv = ctorName( arr );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\tarr = getPrototypeOf( arr );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isTypedArray from '@stdlib/assert/is-typed-array';\nimport isComplexTypedArray from '@stdlib/assert/is-complex-typed-array';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport format from '@stdlib/string/format';\nimport typeName from './type.js';\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a typed array.\n*\n* ## Notes\n*\n* -   We build a JSON object representing a typed array similar to how Node.js `Buffer` objects are represented. See [Buffer][1].\n*\n* [1]: https://nodejs.org/api/buffer.html#buffer_buf_tojson\n*\n* @param {TypedArray} arr - typed array to serialize\n* @throws {TypeError} first argument must be a typed array\n* @returns {Object} JSON representation\n*\n* @example\n* import Float64Array from '@stdlib/array/float64';\n*\n* var arr = new Float64Array( [ 5.0, 3.0 ] );\n* var json = typedarray2json( arr );\n* // returns { 'type': 'Float64Array', 'data': [ 5.0, 3.0 ] }\n*/\nfunction typedarray2json( arr ) {\n\tvar data;\n\tvar out;\n\tvar i;\n\n\tif ( isTypedArray( arr ) ) {\n\t\tdata = arr;\n\t} else if ( isComplexTypedArray( arr ) ) {\n\t\tif ( arr.BYTES_PER_ELEMENT === 8 ) {\n\t\t\tdata = reinterpret64( arr, 0 );\n\t\t} else { // arr.BYTES_PER_ELEMENT === 16\n\t\t\tdata = reinterpret128( arr, 0 );\n\t\t}\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a typed array. Value: `%s`.', arr ) );\n\t}\n\tout = {\n\t\t'type': typeName( arr ),\n\t\t'data': []\n\t};\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tout.data.push( data[ i ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default typedarray2json;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in a sparse array-like object.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = sparsearray2iterator( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 4\n*/\nfunction sparsearray2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar len;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tlen = src.length;\n\t\ti += 1;\n\t\twhile ( i < len && get( src, i ) === void 0 ) {\n\t\t\ti += 1;\n\t\t}\n\t\tif ( i >= len ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar len;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tlen = src.length;\n\t\ti += 1;\n\t\twhile ( i < len && get( src, i ) === void 0 ) {\n\t\t\ti += 1;\n\t\t}\n\t\tif ( i >= len ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn sparsearray2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn sparsearray2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default sparsearray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each element in a sparse array-like object.\n*\n* ## Notes\n*\n* -   For dynamic array resizing, the only behavior made intentionally consistent with iterating from left to right is when elements are pushed onto the beginning (end) of an array. In other words, iterating from left to right combined with `[].push()` is consistent with iterating from right to left combined with `[].unshift()`.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = sparsearray2iteratorRight( [ 1, , 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 4\n*\n* v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 1\n*/\nfunction sparsearray2iteratorRight( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar len;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\tlen = src.length;\n\ti = len;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\twhile ( i >= 0 && get( src, i ) === void 0 ) {\n\t\t\ti -= 1;\n\t\t}\n\t\tif ( i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti += src.length - len - 1; // accounts for a dynamic array\n\t\tlen = src.length;\n\t\twhile ( i >= 0 && get( src, i ) === void 0 ) {\n\t\t\ti -= 1;\n\t\t}\n\t\tif ( i < 0 ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn sparsearray2iteratorRight( src, fcn, thisArg );\n\t\t}\n\t\treturn sparsearray2iteratorRight( src );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default sparsearray2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over elements in an array-like object according to specified stride parameters.\n*\n* @param {NonNegativeInteger} N - number of values to iterate\n* @param {Collection} src - input value\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be an integer\n* @throws {TypeError} fourth argument must be a nonnegative integer\n* @throws {TypeError} fifth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var values = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\n*\n* var N = 4;\n* var stride = -2;\n* var offset = 6;\n*\n* var iter = stridedarray2iterator( N, values, stride, offset );\n*\n* var v = iter.next().value;\n* // returns 7\n*\n* v = iter.next().value;\n* // returns 5\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction stridedarray2iterator( N, src, stride, offset ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar idx;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isNonNegativeInteger( N ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t}\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tif ( !isInteger( stride ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', stride ) );\n\t}\n\tif ( !isNonNegativeInteger( offset ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a nonnegative integer. Value: `%s`.', offset ) );\n\t}\n\tif ( arguments.length > 4 ) {\n\t\tfcn = arguments[ 4 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 5 ];\n\t}\n\tidx = offset;\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = fcn.call( thisArg, get( src, idx ), idx, i, src );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i >= N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = get( src, idx );\n\t\tidx += stride;\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn stridedarray2iterator( N, src, stride, offset, fcn, thisArg ); // eslint-disable-line max-len\n\t\t}\n\t\treturn stridedarray2iterator( N, src, stride, offset );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default stridedarray2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in an array-like object view.\n*\n* @param {Collection} src - input value\n* @param {integer} [begin=0] - starting index (inclusive)\n* @param {integer} [end=src.length] - ending index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be either an integer (starting index) or a function\n* @throws {TypeError} third argument must be either an integer (ending index) or a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = arrayview2iterator( [ 1, 2, 3, 4 ], 1, 3 );\n*\n* var v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction arrayview2iterator( src ) {\n\tvar thisArg;\n\tvar begin;\n\tvar nargs;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar end;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 1 ) {\n\t\tbegin = 0;\n\t\tend = src.length;\n\t} else if ( nargs === 2 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 1 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t}\n\t\tend = src.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tthisArg = arguments[ 2 ];\n\t\t} else if ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = arguments[ 2 ];\n\t\t}\n\t} else { // nargs >= 4\n\t\tbegin = arguments[ 1 ];\n\t\tend = arguments[ 2 ];\n\t\tfcn = arguments[ 3 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 4 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an integer (starting index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (ending index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = src.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > src.length ) {\n\t\tend = src.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = src.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\ti = begin - 1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += 1;\n\t\tif ( FLG || i >= end ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, i-begin, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += 1;\n\t\tif ( FLG || i >= end ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn arrayview2iterator( src, begin, end, fcn, thisArg );\n\t\t}\n\t\treturn arrayview2iterator( src, begin, end );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayview2iterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert/is-function';\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isAccessorArray from './../../base/assert/is-accessor-array';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport accessorGetter from './../../base/accessor-getter';\nimport getter from './../../base/getter';\nimport dtype from './../../dtype';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates from right to left over each element in an array-like object view.\n*\n* @param {Collection} src - input value\n* @param {integer} [begin=0] - starting **view** index (inclusive)\n* @param {integer} [end=src.length] - ending **view** index (non-inclusive)\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be either an integer (starting index) or a function\n* @throws {TypeError} third argument must be either an integer (ending index) or a function\n* @throws {TypeError} fourth argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = arrayview2iteratorRight( [ 1, 2, 3, 4 ], 1, 3 );\n*\n* var v = iter.next().value;\n* // returns 3\n*\n* v = iter.next().value;\n* // returns 2\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction arrayview2iteratorRight( src ) {\n\tvar thisArg;\n\tvar begin;\n\tvar nargs;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar end;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs === 1 ) {\n\t\tbegin = 0;\n\t\tend = src.length;\n\t} else if ( nargs === 2 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tfcn = arguments[ 1 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t}\n\t\tend = src.length;\n\t} else if ( nargs === 3 ) {\n\t\tif ( isFunction( arguments[ 1 ] ) ) {\n\t\t\tbegin = 0;\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tthisArg = arguments[ 2 ];\n\t\t} else if ( isFunction( arguments[ 2 ] ) ) {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = src.length;\n\t\t\tfcn = arguments[ 2 ];\n\t\t} else {\n\t\t\tbegin = arguments[ 1 ];\n\t\t\tend = arguments[ 2 ];\n\t\t}\n\t} else { // nargs >= 4\n\t\tbegin = arguments[ 1 ];\n\t\tend = arguments[ 2 ];\n\t\tfcn = arguments[ 3 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be a function. Value: `%s`.', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 4 ];\n\t}\n\tif ( !isInteger( begin ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an integer (starting view index) or a function. Value: `%s`.', begin ) );\n\t}\n\tif ( !isInteger( end ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be either an integer (ending view index) or a function. Value: `%s`.', end ) );\n\t}\n\tif ( end < 0 ) {\n\t\tend = src.length + end;\n\t\tif ( end < 0 ) {\n\t\t\tend = 0;\n\t\t}\n\t} else if ( end > src.length ) {\n\t\tend = src.length;\n\t}\n\tif ( begin < 0 ) {\n\t\tbegin = src.length + begin;\n\t\tif ( begin < 0 ) {\n\t\t\tbegin = 0;\n\t\t}\n\t}\n\ti = end;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', finish );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti -= 1;\n\t\tif ( FLG || i < begin ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, end-i-1, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti -= 1;\n\t\tif ( FLG || i < begin ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction finish( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn arrayview2iteratorRight( src, begin, end, fcn, thisArg );\n\t\t}\n\t\treturn arrayview2iteratorRight( src, begin, end );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default arrayview2iteratorRight;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport ctors from './../../typed-ctors';\nimport reinterpret128 from '@stdlib/strided/base/reinterpret-complex128';\nimport reinterpret64 from '@stdlib/strided/base/reinterpret-complex64';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.default' );\nvar Complex64Array = ctors( 'complex64' );\nvar Complex128Array = ctors( 'complex128' );\n\n\n// MAIN //\n\n/**\n* Creates a typed array.\n*\n* @param {(NonNegativeInteger|ComplexArray|TypedArray|ArrayLikeObject|ArrayBuffer)} [arg] - a length, typed array, array-like object, or buffer\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {(ComplexArray|TypedArray)} typed array\n*\n* @example\n* var arr = typedarray();\n* // returns <Float64Array>\n*\n* @example\n* var arr = typedarray( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = typedarray( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = typedarray( [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 0.5, 0.5 ]\n*\n* @example\n* var arr = typedarray( [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 5, -3 ]\n*\n* @example\n* var arr1 = typedarray( [ 5, 3 ], 'int32' );\n* var arr2 = typedarray( arr1 );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var arr1 = typedarray( [ 5, 3 ], 'int32' );\n* var arr2 = typedarray( arr1, 'uint32' );\n* // returns <Uint32Array>[ 5, 3 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0, 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 8 );\n* // returns <Float64Array>[ 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = typedarray( buf, 8, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = typedarray( buf, 8, 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = typedarray( buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 0, 0 ]\n*/\nfunction typedarray() {\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\tvar arg;\n\n\tnargs = arguments.length;\n\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\tnargs -= 1;\n\t\tdtype = arguments[ nargs ];\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) {\n\t\targ = arguments[ 0 ];\n\n\t\t// Note: the following checks are not particularly robust, as `instanceof` will fail for cross-realm instances...\n\t\tif ( arg instanceof Complex64Array ) {\n\t\t\targ = reinterpret64( arg, 0 );\n\t\t} else if ( arg instanceof Complex128Array ) {\n\t\t\targ = reinterpret128( arg, 0 );\n\t\t}\n\t\treturn new ctor( arg );\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn new ctor( arguments[0], arguments[1] );\n\t}\n\treturn new ctor( arguments[0], arguments[1], arguments[2] );\n}\n\n\n// EXPORTS //\n\nexport default typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex128Array from './../../complex128';\nimport Complex64Array from './../../complex64';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'complex128': Complex128Array,\n\t'complex64': Complex64Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns a complex typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'complex128' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport ctors from './../../typed-complex-ctors';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.complex_floating_point' );\n\n\n// MAIN //\n\n/**\n* Creates a complex number typed array.\n*\n* @param {(NonNegativeInteger|ComplexArray|ArrayLikeObject|ArrayBuffer)} [arg] - a length, typed array, array-like object, or buffer\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"complex128\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {ComplexArray} typed array\n*\n* @example\n* var arr = complexarray();\n* // returns <Complex128Array>\n*\n* @example\n* var arr = complexarray( 2 );\n* // returns <Complex128Array>\n*\n* @example\n* var arr = complexarray( 2, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var arr = complexarray( [ 0.5, 0.5 ] );\n* // returns <Complex128Array>\n*\n* @example\n* var arr = complexarray( [ 5.0, -3.0 ], 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* var arr1 = complexarray( [ 5.0, 3.0 ], 'complex64' );\n* var arr2 = complexarray( arr1 );\n* // returns <Complex128Array>\n*\n* @example\n* var arr1 = complexarray( [ 5.0, 3.0 ], 'complex128' );\n* var arr2 = complexarray( arr1, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf );\n* // returns <Complex128Array>\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 16 );\n* // returns <Complex128Array>\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = complexarray( buf, 16, 'complex64' );\n* // returns <Complex64Array>\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = complexarray( buf, 16, 2 );\n* // returns <Complex128Array>\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 64 );\n* var arr = complexarray( buf, 16, 2, 'complex64' );\n* // returns <Complex64Array>\n*/\nfunction complexarray() {\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\n\tnargs = arguments.length;\n\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\tnargs -= 1;\n\t\tdtype = arguments[ nargs ];\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) {\n\t\treturn new ctor( arguments[0] );\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn new ctor( arguments[0], arguments[1] );\n\t}\n\treturn new ctor( arguments[0], arguments[1], arguments[2] );\n}\n\n\n// EXPORTS //\n\nexport default complexarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of complex typed array data types.\n*\n* @returns {StringArray} list of complex typed array data types\n*\n* @example\n* var list = dtypes();\n* // returns [ 'complex64', 'complex128' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array data types.\n*\n* @returns {StringArray} list of typed array data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c', 'complex128', 'complex64' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array floating-point data types.\n*\n* @returns {StringArray} list of typed array floating-point data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'complex64', 'complex128' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int16Array from './../../int16';\nimport Int32Array from './../../int32';\nimport Int8Array from './../../int8';\nimport Uint16Array from './../../uint16';\nimport Uint32Array from './../../uint32';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns an integer-valued typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'int32' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'int' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array integer data types.\n*\n* @returns {StringArray} list of typed array integer data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport ctors from './../../typed-ctors';\nimport defaults from './../../defaults';\nimport format from '@stdlib/string/format';\n\n\n// VARIABLES //\n\nvar DEFAULT_DTYPE = defaults.get( 'dtypes.real' );\n\n\n// MAIN //\n\n/**\n* Creates a typed array.\n*\n* @param {(NonNegativeInteger|TypedArray|ArrayLikeObject|ArrayBuffer)} [arg] - a length, typed array, array-like object, or buffer\n* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n* @param {NonNegativeInteger} [length] - view length\n* @param {string} [dtype=\"float64\"] - data type\n* @throws {TypeError} must provide a recognized data type\n* @returns {TypedArray} typed array\n*\n* @example\n* var arr = realarray();\n* // returns <Float64Array>\n*\n* @example\n* var arr = realarray( 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = realarray( 2, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* var arr = realarray( [ 0.5, 0.5 ] );\n* // returns <Float64Array>[ 0.5, 0.5 ]\n*\n* @example\n* var arr = realarray( [ 5, -3 ], 'int32' );\n* // returns <Int32Array>[ 5, -3 ]\n*\n* @example\n* var arr1 = realarray( [ 5, 3 ], 'int32' );\n* var arr2 = realarray( arr1 );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var arr1 = realarray( [ 5, 3 ], 'int32' );\n* var arr2 = realarray( arr1, 'uint32' );\n* // returns <Uint32Array>[ 5, 3 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0, 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 8 );\n* // returns <Float64Array>[ 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = realarray( buf, 8, 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = realarray( buf, 8, 2 );\n* // returns <Float64Array>[ 0.0, 0.0 ]\n*\n* @example\n* import ArrayBuffer from '@stdlib/array/buffer';\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = realarray( buf, 8, 2, 'int32' );\n* // returns <Int32Array>[ 0, 0 ]\n*/\nfunction realarray() {\n\tvar nargs;\n\tvar dtype;\n\tvar ctor;\n\n\tnargs = arguments.length;\n\tif ( nargs && isString( arguments[ nargs-1 ] ) ) {\n\t\tnargs -= 1;\n\t\tdtype = arguments[ nargs ];\n\t} else {\n\t\tdtype = DEFAULT_DTYPE;\n\t}\n\tctor = ctors( dtype );\n\tif ( ctor === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized data type. Value: `%s`.', dtype ) );\n\t}\n\tif ( nargs <= 0 ) {\n\t\treturn new ctor( 0 );\n\t}\n\tif ( nargs === 1 ) {\n\t\treturn new ctor( arguments[0] );\n\t}\n\tif ( nargs === 2 ) {\n\t\treturn new ctor( arguments[0], arguments[1] );\n\t}\n\treturn new ctor( arguments[0], arguments[1], arguments[2] );\n}\n\n\n// EXPORTS //\n\nexport default realarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\nimport Int16Array from './../../int16';\nimport Int32Array from './../../int32';\nimport Int8Array from './../../int8';\nimport Uint16Array from './../../uint16';\nimport Uint32Array from './../../uint32';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array,\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array,\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns a typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array data types.\n*\n* @returns {StringArray} list of typed array data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64', 'int16', 'int32', 'int8', 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Float64Array from './../../float64';\nimport Float32Array from './../../float32';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'float64': Float64Array,\n\t'float32': Float32Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns a real-valued floating-point typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'float64' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'float' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array real-valued floating-point data types.\n*\n* @returns {StringArray} list of typed array real-valued floating-point data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'float32', 'float64' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int16Array from './../../int16';\nimport Int32Array from './../../int32';\nimport Int8Array from './../../int8';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'int16': Int16Array,\n\t'int32': Int32Array,\n\t'int8': Int8Array\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns a signed integer typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'int32' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'int' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array signed integer data types.\n*\n* @returns {StringArray} list of typed array signed integer data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'int16', 'int32', 'int8' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Uint16Array from './../../uint16';\nimport Uint32Array from './../../uint32';\nimport Uint8Array from './../../uint8';\nimport Uint8ClampedArray from './../../uint8c';\n\n\n// MAIN //\n\n// Mapping from data types to constructors...\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint32': Uint32Array,\n\t'uint8': Uint8Array,\n\t'uint8c': Uint8ClampedArray\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport table from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns an unsigned integer typed array constructor.\n*\n* @param {string} dtype - data type\n* @returns {(Function|null)} constructor or null\n*\n* @example\n* var ctor = ctors( 'uint32' );\n* // returns <Function>\n*\n* @example\n* var ctor = ctors( 'uint' );\n* // returns null\n*/\nfunction ctors( dtype ) {\n\treturn table[ dtype ] || null;\n}\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport DTYPES from './dtypes.json';\n\n\n// MAIN //\n\n/**\n* Returns a list of typed array unsigned integer data types.\n*\n* @returns {StringArray} list of typed array unsigned integer data types\n*\n* @example\n* var list = dtypes();\n* // e.g., returns [ 'uint16', 'uint32', 'uint8', 'uint8c' ]\n*/\nfunction dtypes() {\n\treturn DTYPES.slice();\n}\n\n\n// EXPORTS //\n\nexport default dtypes;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/string/format';\nimport dtype from './../../dtype';\nimport zeros from './../../zeros';\n\n\n// MAIN //\n\n/**\n* Creates a zero-filled array having the same length and data type as a provided input array.\n*\n* @param {(Array|TypedArray|ComplexArray)} x - input array\n* @param {string} [dtype] - data type\n* @throws {TypeError} first argument must be an array or typed array\n* @throws {TypeError} second argument must be a recognized data type\n* @returns {(TypedArray|Array|ComplexArray)} array or typed array\n*\n* @example\n* var arr = zerosLike( [ 0.0, 0.0 ] );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var arr = zerosLike( [ 0.0, 0.0 ], 'float32' );\n* // returns <Float32Array>[ 0.0, 0.0 ]\n*/\nfunction zerosLike( x ) {\n\tvar dt = dtype( x ); // delegate input argument validation to dtype resolution\n\tif ( dt === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or complex typed array. Value: `%s`.', x ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tdt = arguments[ 1 ];\n\t}\n\treturn zeros( x.length, dt );\n}\n\n\n// EXPORTS //\n\nexport default zerosLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: generic\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name base\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/array/base}\n*/\nimport base from './../base';\nsetReadOnly( ns, 'base', base );\n\n/**\n* @name ArrayBuffer\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/buffer}\n*/\nimport ArrayBuffer from './../buffer';\nsetReadOnly( ns, 'ArrayBuffer', ArrayBuffer );\n\n/**\n* @name Complex64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/complex64}\n*/\nimport Complex64Array from './../complex64';\nsetReadOnly( ns, 'Complex64Array', Complex64Array );\n\n/**\n* @name Complex128Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/complex128}\n*/\nimport Complex128Array from './../complex128';\nsetReadOnly( ns, 'Complex128Array', Complex128Array );\n\n/**\n* @name convertArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/convert}\n*/\nimport convertArray from './../convert';\nsetReadOnly( ns, 'convertArray', convertArray );\n\n/**\n* @name convertArraySame\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/convert-same}\n*/\nimport convertArraySame from './../convert-same';\nsetReadOnly( ns, 'convertArraySame', convertArraySame );\n\n/**\n* @name arrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/ctors}\n*/\nimport arrayCtors from './../ctors';\nsetReadOnly( ns, 'arrayCtors', arrayCtors );\n\n/**\n* @name DataView\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/dataview}\n*/\nimport DataView from './../dataview';\nsetReadOnly( ns, 'DataView', DataView );\n\n/**\n* @name datespace\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/datespace}\n*/\nimport datespace from './../datespace';\nsetReadOnly( ns, 'datespace', datespace );\n\n/**\n* @name arrayDefaults\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/defaults}\n*/\nimport arrayDefaults from './../defaults';\nsetReadOnly( ns, 'arrayDefaults', arrayDefaults );\n\n/**\n* @name arrayDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/dtype}\n*/\nimport arrayDataType from './../dtype';\nsetReadOnly( ns, 'arrayDataType', arrayDataType );\n\n/**\n* @name arrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/dtypes}\n*/\nimport arrayDataTypes from './../dtypes';\nsetReadOnly( ns, 'arrayDataTypes', arrayDataTypes );\n\n/**\n* @name aempty\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/empty}\n*/\nimport aempty from './../empty';\nsetReadOnly( ns, 'aempty', aempty );\n\n/**\n* @name aemptyLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/empty-like}\n*/\nimport aemptyLike from './../empty-like';\nsetReadOnly( ns, 'aemptyLike', aemptyLike );\n\n/**\n* @name filledarray\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/filled}\n*/\nimport filledarray from './../filled';\nsetReadOnly( ns, 'filledarray', filledarray );\n\n/**\n* @name filledarrayBy\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/filled-by}\n*/\nimport filledarrayBy from './../filled-by';\nsetReadOnly( ns, 'filledarrayBy', filledarrayBy );\n\n/**\n* @name Float32Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/float32}\n*/\nimport Float32Array from './../float32';\nsetReadOnly( ns, 'Float32Array', Float32Array );\n\n/**\n* @name Float64Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/float64}\n*/\nimport Float64Array from './../float64';\nsetReadOnly( ns, 'Float64Array', Float64Array );\n\n/**\n* @name iterator2array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/from-iterator}\n*/\nimport iterator2array from './../from-iterator';\nsetReadOnly( ns, 'iterator2array', iterator2array );\n\n/**\n* @name afull\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/full}\n*/\nimport afull from './../full';\nsetReadOnly( ns, 'afull', afull );\n\n/**\n* @name afullLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/full-like}\n*/\nimport afullLike from './../full-like';\nsetReadOnly( ns, 'afullLike', afullLike );\n\n/**\n* @name incrspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/incrspace}\n*/\nimport incrspace from './../incrspace';\nsetReadOnly( ns, 'incrspace', incrspace );\n\n/**\n* @name Int8Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/int8}\n*/\nimport Int8Array from './../int8';\nsetReadOnly( ns, 'Int8Array', Int8Array );\n\n/**\n* @name Int16Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/int16}\n*/\nimport Int16Array from './../int16';\nsetReadOnly( ns, 'Int16Array', Int16Array );\n\n/**\n* @name Int32Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/int32}\n*/\nimport Int32Array from './../int32';\nsetReadOnly( ns, 'Int32Array', Int32Array );\n\n/**\n* @name linspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/linspace}\n*/\nimport linspace from './../linspace';\nsetReadOnly( ns, 'linspace', linspace );\n\n/**\n* @name logspace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/logspace}\n*/\nimport logspace from './../logspace';\nsetReadOnly( ns, 'logspace', logspace );\n\n/**\n* @name arrayMinDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/min-dtype}\n*/\nimport arrayMinDataType from './../min-dtype';\nsetReadOnly( ns, 'arrayMinDataType', arrayMinDataType );\n\n/**\n* @name anans\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/nans}\n*/\nimport anans from './../nans';\nsetReadOnly( ns, 'anans', anans );\n\n/**\n* @name anansLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/nans-like}\n*/\nimport anansLike from './../nans-like';\nsetReadOnly( ns, 'anansLike', anansLike );\n\n/**\n* @name arrayNextDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/next-dtype}\n*/\nimport arrayNextDataType from './../next-dtype';\nsetReadOnly( ns, 'arrayNextDataType', arrayNextDataType );\n\n/**\n* @name aones\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/ones}\n*/\nimport aones from './../ones';\nsetReadOnly( ns, 'aones', aones );\n\n/**\n* @name aonesLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/ones-like}\n*/\nimport aonesLike from './../ones-like';\nsetReadOnly( ns, 'aonesLike', aonesLike );\n\n/**\n* @name typedarraypool\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/pool}\n*/\nimport typedarraypool from './../pool';\nsetReadOnly( ns, 'typedarraypool', typedarraypool );\n\n/**\n* @name arrayPromotionRules\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/promotion-rules}\n*/\nimport arrayPromotionRules from './../promotion-rules';\nsetReadOnly( ns, 'arrayPromotionRules', arrayPromotionRules );\n\n/**\n* @name reviveTypedArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/reviver}\n*/\nimport reviveTypedArray from './../reviver';\nsetReadOnly( ns, 'reviveTypedArray', reviveTypedArray );\n\n/**\n* @name arraySafeCasts\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/safe-casts}\n*/\nimport arraySafeCasts from './../safe-casts';\nsetReadOnly( ns, 'arraySafeCasts', arraySafeCasts );\n\n/**\n* @name arraySameKindCasts\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/same-kind-casts}\n*/\nimport arraySameKindCasts from './../same-kind-casts';\nsetReadOnly( ns, 'arraySameKindCasts', arraySameKindCasts );\n\n/**\n* @name arrayShape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/shape}\n*/\nimport arrayShape from './../shape';\nsetReadOnly( ns, 'arrayShape', arrayShape );\n\n/**\n* @name SharedArrayBuffer\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/shared-buffer}\n*/\nimport SharedArrayBuffer from './../shared-buffer';\nsetReadOnly( ns, 'SharedArrayBuffer', SharedArrayBuffer );\n\n/**\n* @name circarray2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-circular-iterator}\n*/\nimport circarray2iterator from './../to-circular-iterator';\nsetReadOnly( ns, 'circarray2iterator', circarray2iterator );\n\n/**\n* @name array2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-iterator}\n*/\nimport array2iterator from './../to-iterator';\nsetReadOnly( ns, 'array2iterator', array2iterator );\n\n/**\n* @name array2iteratorRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-iterator-right}\n*/\nimport array2iteratorRight from './../to-iterator-right';\nsetReadOnly( ns, 'array2iteratorRight', array2iteratorRight );\n\n/**\n* @name typedarray2json\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-json}\n*/\nimport typedarray2json from './../to-json';\nsetReadOnly( ns, 'typedarray2json', typedarray2json );\n\n/**\n* @name sparsearray2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-sparse-iterator}\n*/\nimport sparsearray2iterator from './../to-sparse-iterator';\nsetReadOnly( ns, 'sparsearray2iterator', sparsearray2iterator );\n\n/**\n* @name sparsearray2iteratorRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-sparse-iterator-right}\n*/\nimport sparsearray2iteratorRight from './../to-sparse-iterator-right';\nsetReadOnly( ns, 'sparsearray2iteratorRight', sparsearray2iteratorRight );\n\n/**\n* @name stridedarray2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-strided-iterator}\n*/\nimport stridedarray2iterator from './../to-strided-iterator';\nsetReadOnly( ns, 'stridedarray2iterator', stridedarray2iterator );\n\n/**\n* @name arrayview2iterator\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-view-iterator}\n*/\nimport arrayview2iterator from './../to-view-iterator';\nsetReadOnly( ns, 'arrayview2iterator', arrayview2iterator );\n\n/**\n* @name arrayview2iteratorRight\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/to-view-iterator-right}\n*/\nimport arrayview2iteratorRight from './../to-view-iterator-right';\nsetReadOnly( ns, 'arrayview2iteratorRight', arrayview2iteratorRight );\n\n/**\n* @name typedarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed}\n*/\nimport typedarray from './../typed';\nsetReadOnly( ns, 'typedarray', typedarray );\n\n/**\n* @name complexarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-complex}\n*/\nimport complexarray from './../typed-complex';\nsetReadOnly( ns, 'complexarray', complexarray );\n\n/**\n* @name complexarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-complex-ctors}\n*/\nimport complexarrayCtors from './../typed-complex-ctors';\nsetReadOnly( ns, 'complexarrayCtors', complexarrayCtors );\n\n/**\n* @name complexarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-complex-dtypes}\n*/\nimport complexarrayDataTypes from './../typed-complex-dtypes';\nsetReadOnly( ns, 'complexarrayDataTypes', complexarrayDataTypes );\n\n/**\n* @name typedarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-ctors}\n*/\nimport typedarrayCtors from './../typed-ctors';\nsetReadOnly( ns, 'typedarrayCtors', typedarrayCtors );\n\n/**\n* @name typedarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-dtypes}\n*/\nimport typedarrayDataTypes from './../typed-dtypes';\nsetReadOnly( ns, 'typedarrayDataTypes', typedarrayDataTypes );\n\n/**\n* @name floatarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-float-ctors}\n*/\nimport floatarrayCtors from './../typed-float-ctors';\nsetReadOnly( ns, 'floatarrayCtors', floatarrayCtors );\n\n/**\n* @name floatarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-float-dtypes}\n*/\nimport floatarrayDataTypes from './../typed-float-dtypes';\nsetReadOnly( ns, 'floatarrayDataTypes', floatarrayDataTypes );\n\n/**\n* @name intarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-integer-ctors}\n*/\nimport intarrayCtors from './../typed-integer-ctors';\nsetReadOnly( ns, 'intarrayCtors', intarrayCtors );\n\n/**\n* @name intarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-integer-dtypes}\n*/\nimport intarrayDataTypes from './../typed-integer-dtypes';\nsetReadOnly( ns, 'intarrayDataTypes', intarrayDataTypes );\n\n/**\n* @name realarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real}\n*/\nimport realarray from './../typed-real';\nsetReadOnly( ns, 'realarray', realarray );\n\n/**\n* @name realarrayCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-ctors}\n*/\nimport realarrayCtors from './../typed-real-ctors';\nsetReadOnly( ns, 'realarrayCtors', realarrayCtors );\n\n/**\n* @name realarrayDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-dtypes}\n*/\nimport realarrayDataTypes from './../typed-real-dtypes';\nsetReadOnly( ns, 'realarrayDataTypes', realarrayDataTypes );\n\n/**\n* @name realarrayFloatCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-float-ctors}\n*/\nimport realarrayFloatCtors from './../typed-real-float-ctors';\nsetReadOnly( ns, 'realarrayFloatCtors', realarrayFloatCtors );\n\n/**\n* @name realarrayFloatDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-real-float-dtypes}\n*/\nimport realarrayFloatDataTypes from './../typed-real-float-dtypes';\nsetReadOnly( ns, 'realarrayFloatDataTypes', realarrayFloatDataTypes );\n\n/**\n* @name intarraySignedCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-signed-integer-ctors}\n*/\nimport intarraySignedCtors from './../typed-signed-integer-ctors';\nsetReadOnly( ns, 'intarraySignedCtors', intarraySignedCtors );\n\n/**\n* @name intarraySignedDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-signed-integer-dtypes}\n*/\nimport intarraySignedDataTypes from './../typed-signed-integer-dtypes';\nsetReadOnly( ns, 'intarraySignedDataTypes', intarraySignedDataTypes );\n\n/**\n* @name intarrayUnsignedCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-unsigned-integer-ctors}\n*/\nimport intarrayUnsignedCtors from './../typed-unsigned-integer-ctors';\nsetReadOnly( ns, 'intarrayUnsignedCtors', intarrayUnsignedCtors );\n\n/**\n* @name intarrayUnsignedDataTypes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/array/typed-unsigned-integer-dtypes}\n*/\nimport intarrayUnsignedDataTypes from './../typed-unsigned-integer-dtypes';\nsetReadOnly( ns, 'intarrayUnsignedDataTypes', intarrayUnsignedDataTypes );\n\n/**\n* @name Uint8Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint8}\n*/\nimport Uint8Array from './../uint8';\nsetReadOnly( ns, 'Uint8Array', Uint8Array );\n\n/**\n* @name Uint8ClampedArray\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint8c}\n*/\nimport Uint8ClampedArray from './../uint8c';\nsetReadOnly( ns, 'Uint8ClampedArray', Uint8ClampedArray );\n\n/**\n* @name Uint16Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint16}\n*/\nimport Uint16Array from './../uint16';\nsetReadOnly( ns, 'Uint16Array', Uint16Array );\n\n/**\n* @name Uint32Array\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/uint32}\n*/\nimport Uint32Array from './../uint32';\nsetReadOnly( ns, 'Uint32Array', Uint32Array );\n\n/**\n* @name azeros\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/zeros}\n*/\nimport azeros from './../zeros';\nsetReadOnly( ns, 'azeros', azeros );\n\n/**\n* @name azerosLike\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/array/zeros-like}\n*/\nimport azerosLike from './../zeros-like';\nsetReadOnly( ns, 'azerosLike', azerosLike );\n\n/**\n* @name constants\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/constants/array}\n*/\nimport constants from '@stdlib/constants/array';\nsetReadOnly( ns, 'constants', constants );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["isAccessorArray","value","get","set","GETTERS","float64","arr","idx","float32","int32","int16","int8","uint32","uint16","uint8","uint8c","generic","default","getter","dtype","f","SETTERS","setter","complex128","complex64","ctor2dtypes","Float32Array","Float64Array","Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","Complex64Array","Complex128Array","ctor","Float64Array$1","hasFloat64ArraySupport","builtin","Error","Float32Array$1","hasFloat32ArraySupport","Uint32Array$1","hasUint32ArraySupport","Int32Array$1","hasInt32ArraySupport","Uint16Array$1","hasUint16ArraySupport","Int16Array$1","hasInt16ArraySupport","Uint8Array$1","hasUint8ArraySupport","Uint8ClampedArray$1","hasUint8ClampedArraySupport","Int8Array$1","hasInt8ArraySupport","isComplex64Array","constructor","name","BYTES_PER_ELEMENT","isComplex128Array","fromIterator","it","out","v","z","next","done","isArrayLikeObject","length","push","isComplexLike","TypeError","format","realf","imagf","fromIteratorMap","clbk","thisArg","i","call","fromArray","buf","len","j","HAS_ITERATOR_SYMBOL","hasIteratorSymbolSupport","isComplexArray","_length","_buffer","isComplexArrayConstructor","getComplex64","Complex64","byteOffset","nargs","arguments","this","isNonNegativeInteger","isCollection","isArray","isEven","RangeError","reinterpret64","reinterpret128","isArrayBuffer","isInteger","byteLength","isObject","isFunction","ITERATOR_SYMBOL","setReadOnly","real","imag","src","tmp","flg","accessorGetter","args","prototype","setReadOnlyAccessor","buffer","target","start","copyWithin","self","iter","FLG","entries","predicate","end","re","im","fcn","searchElement","fromIndex","separator","sep","isString","toString","join","outbuf","N","floor","sbuf","outlen","begin","offset","index","getComplex128","Complex128","CTORS","DTYPES","NTYPES","isBuffer","ctor2dtype","constructorName","accessors","x","dt","accessorProtocol","accessorSetter","AccessorArray","o","_getter","_setter","arraylike2object","data","internal","contains","factory","y","isSameValue","setReadWriteAccessor","main","ns","resolveGetter","recurse","ndims","shape","dim","S","d","copy","filled","zeros","broadcastArray","inShape","outShape","st","M","ref","strides","internalComplex","filledBy","filled2d","S0","S1","filled3d","a1","S2","i2","i1","filled4d","a2","S3","i3","filled5d","a3","S4","i4","fillednd","indices","slice","xo","yo","xr","yr","xdata","ydata","xget","yget","stride","recurseLexicographic","flatten","colexicographic","ord","sh","sx","numel","shape2strides","grev","vind2bind","flattenColexicographic","assign","orig","flattenBy","copyBy","flatten2d","i0","a0","flatten2dBy","flatten3d","flatten3dBy","flatten4d","flatten4dBy","flatten5d","flatten5dBy","fliplr2d","x0","y0","fliplr3d","fliplr4d","flipud2d","flipud3d","flipud4d","incrspace","x1","x2","increment","ceil","logspace","a","b","pow","map2d","map3d","y1","map4d","y2","map5d","x3","y3","oneTo","n","complex","s","io","obj","indexed","arraySlice","take2d","dimension","mode","lastIndex","ind","normalizeIndex","NDIMS","indexFunction","zeroTo","method","hasMethod","some","assert","filter","gget","arrays","z0","z1","z2","z3","shapes","dx0","dx1","dy0","dy1","j0","j1","k0","k1","dx2","dy2","j2","k2","dx3","dy3","j3","k3","dx4","dy4","j4","k4","dz0","dz1","dw0","dw1","m0","m1","n0","n1","w0","u0","w","u","du0","du1","p0","p1","v0","k","copyIndexed","limit","equalNaNs","count","prev","ptr","isnan","dedupeEqualNaNs","dedupeInPlace","every","ix","groups","g","indicator","indexOf","lastIndexOf","m","mask","mget","dims","arg","w1","v1","w2","v2","w3","v3","u1","u2","u3","reverse","ix1","ix0","t2","t1","ix2","t3","ix3","t4","NaN","dedupeCopy","toReversed","ArrayBuffer","ArrayBuffer$1","hasArrayBufferSupport","ctors","table","isComplex64","isComplex128","convert","isc64","xbuf","obuf","t","getType","gcopy","convertSame","DataView","DataView$1","hasDataViewSupport","timestamp","rounders","validDate","type","Date","parse","toLowerCase","test","datespace","stop","options","opts","round","hasOwnProp","getTime","defaults","dtypes","numeric","floating_point","real_floating_point","complex_floating_point","integer","signed_integer","unsigned_integer","DEFAULTS","HASH","RE_SUFFIX","kind","all","replace","DEFAULT_DTYPE","gzeros","empty","emptyLike","filledIterator","filledAccessors","filledarray","iterLength","gfill","filledArrayIterator","filledarrayBy","filledArray","gfillBy","callback","aidx","iterator2array","iterator","isIteratorLike","full","afill","fullLike","inc","isNumber","MAX_LENGTH","gen","linspace","endpoint","dt1","dt2","cmplx","isf32","re1","re2","im1","im2","dr","di","validate","isBoolean","DEFAULT_COMPLEX_DTYPE","err","gencmplx","genreal","typedcmplx","typedreal","minFloatDataType","PINF","NINF","FLOAT32_MIN_SAFE_INTEGER","FLOAT32_MAX_SAFE_INTEGER","FLOAT32_SMALLEST_SUBNORMAL","minDataType","isNegativeZero","INT8_MIN","INT16_MIN","INT32_MIN","UINT8_MAX","UINT16_MAX","UINT32_MAX","odt","adtype","acccmplx","accreal","Z128","Z64","isValidDType","nans","nansLike","generateTable","ntypes","objectKeys","NEXT_DTYPES","nextDataType","ones","onesLike","highWaterMark","pool","ARRAY_DEFAULTS","isCmplx64Array","isCmplx128Array","nbytes","createPool","log2","malloc","calloc","free","clear","getBytes","arraybuffer","pop","typedarray","ceil2","p","isTypedArrayLike","min","typedarraypool","generateFullTable","PROMOTION_RULES","promotionRules","dtype1","dtype2","reviveTypedArray","key","TABLE","SAFE_CASTS","safeCasts","SAME_KIND_CASTS","sameKindCasts","check","arrayShape","SharedArrayBuffer","SharedArrayBuffer$1","hasSharedArrayBufferSupport","size","circarray2iterator","dir","next1a","next1b","next2a","next2b","iteratorSymbol","array2iterator","next1","next2","array2iteratorRight","typeName","instanceOf","ctorName","getPrototypeOf","typedarray2json","isTypedArray","isComplexTypedArray","sparsearray2iterator","sparsearray2iteratorRight","stridedarray2iterator","arrayview2iterator","finish","arrayview2iteratorRight","complexarray","realarray","zerosLike","base","convertArray","convertArraySame","arrayCtors","arrayDefaults","arrayDataType","arrayDataTypes","aempty","aemptyLike","afull","afullLike","arrayMinDataType","anans","anansLike","arrayNextDataType","aones","aonesLike","arrayPromotionRules","arraySafeCasts","arraySameKindCasts","complexarrayCtors","complexarrayDataTypes","typedarrayCtors","typedarrayDataTypes","floatarrayCtors","floatarrayDataTypes","intarrayCtors","intarrayDataTypes","realarrayCtors","realarrayDataTypes","realarrayFloatCtors","realarrayFloatDataTypes","intarraySignedCtors","intarraySignedDataTypes","intarrayUnsignedCtors","intarrayUnsignedDataTypes","azeros","azerosLike","constants"],"mappings":";;w3TA2CA,SAASA,GAAiBC,GACzB,MAtBU,mBAsBMA,EAAMC,KAtBZ,mBAsBmCD,EAAME,GACpD,CCvBA,IAAIC,GAAU,CACbC,QAgCD,SAAqBC,EAAKC,GACzB,OAAOD,EAAKC,EACb,EAjCCC,QAmDD,SAAqBF,EAAKC,GACzB,OAAOD,EAAKC,EACb,EApDCE,MAsED,SAAmBH,EAAKC,GACvB,OAAOD,EAAKC,EACb,EAvECG,MAyFD,SAAmBJ,EAAKC,GACvB,OAAOD,EAAKC,EACb,EA1FCI,KA4GD,SAAkBL,EAAKC,GACtB,OAAOD,EAAKC,EACb,EA7GCK,OA+HD,SAAoBN,EAAKC,GACxB,OAAOD,EAAKC,EACb,EAhICM,OAkJD,SAAoBP,EAAKC,GACxB,OAAOD,EAAKC,EACb,EAnJCO,MAqKD,SAAmBR,EAAKC,GACvB,OAAOD,EAAKC,EACb,EAtKCQ,OAwLD,SAAoBT,EAAKC,GACxB,OAAOD,EAAKC,EACb,EAzLCS,QAyMD,SAAqBV,EAAKC,GACzB,OAAOD,EAAKC,EACb,EA1MCU,QA0ND,SAAuBX,EAAKC,GAC3B,OAAOD,EAAKC,EACb,GAoBA,SAASW,GAAQC,GAChB,IAAIC,EAAIhB,GAASe,GACjB,MAAkB,mBAANC,EACJA,EAEDhB,GAAQa,OAChB,CCjQA,IAAII,GAAU,CACbhB,QAkCD,SAAqBC,EAAKC,EAAKN,GAC9BK,EAAKC,GAAQN,CACd,EAnCCO,QAuDD,SAAqBF,EAAKC,EAAKN,GAC9BK,EAAKC,GAAQN,CACd,EAxDCQ,MA4ED,SAAmBH,EAAKC,EAAKN,GAC5BK,EAAKC,GAAQN,CACd,EA7ECS,MAiGD,SAAmBJ,EAAKC,EAAKN,GAC5BK,EAAKC,GAAQN,CACd,EAlGCU,KAsHD,SAAkBL,EAAKC,EAAKN,GAC3BK,EAAKC,GAAQN,CACd,EAvHCW,OA2ID,SAAoBN,EAAKC,EAAKN,GAC7BK,EAAKC,GAAQN,CACd,EA5ICY,OAgKD,SAAoBP,EAAKC,EAAKN,GAC7BK,EAAKC,GAAQN,CACd,EAjKCa,MAqLD,SAAmBR,EAAKC,EAAKN,GAC5BK,EAAKC,GAAQN,CACd,EAtLCc,OA0MD,SAAoBT,EAAKC,EAAKN,GAC7BK,EAAKC,GAAQN,CACd,EA3MCe,QA6ND,SAAqBV,EAAKC,EAAKN,GAC9BK,EAAKC,GAAQN,CACd,EA9NCgB,QAgPD,SAAuBX,EAAKC,EAAKN,GAChCK,EAAKC,GAAQN,CACd,GAsBA,SAASqB,GAAQH,GAChB,IAAIC,EAAIC,GAASF,GACjB,MAAkB,mBAANC,EACJA,EAEDC,GAAQJ,OAChB,CCzRA,IAAIb,GAAU,CACbmB,WAgCD,SAAwBjB,EAAKC,GAC5B,OAAOD,EAAIJ,IAAKK,EACjB,EAjCCiB,UA2DD,SAAuBlB,EAAKC,GAC3B,OAAOD,EAAIJ,IAAKK,EACjB,EA5DCU,QAuFD,SAAuBX,EAAKC,GAC3B,OAAOD,EAAIJ,IAAKK,EACjB,GA6BA,SAASW,GAAQC,GAChB,IAAIC,EAAIhB,GAASe,GACjB,MAAkB,mBAANC,EACJA,EAEDhB,GAAQa,OAChB,CC/HA,IAAII,GAAU,CACbE,WAkCD,SAAwBjB,EAAKC,EAAKN,GACjCK,EAAIH,IAAKF,EAAOM,EACjB,EAnCCiB,UA+DD,SAAuBlB,EAAKC,EAAKN,GAChCK,EAAIH,IAAKF,EAAOM,EACjB,EAhECU,QA6FD,SAAuBX,EAAKC,EAAKN,GAChCK,EAAIH,IAAKF,EAAOM,EACjB,GAgCA,SAASe,GAAQH,GAChB,IAAIC,EAAIC,GAASF,GACjB,MAAkB,mBAANC,EACJA,EAEDC,GAAQJ,OAChB,CCvIA,IAAIQ,GAAc,CACjBC,aAAgB,UAChBC,aAAgB,UAChBC,MAAS,UACTC,WAAc,QACdC,WAAc,QACdC,UAAa,OACbC,YAAe,SACfC,YAAe,SACfC,WAAc,QACdC,kBAAqB,SACrBC,eAAkB,YAClBC,gBAAmB,cCbhBC,GAAiC,mBAAjBX,aAAgCA,kBAAe,EC6BnE,IAAAY,GATKC,IACGC,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAAiC,mBAAjBZ,aAAgCA,kBAAe,EC6BnE,IAAAiB,GATKC,IACGH,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAAgC,mBAAhBL,YAA+BA,iBAAc,EC6BjE,IAAAY,GATKC,IACGL,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAA+B,mBAAfR,WAA8BA,gBAAa,EC6B/D,IAAAiB,GATKC,IACGP,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAAgC,mBAAhBN,YAA+BA,iBAAc,EC6BjE,IAAAiB,GATKC,IACGT,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAA+B,mBAAfT,WAA8BA,gBAAa,EC6B/D,IAAAsB,GATKC,IACGX,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAA+B,mBAAfJ,WAA8BA,gBAAa,EC6B/D,IAAAmB,GATKC,IACGb,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAAsC,mBAAtBH,kBAAqCA,uBAAoB,EC6B7E,IAAAoB,GATKC,IACGf,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECTIJ,GAA8B,mBAAdP,UAA6BA,eAAY,EC6B7D,IAAA0B,GATKC,IACGjB,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECWA,SAASiB,GAAkB1D,GAE1B,MACkB,iBAAVA,GACG,OAAVA,GAC2B,mBAA3BA,EAAM2D,YAAYC,MAzBI,IA0BtB5D,EAAM6D,iBAER,CCRA,SAASC,GAAmB9D,GAE3B,MACkB,iBAAVA,GACG,OAAVA,GAC2B,oBAA3BA,EAAM2D,YAAYC,MAzBI,KA0BtB5D,EAAM6D,iBAER,CCZA,SAASE,GAAcC,GACtB,IAAIC,EACAC,EACAC,EAGJ,IADAF,EAAM,KAELC,EAAIF,EAAGI,QACAC,MAIP,GADAF,EAAID,EAAElE,MACDsE,EAAmBH,IAAOA,EAAEI,QAAU,EAC1CN,EAAIO,KAAML,EAAG,GAAKA,EAAG,QACf,KAAKM,EAAeN,GAG1B,OAAO,IAAIO,UAAWC,EAAQ,kJAAmJR,IAFjLF,EAAIO,KAAMI,EAAOT,GAAKU,EAAOV,GAG7B,CAEF,OAAOF,CACR,CCnBA,SAASa,GAAiBd,EAAIe,EAAMC,GACnC,IAAIf,EACAC,EACAC,EACAc,EAIJ,IAFAhB,EAAM,GACNgB,GAAK,IAEJf,EAAIF,EAAGI,QACAC,MAKP,GAFAY,GAAK,EACLd,EAAIY,EAAKG,KAAMF,EAASd,EAAElE,MAAOiF,GAC5BX,EAAmBH,IAAOA,EAAEI,QAAU,EAC1CN,EAAIO,KAAML,EAAG,GAAKA,EAAG,QACf,KAAKM,EAAeN,GAG1B,OAAO,IAAIO,UAAWC,EAAQ,+IAAgJR,IAF9KF,EAAIO,KAAMI,EAAOT,GAAKU,EAAOV,GAG7B,CAEF,OAAOF,CACR,CC3BA,SAASkB,GAAWC,EAAK/E,GACxB,IAAIgF,EACAnB,EACAe,EACAK,EAIJ,IAFAD,EAAMhF,EAAIkE,OACVe,EAAI,EACEL,EAAI,EAAGA,EAAII,EAAKJ,IAAM,CAE3B,GADAf,EAAI7D,EAAK4E,IACHR,EAAeP,GACpB,OAAO,KAERkB,EAAKE,GAAMV,EAAOV,GAClBkB,EAAKE,EAAE,GAAMT,EAAOX,GACpBoB,GAAK,CACL,CACD,OAAOF,CACR,CCGA,IAAAvB,GAAA,EAAApC,GAAAoC,kBACA0B,GAAAC,IAYA,SAAAC,GAAAzF,GACA,OACAA,aAAAmC,IAEA,iBAAAnC,GACA,OAAAA,IAEA,mBAAAA,EAAA2D,YAAAC,MACA,oBAAA5D,EAAA2D,YAAAC,OAEA,iBAAA5D,EAAA0F,SAGA,iBAAA1F,EAAA2F,OAGA,CASA,SAAAC,GAAA5F,GACA,OACAA,IAAAmC,IAGA,oBAAAnC,EAAA4D,IAEA,CAUA,SAAAiC,GAAAT,EAAA9E,GAEA,OAAA,IAAAwF,EAAAV,EADA9E,GAAA,GACA8E,EAAA9E,EAAA,GACA,CAyEA,SAAA6B,KACA,IAAA4D,EACAC,EACAZ,EACAC,EAGA,GADAW,EAAAC,UAAA1B,SACA2B,gBAAA/D,IACA,OAAA,IAAA6D,EACA,IAAA7D,GAEA,IAAA6D,EACA,IAAA7D,GAAA8D,UAAA,IAEA,IAAAD,EACA,IAAA7D,GAAA8D,UAAA,GAAAA,UAAA,IAEA,IAAA9D,GAAA8D,UAAA,GAAAA,UAAA,GAAAA,UAAA,IAGA,GAAA,IAAAD,EACAZ,EAAA,IAAA3D,GAAA,QACA,GAAA,IAAAuE,EACA,GAAAG,EAAAF,UAAA,IACAb,EAAA,IAAA3D,GAAA,EAAAwE,UAAA,SACA,GAAAG,EAAAH,UAAA,IAKA,IAHAZ,GADAD,EAAAa,UAAA,IACA1B,SAGA8B,EAAAjB,IAAAX,EAAAW,EAAA,KAEA,GAAA,QADAA,EAAAD,GAAA,IAAA1D,GAAA,EAAA4D,GAAAD,IACA,CAEA,IAAAkB,EAAAjB,GACA,MAAA,IAAAkB,WAAA5B,EAAA,6GAAAU,IAGAD,EAAA,IAAA3D,GAAAwE,UAAA,GACA,MACA,CACA,GAAAvC,GAAA0B,GACAA,EAAAoB,EAAApB,EAAA,QACA,GAAAtB,GAAAsB,GACAA,EAAAqB,EAAArB,EAAA,QACA,IAAAkB,EAAAjB,GACA,MAAA,IAAAkB,WAAA5B,EAAA,6HAAAU,IAEAD,EAAA,IAAA3D,GAAA2D,EACA,MACA,GAAAsB,EAAAT,UAAA,IAAA,CAEA,IAAAU,GADAvB,EAAAa,UAAA,IACAW,WAAA/C,IACA,MAAA,IAAA0C,WAAA5B,EAAA,yFAAAd,GAAAuB,EAAAwB,aAEAxB,EAAA,IAAA3D,GAAA2D,EACA,KAAA,KAAAyB,EAAAZ,UAAA,IAkBA,MAAA,IAAAvB,UAAAC,EAAA,qHAAAsB,UAAA,KAhBA,GADAb,EAAAa,UAAA,IACA,IAAAV,GACA,MAAA,IAAAb,UAAAC,EAAA,mJAAAS,IAEA,IAAA0B,EAAA1B,EAAA2B,IACA,MAAA,IAAArC,UAAAC,EAAA,qHAAAS,IAGA,GADAA,EAAAA,EAAA2B,MACAD,EAAA1B,EAAAhB,MACA,MAAA,IAAAM,UAAAC,EAAA,qHAAAS,IAGA,IADAA,EAAArB,GAAAqB,cACA3C,MACA,MAAA2C,EAEAA,EAAA,IAAA3D,GAAA2D,EAGA,KACA,CAEA,IAAAsB,EADAtB,EAAAa,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,wEAAAS,IAGA,IAAAe,EADAJ,EAAAE,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,4EAAAoB,IAEA,IAAAY,EAAAZ,EAAAlC,IACA,MAAA,IAAA0C,WAAA5B,EAAA,uEAAAd,GAAAkC,IAEA,GAAA,IAAAC,EAAA,CAEA,GADAX,EAAAD,EAAAwB,WAAAb,GACAY,EAAAtB,EAAAxB,IACA,MAAA,IAAA0C,WAAA5B,EAAA,oGAAAd,GAAAwB,IAEAD,EAAA,IAAA3D,GAAA2D,EAAAW,EACA,KAAA,CAEA,IAAAI,EADAd,EAAAY,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,uEAAAU,IAEA,GAAAA,EAAAxB,GAAAuB,EAAAwB,WAAAb,EACA,MAAA,IAAAQ,WAAA5B,EAAA,iJAAAU,EAAAxB,KAEAuB,EAAA,IAAA3D,GAAA2D,EAAAW,EAAA,EAAAV,EACA,CACA,CAIA,OAHA2B,EAAAd,KAAA,UAAAd,GACA4B,EAAAd,KAAA,UAAAd,EAAAb,OAAA,GAEA2B,IACA,CCpQA,SAASnC,GAAcC,GACtB,IAAIC,EACAC,EACAC,EAGJ,IADAF,EAAM,KAELC,EAAIF,EAAGI,QACAC,MAIP,GADAF,EAAID,EAAElE,MACDsE,EAAmBH,IAAOA,EAAEI,QAAU,EAC1CN,EAAIO,KAAML,EAAG,GAAKA,EAAG,QACf,KAAKM,EAAeN,GAG1B,OAAO,IAAIO,UAAWC,EAAQ,kJAAmJR,IAFjLF,EAAIO,KAAMyC,EAAM9C,GAAK+C,EAAM/C,GAG3B,CAEF,OAAOF,CACR,CCnBA,SAASa,GAAiBd,EAAIe,EAAMC,GACnC,IAAIf,EACAC,EACAC,EACAc,EAIJ,IAFAhB,EAAM,GACNgB,GAAK,IAEJf,EAAIF,EAAGI,QACAC,MAKP,GAFAY,GAAK,EACLd,EAAIY,EAAKG,KAAMF,EAASd,EAAElE,MAAOiF,GAC5BX,EAAmBH,IAAOA,EAAEI,QAAU,EAC1CN,EAAIO,KAAML,EAAG,GAAKA,EAAG,QACf,KAAKM,EAAeN,GAG1B,OAAO,IAAIO,UAAWC,EAAQ,+IAAgJR,IAF9KF,EAAIO,KAAMyC,EAAM9C,GAAK+C,EAAM/C,GAG3B,CAEF,OAAOF,CACR,CC3BA,SAASkB,GAAWC,EAAK/E,GACxB,IAAIgF,EACAnB,EACAe,EACAK,EAIJ,IAFAD,EAAMhF,EAAIkE,OACVe,EAAI,EACEL,EAAI,EAAGA,EAAII,EAAKJ,IAAM,CAE3B,GADAf,EAAI7D,EAAK4E,IACHR,EAAeP,GACpB,OAAO,KAERkB,EAAKE,GAAM2B,EAAM/C,GACjBkB,EAAKE,EAAE,GAAM4B,EAAMhD,GACnBoB,GAAK,CACL,CACD,OAAOF,CACR,CHkQA4B,EAAA7E,GAAA,oBAAA0B,IAeAmD,EAAA7E,GAAA,OAAA,kBAmDA6E,EAAA7E,GAAA,QAAA,SAAAgF,GACA,IAAAnC,EACAgB,EACAjB,EACAd,EACAmB,EACAgC,EACAnH,EACAoF,EACAgC,EACAnD,EACAe,EACAK,EACA,IAAAwB,EAAAZ,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAkB,GAAAM,MACA,MAAA,IAAAxB,UAAA,6DAGA,IADAsB,EAAAC,UAAA1B,QACA,EAAA,CAEA,IAAAuC,EADA/B,EAAAkB,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,qEAAAI,IAEAiB,EAAA,IACAhB,EAAAiB,UAAA,GAEA,CACA,GAAAR,GAAA0B,GAAA,CAEA,GADA9B,EAAA8B,EAAA5C,OACAQ,EAAA,CAIA,IAFAK,GADAnB,EAAA,IAAAiC,KAAAb,IACAM,QACAL,EAAA,EACAL,EAAA,EAAAA,EAAAI,EAAAJ,IAAA,CAEA,GADAf,EAAAa,EAAAG,KAAAF,EAAAmC,EAAAlH,IAAAgF,GAAAA,GACAR,EAAAP,GACAkB,EAAAE,GAAAV,EAAAV,GACAkB,EAAAE,EAAA,GAAAT,EAAAX,OACA,MAAAI,EAAAJ,IAAAA,EAAAK,QAAA,GAIA,MAAA,IAAAG,UAAAC,EAAA,+IAAAT,IAHAkB,EAAAE,GAAApB,EAAA,GACAkB,EAAAE,EAAA,GAAApB,EAAA,EAGA,CACAoB,GAAA,CACA,CACA,OAAArB,CACA,CACA,OAAA,IAAAiC,KAAAiB,EACA,CACA,GAAAf,EAAAe,GAAA,CACA,GAAApC,EAAA,CAUA,IAPAM,EAAA8B,EAAA5C,OAEAtE,EADAkH,EAAAlH,KAAAkH,EAAAjH,IACAoH,GAAA,WAEArG,GAAA,WAGAgE,EAAA,EAAAA,EAAAI,EAAAJ,IACA,IAAAR,EAAAxE,EAAAkH,EAAAlC,IAAA,CACAoC,GAAA,EACA,KACA,CAGA,GAAAA,EAAA,CACA,IAAAf,EAAAjB,GACA,MAAA,IAAAkB,WAAA5B,EAAA,+FAAA,EAAAU,IAIA,IADAD,GADAnB,EAAA,IAAAiC,KAAAb,EAAA,IACAM,QACAV,EAAA,EAAAA,EAAAI,EAAAJ,IACAG,EAAAH,GAAAF,EAAAG,KAAAF,EAAA/E,EAAAkH,EAAAlC,GAAAA,GAEA,OAAAhB,CACA,CAKA,IAFAmB,GADAnB,EAAA,IAAAiC,KAAAb,IACAM,QACAL,EAAA,EACAL,EAAA,EAAAA,EAAAI,EAAAJ,IAAA,CAEA,GADAf,EAAAa,EAAAG,KAAAF,EAAA/E,EAAAkH,EAAAlC,GAAAA,GACAR,EAAAP,GACAkB,EAAAE,GAAAV,EAAAV,GACAkB,EAAAE,EAAA,GAAAT,EAAAX,OACA,MAAAI,EAAAJ,IAAAA,EAAAK,QAAA,GAIA,MAAA,IAAAG,UAAAC,EAAA,+IAAAT,IAHAkB,EAAAE,GAAApB,EAAA,GACAkB,EAAAE,EAAA,GAAApB,EAAA,EAGA,CACAoB,GAAA,CACA,CACA,OAAArB,CACA,CACA,OAAA,IAAAiC,KAAAiB,EACA,CACA,GAAAN,EAAAM,IAAA5B,IAAAuB,EAAAK,EAAAJ,IAAA,CAEA,GADA3B,EAAA+B,EAAAJ,MACAD,EAAA1B,EAAAhB,MACA,MAAA,IAAAM,UAAAC,EAAA,6FAAAwC,IAOA,IAJAC,EADArC,EACAD,GAAAM,EAAAL,EAAAC,GAEAjB,GAAAqB,cAEA3C,MACA,MAAA2E,EAKA,IADAhC,GADAnB,EAAA,IAAAiC,KADAb,EAAA+B,EAAA7C,OAAA,IAEAoB,QACAV,EAAA,EAAAA,EAAAI,EAAAJ,IACAG,EAAAH,GAAAmC,EAAAnC,GAEA,OAAAhB,CACA,CACA,MAAA,IAAAS,UAAAC,EAAA,6FAAAwC,GACA,IAoBAH,EAAA7E,GAAA,MAAA,WACA,IAAAoF,EACAtC,EACA,IAAA6B,EAAAZ,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAkB,GAAAM,MACA,MAAA,IAAAxB,UAAA,6DAGA,IADA6C,EAAA,GACAtC,EAAA,EAAAA,EAAAgB,UAAA1B,OAAAU,IACAsC,EAAA/C,KAAAyB,UAAAhB,IAEA,OAAA,IAAAiB,KAAAqB,EACA,IAuDAP,EAAA7E,GAAAqF,UAAA,MAAA,SAAAlH,GACA,IAAAmF,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAiC,EAAArG,GACA,MAAA,IAAAoE,UAAAC,EAAA,0DAAArE,IAKA,GAHAA,EAAA,IACAA,GAAA4F,KAAAR,WAEApF,EAAA,GAAAA,GAAA4F,KAAAR,SAGA,OAAAG,GAAAK,KAAAP,QAAArF,EACA,IAgBAmH,EAAAtF,GAAAqF,UAAA,UAAA,WACA,OAAAtB,KAAAP,QAAA+B,MACA,IAgBAD,EAAAtF,GAAAqF,UAAA,cAAA,WACA,OAAAtB,KAAAP,QAAAiB,UACA,IAgBAa,EAAAtF,GAAAqF,UAAA,cAAA,WACA,OAAAtB,KAAAP,QAAAI,UACA,IAiBAiB,EAAA7E,GAAAqF,UAAA,oBAAArF,GAAA0B,mBAuCAmD,EAAA7E,GAAAqF,UAAA,cAAA,SAAAG,EAAAC,GACA,IAAAnC,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAQA,OALA,IAAAuB,UAAA1B,OACA2B,KAAAP,QAAAkC,WAAA,EAAAF,EAAA,EAAAC,GAEA1B,KAAAP,QAAAkC,WAAA,EAAAF,EAAA,EAAAC,EAAA,EAAA3B,UAAA,IAEAC,IACA,IAqCAc,EAAA7E,GAAAqF,UAAA,WAAA,WACA,IAAAE,EACAI,EACAC,EACA1C,EACA2C,EACA/C,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAkBA,OAhBAoD,EAAA5B,KACAwB,EAAAxB,KAAAP,QACAN,EAAAa,KAAAR,QAGAT,GAAA,EACAK,GAAA,EAIA0B,EADAe,EAAA,CAAA,EACA,QAcA,WACA,IAAA5D,EAEA,GADAc,GAAA,EACA+C,GAAA/C,GAAAI,EACA,MAAA,CACAhB,MAAA,GAKA,OADAF,EAAA,IAAA2B,EAAA4B,EADApC,GAAA,GACAoC,EAAApC,EAAA,IACA,CACAtF,MAAA,CAAAiF,EAAAd,GACAE,MAAA,EAEA,IA3BA2C,EAAAe,EAAA,UAoCA,SAAA/H,GAEA,GADAgI,GAAA,EACA/B,UAAA1B,OACA,MAAA,CACAvE,MAAAA,EACAqE,MAAA,GAGA,MAAA,CACAA,MAAA,EAEA,IA7CA0C,GACAC,EAAAe,EAAAhB,GAoDA,WACA,OAAAe,EAAAG,SACA,IApDAF,CAqDA,IA+BAf,EAAA7E,GAAAqF,UAAA,SAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACA,IAAAiD,EAAAhD,KAAAF,EAAAa,GAAAT,EAAAH,GAAAA,EAAAiB,MACA,OAAA,EAGA,OAAA,CACA,IA0CAc,EAAA7E,GAAAqF,UAAA,QAAA,SAAAxH,EAAA4H,EAAAO,GACA,IAAA/C,EACAC,EACA/E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAAzE,GACA,MAAA,IAAA0E,UAAAC,EAAA,0EAAA3E,IAIA,GAFAoF,EAAAc,KAAAP,QACAN,EAAAa,KAAAR,QACAO,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAAiB,GACA,MAAA,IAAAlD,UAAAC,EAAA,qEAAAiD,IAQA,GANAA,EAAA,IACAA,GAAAvC,GACA,IACAuC,EAAA,GAGA3B,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAAwB,GACA,MAAA,IAAAzD,UAAAC,EAAA,oEAAAwD,IAEAA,EAAA,IACAA,GAAA9C,GACA,IACA8C,EAAA,GAGAA,EAAA9C,IACA8C,EAAA9C,EAEA,MACA8C,EAAA9C,CAEA,MACAuC,EAAA,EACAO,EAAA9C,EAIA,IAFA+C,EAAAxD,EAAA5E,GACAqI,EAAAxD,EAAA7E,GACAiF,EAAA2C,EAAA3C,EAAAkD,EAAAlD,IAEAG,EADA9E,EAAA,EAAA2E,GACAmD,EACAhD,EAAA9E,EAAA,GAAA+H,EAEA,OAAAnC,IACA,IA2CAc,EAAA7E,GAAAqF,UAAA,UAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAnB,EACAgB,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAIA,IAFA9C,EAAAc,KAAAP,QACA1B,EAAA,GACAgB,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAd,EAAA0B,GAAAT,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,OACAjC,EAAAO,KAAAL,GAGA,OAAA,IAAA+B,KAAAvC,YAAAM,EACA,IAsCA+C,EAAA7E,GAAAqF,UAAA,QAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IAEA,GADAd,EAAA0B,GAAAT,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAA/B,CAGA,IAgCA6C,EAAA7E,GAAAqF,UAAA,aAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IAEA,GADAd,EAAA0B,GAAAT,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAAjB,EAGA,OAAA,CACA,IAsCA+B,EAAA7E,GAAAqF,UAAA,YAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAAiB,KAAAR,QAAA,EAAAT,GAAA,EAAAA,IAEA,GADAd,EAAA0B,GAAAT,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAA/B,CAGA,IAgCA6C,EAAA7E,GAAAqF,UAAA,iBAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAAiB,KAAAR,QAAA,EAAAT,GAAA,EAAAA,IAEA,GADAd,EAAA0B,GAAAT,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAAjB,EAGA,OAAA,CACA,IA4BA+B,EAAA7E,GAAAqF,UAAA,WAAA,SAAAc,EAAAtD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAwB,GACA,MAAA,IAAA5D,UAAAC,EAAA,oEAAA2D,IAGA,IADAlD,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAd,EAAA0B,GAAAT,EAAAH,GACAqD,EAAApD,KAAAF,EAAAb,EAAAc,EAAAiB,KAEA,IAyCAc,EAAA7E,GAAAqF,UAAA,OAAA,SAAAlH,GACA,IAAAmF,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAyB,EAAA7F,GACA,MAAA,IAAAoE,UAAAC,EAAA,qEAAArE,IAEA,KAAAA,GAAA4F,KAAAR,SAGA,OAAAG,GAAAK,KAAAP,QAAArF,EACA,IAmCA0G,EAAA7E,GAAAqF,UAAA,YAAA,SAAAe,EAAAC,GACA,IAAApD,EACA9E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAA8D,GACA,MAAA,IAAA7D,UAAAC,EAAA,0EAAA4D,IAEA,GAAAtC,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAA6B,GACA,MAAA,IAAA9D,UAAAC,EAAA,qEAAA6D,IAEAA,EAAA,IACAA,GAAAtC,KAAAR,SACA,IACA8C,EAAA,EAGA,MACAA,EAAA,EAKA,IAHAJ,EAAAxD,EAAA2D,GACAF,EAAAxD,EAAA0D,GACAnD,EAAAc,KAAAP,QACAV,EAAAuD,EAAAvD,EAAAiB,KAAAR,QAAAT,IAEA,GAAAmD,IAAAhD,EADA9E,EAAA,EAAA2E,IACAoD,IAAAjD,EAAA9E,EAAA,GACA,OAAA,EAGA,OAAA,CACA,IAmCA0G,EAAA7E,GAAAqF,UAAA,WAAA,SAAAe,EAAAC,GACA,IAAApD,EACA9E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAA8D,GACA,MAAA,IAAA7D,UAAAC,EAAA,0EAAA4D,IAEA,GAAAtC,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAA6B,GACA,MAAA,IAAA9D,UAAAC,EAAA,qEAAA6D,IAEAA,EAAA,IACAA,GAAAtC,KAAAR,SACA,IACA8C,EAAA,EAGA,MACAA,EAAA,EAKA,IAHAJ,EAAAxD,EAAA2D,GACAF,EAAAxD,EAAA0D,GACAnD,EAAAc,KAAAP,QACAV,EAAAuD,EAAAvD,EAAAiB,KAAAR,QAAAT,IAEA,GAAAmD,IAAAhD,EADA9E,EAAA,EAAA2E,IACAoD,IAAAjD,EAAA9E,EAAA,GACA,OAAA2E,EAGA,OAAA,CACA,IAyBA+B,EAAA7E,GAAAqF,UAAA,QAAA,SAAAiB,GACA,IAAAxE,EACAmB,EACAsD,EACAzD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,GAAA,IAAAuB,UAAA1B,OACAmE,EAAA,QACA,KAAAC,EAAAF,GAGA,MAAA,IAAA/D,UAAAC,EAAA,kEAAA8D,IAFAC,EAAAD,CAGA,CAGA,IAFAxE,EAAA,GACAmB,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAhB,EAAAO,KAAAqB,GAAAT,EAAAH,GAAA2D,YAEA,OAAA3E,EAAA4E,KAAAH,EACA,IAsCA1B,EAAA7E,GAAAqF,UAAA,eAAA,SAAAe,EAAAC,GACA,IAAApD,EACA9E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAA8D,GACA,MAAA,IAAA7D,UAAAC,EAAA,0EAAA4D,IAEA,GAAAtC,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAA6B,GACA,MAAA,IAAA9D,UAAAC,EAAA,qEAAA6D,IAEAA,GAAAtC,KAAAR,QACA8C,EAAAtC,KAAAR,QAAA,EACA8C,EAAA,IACAA,GAAAtC,KAAAR,QAEA,MACA8C,EAAAtC,KAAAR,QAAA,EAKA,IAHA0C,EAAAxD,EAAA2D,GACAF,EAAAxD,EAAA0D,GACAnD,EAAAc,KAAAP,QACAV,EAAAuD,EAAAvD,GAAA,EAAAA,IAEA,GAAAmD,IAAAhD,EADA9E,EAAA,EAAA2E,IACAoD,IAAAjD,EAAA9E,EAAA,GACA,OAAA2E,EAGA,OAAA,CACA,IAgBAwC,EAAAtF,GAAAqF,UAAA,UAAA,WACA,OAAAtB,KAAAR,OACA,IAyCAsB,EAAA7E,GAAAqF,UAAA,OAAA,SAAAc,EAAAtD,GACA,IAAA8D,EACA1D,EACAnB,EACAgB,EACAf,EACA,IAAAuB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAwB,GACA,MAAA,IAAA5D,UAAAC,EAAA,oEAAA2D,IAKA,IAHAlD,EAAAc,KAAAP,QAEAmD,GADA7E,EAAA,IAAAiC,KAAAvC,YAAAuC,KAAAR,UACAC,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IAEA,GADAf,EAAAoE,EAAApD,KAAAF,EAAAa,GAAAT,EAAAH,GAAAA,EAAAiB,MACAzB,EAAAP,GACA4E,EAAA,EAAA7D,GAAAL,EAAAV,GACA4E,EAAA,EAAA7D,EAAA,GAAAJ,EAAAX,OACA,KAAAI,EAAAJ,IAAA,IAAAA,EAAAK,OAIA,MAAA,IAAAG,UAAAC,EAAA,+IAAAT,IAHA4E,EAAA,EAAA7D,GAAAf,EAAA,GACA4E,EAAA,EAAA7D,EAAA,GAAAf,EAAA,EAGA,CAEA,OAAAD,CACA,IAmDA+C,EAAA7E,GAAAqF,UAAA,WAAA,WACA,IAAApC,EACAgC,EACA/B,EACA0D,EACA9D,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAKA,IAHAW,EAAAa,KAAAR,QACAN,EAAAc,KAAAP,QACAoD,EAAAC,EAAA3D,EAAA,GACAJ,EAAA,EAAAA,EAAA8D,EAAA9D,IACAK,EAAAD,EAAAJ,EAAA,EACAmC,EAAAhC,EAAA,EAAAH,GACAG,EAAA,EAAAH,GAAAG,EAAA,EAAAE,GACAF,EAAA,EAAAE,GAAA8B,EACAA,EAAAhC,EAAA,EAAAH,EAAA,GACAG,EAAA,EAAAH,EAAA,GAAAG,EAAA,EAAAE,EAAA,GACAF,EAAA,EAAAE,EAAA,GAAA8B,EAEA,OAAAlB,IACA,IAgEAc,EAAA7E,GAAAqF,UAAA,OAAA,SAAAxH,GAEA,IAAAiJ,EACA3I,EACA8E,EACAgC,EACAC,EACA0B,EACA7E,EACAe,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAGA,GADAU,EAAAc,KAAAP,QACAM,UAAA1B,OAAA,GAEA,IAAA4B,EADA7F,EAAA2F,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,+EAAArE,SAGAA,EAAA,EAEA,GAAAmE,EAAAzE,GAAA,CACA,GAAAM,GAAA4F,KAAAR,QACA,MAAA,IAAAa,WAAA5B,EAAA,kEAAArE,IAKA,OAFA8E,EADA9E,GAAA,GACAsE,EAAA5E,QACAoF,EAAA9E,EAAA,GAAAuE,EAAA7E,GAEA,CACA,GAAAyF,GAAAzF,GAAA,CAEA,GAAAM,GADAyI,EAAA/I,EAAA0F,SACAQ,KAAAR,QACA,MAAA,IAAAa,WAAA,0FAMA,GAJA0C,EAAAjJ,EAAA2F,QAGAL,EAAAF,EAAAW,WAAAzF,EAAAuD,GAEAoF,EAAAvB,SAAAtC,EAAAsC,QAEAuB,EAAAlD,WAAAT,GACA2D,EAAAlD,WAAAkD,EAAArC,WAAAtB,EAEA,CAGA,IADA8B,EAAA,IAAA3F,GAAAwH,EAAA1E,QACAU,EAAA,EAAAA,EAAAgE,EAAA1E,OAAAU,IACAmC,EAAAnC,GAAAgE,EAAAhE,GAEAgE,EAAA7B,CACA,CAGA,IAFA9G,GAAA,EACAgF,EAAA,EACAL,EAAA,EAAAA,EAAA8D,EAAA9D,IACAG,EAAA9E,GAAA2I,EAAA3D,GACAF,EAAA9E,EAAA,GAAA2I,EAAA3D,EAAA,GACAhF,GAAA,EACAgF,GAAA,CAGA,KAhCA,CAiCA,IAAAc,EAAApG,GA2DA,MAAA,IAAA0E,UAAAC,EAAA,kIAAA3E,IAxDA,IADA+I,EAAA/I,EAAAuE,OACAU,EAAA,EAAAA,EAAA8D,EAAA9D,IACA,IAAAR,EAAAzE,EAAAiF,IAAA,CACAoC,GAAA,EACA,KACA,CAGA,GAAAA,EAAA,CACA,IAAAf,EAAAyC,GACA,MAAA,IAAAxC,WAAA5B,EAAA,6GAAAoE,IAEA,GAAAzI,EAAAyI,EAAA,EAAA7C,KAAAR,QACA,MAAA,IAAAa,WAAA,0FAMA,GAJA0C,EAAAjJ,EAGAsF,EAAAF,EAAAW,WAAAzF,EAAAuD,GAEAoF,EAAAvB,SAAAtC,EAAAsC,QAEAuB,EAAAlD,WAAAT,GACA2D,EAAAlD,WAAAkD,EAAArC,WAAAtB,EAEA,CAGA,IADA8B,EAAA,IAAA3F,GAAAsH,GACA9D,EAAA,EAAAA,EAAA8D,EAAA9D,IACAmC,EAAAnC,GAAAgE,EAAAhE,GAEAgE,EAAA7B,CACA,CAIA,IAHA9G,GAAA,EACAyI,GAAA,EACAzD,EAAA,EACAL,EAAA,EAAAA,EAAA8D,EAAA9D,IACAG,EAAA9E,GAAA2I,EAAA3D,GACAF,EAAA9E,EAAA,GAAA2I,EAAA3D,EAAA,GACAhF,GAAA,EACAgF,GAAA,EAEA,MACA,CAEA,GAAAhF,EAAAyI,EAAA7C,KAAAR,QACA,MAAA,IAAAa,WAAA,0FAGA,IADAjG,GAAA,EACA2E,EAAA,EAAAA,EAAA8D,EAAA9D,IACAf,EAAAlE,EAAAiF,GACAG,EAAA9E,GAAAsE,EAAAV,GACAkB,EAAA9E,EAAA,GAAAuE,EAAAX,GACA5D,GAAA,CAxDA,CA+DA,IA2EA0G,EAAA7E,GAAAqF,UAAA,SAAA,SAAAI,EAAAO,GACA,IAAAe,EACAJ,EACA7E,EACA3D,EACA8E,EACAC,EACAJ,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAIA,GAFAU,EAAAc,KAAAP,QACAN,EAAAa,KAAAR,QACA,IAAAO,UAAA1B,OACAqD,EAAA,EACAO,EAAA9C,MACA,CACA,IAAAsB,EAAAiB,GACA,MAAA,IAAAlD,UAAAC,EAAA,oEAAAiD,IAQA,GANAA,EAAA,IACAA,GAAAvC,GACA,IACAuC,EAAA,GAGA,IAAA3B,UAAA1B,OACA4D,EAAA9C,MACA,CACA,IAAAsB,EAAAwB,GACA,MAAA,IAAAzD,UAAAC,EAAA,qEAAAwD,IAEAA,EAAA,GACAA,GAAA9C,GACA,IACA8C,EAAA,GAEAA,EAAA9C,IACA8C,EAAA9C,EAEA,CACA,CAQA,IANA6D,EADAtB,EAAAO,EACAA,EAAAP,EAEA,EAGAkB,GADA7E,EAAA,IAAAiC,KAAAvC,YAAAuF,IACAvD,QACAV,EAAA,EAAAA,EAAAiE,EAAAjE,IACA3E,EAAA,GAAA2E,EAAA2C,GACAkB,EAAA,EAAA7D,GAAAG,EAAA9E,GACAwI,EAAA,EAAA7D,EAAA,GAAAG,EAAA9E,EAAA,GAEA,OAAA2D,CACA,IA+BA+C,EAAA7E,GAAAqF,UAAA,QAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACA,GAAAiD,EAAAhD,KAAAF,EAAAa,GAAAT,EAAAH,GAAAA,EAAAiB,MACA,OAAA,EAGA,OAAA,CACA,IA2EAc,EAAA7E,GAAAqF,UAAA,YAAA,SAAA2B,EAAAhB,GACA,IAAAiB,EACAhE,EACAC,EACA,IAAAI,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAIA,GAFAU,EAAAc,KAAAP,QACAN,EAAAa,KAAAR,QACA,IAAAO,UAAA1B,OACA4E,EAAA,EACAhB,EAAA9C,MACA,CACA,IAAAsB,EAAAwC,GACA,MAAA,IAAAzE,UAAAC,EAAA,oEAAAwE,IAQA,GANAA,EAAA,IACAA,GAAA9D,GACA,IACA8D,EAAA,GAGA,IAAAlD,UAAA1B,OACA4D,EAAA9C,MACA,CACA,IAAAsB,EAAAwB,GACA,MAAA,IAAAzD,UAAAC,EAAA,qEAAAwD,IAEAA,EAAA,GACAA,GAAA9C,GACA,IACA8C,EAAA,GAEAA,EAAA9C,IACA8C,EAAA9C,EAEA,CACA,CAWA,OAVA8D,GAAA9D,GACAA,EAAA,EACA+D,EAAAhE,EAAAwB,YACAuC,GAAAhB,GACA9C,EAAA,EACA+D,EAAAhE,EAAAW,WAAAoD,EAAAtF,KAEAwB,EAAA8C,EAAAgB,EACAC,EAAAhE,EAAAW,WAAAoD,EAAAtF,IAEA,IAAAqC,KAAAvC,YAAAyB,EAAAsC,OAAA0B,EAAA/D,EAAA,EAAA,EAAAA,EACA,IAmDA2B,EAAA7E,GAAAqF,UAAA,cAAA,WACA,IAAAsB,EACA7E,EACAoB,EACAD,EACAH,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAMA,IAJAW,EAAAa,KAAAR,QACAzB,EAAA,IAAAiC,KAAAvC,YAAA0B,GACAD,EAAAc,KAAAP,QACAmD,EAAA7E,EAAA0B,QACAV,EAAA,EAAAA,EAAAI,EAAAJ,IACAK,EAAAD,EAAAJ,EAAA,EACA6D,EAAA,EAAA7D,GAAAG,EAAA,EAAAE,GACAwD,EAAA,EAAA7D,EAAA,GAAAG,EAAA,EAAAE,EAAA,GAEA,OAAArB,CACA,IAoBA+C,EAAA7E,GAAAqF,UAAA,YAAA,WACA,IAAAvD,EACAmB,EACAH,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAIA,IAFAT,EAAA,GACAmB,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAhB,EAAAO,KAAAqB,GAAAT,EAAAH,GAAA2D,YAEA,OAAA3E,EAAA4E,KAAA,IACA,IAuCA7B,EAAA7E,GAAAqF,UAAA,QAAA,SAAA6B,EAAArJ,GACA,IAAAoF,EACAnB,EACAoB,EACA,IAAAI,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAiC,EAAA0C,GACA,MAAA,IAAA3E,UAAAC,EAAA,oEAAA0E,IAMA,GAJAhE,EAAAa,KAAAR,QACA2D,EAAA,IACAA,GAAAhE,GAEAgE,EAAA,GAAAA,GAAAhE,EACA,MAAA,IAAAkB,WAAA5B,EAAA,kEAAA0E,IAEA,IAAA5E,EAAAzE,GACA,MAAA,IAAA0E,UAAAC,EAAA,2EAAA3E,IAMA,OAHAoF,GADAnB,EAAA,IAAAiC,KAAAvC,YAAAuC,KAAAP,UACAA,SACA,EAAA0D,GAAAzE,EAAA5E,GACAoF,EAAA,EAAAiE,EAAA,GAAAxE,EAAA7E,GACAiE,CACA,IIv0EA,IAAAJ,GAAA,EAAAnC,GAAAmC,kBACA0B,GAAAC,IAYA,SAAAC,GAAAzF,GACA,OACAA,aAAAoC,IAEA,iBAAApC,GACA,OAAAA,IAEA,mBAAAA,EAAA2D,YAAAC,MACA,oBAAA5D,EAAA2D,YAAAC,OAEA,iBAAA5D,EAAA0F,SAGA,iBAAA1F,EAAA2F,OAGA,CASA,SAAAC,GAAA5F,GACA,OACAA,IAAAoC,IAGA,mBAAApC,EAAA4D,IAEA,CAUA,SAAA0F,GAAAlE,EAAA9E,GAEA,OAAA,IAAAiJ,EAAAnE,EADA9E,GAAA,GACA8E,EAAA9E,EAAA,GACA,CAyEA,SAAA8B,KACA,IAAA2D,EACAC,EACAZ,EACAC,EAGA,GADAW,EAAAC,UAAA1B,SACA2B,gBAAA9D,IACA,OAAA,IAAA4D,EACA,IAAA5D,GAEA,IAAA4D,EACA,IAAA5D,GAAA6D,UAAA,IAEA,IAAAD,EACA,IAAA5D,GAAA6D,UAAA,GAAAA,UAAA,IAEA,IAAA7D,GAAA6D,UAAA,GAAAA,UAAA,GAAAA,UAAA,IAGA,GAAA,IAAAD,EACAZ,EAAA,IAAA1D,GAAA,QACA,GAAA,IAAAsE,EACA,GAAAG,EAAAF,UAAA,IACAb,EAAA,IAAA1D,GAAA,EAAAuE,UAAA,SACA,GAAAG,EAAAH,UAAA,IAKA,IAHAZ,GADAD,EAAAa,UAAA,IACA1B,SAGA8B,EAAAjB,IAAAX,EAAAW,EAAA,KAEA,GAAA,QADAA,EAAAD,GAAA,IAAAzD,GAAA,EAAA2D,GAAAD,IACA,CAEA,IAAAkB,EAAAjB,GACA,MAAA,IAAAkB,WAAA5B,EAAA,6GAAAU,IAGAD,EAAA,IAAA1D,GAAAuE,UAAA,GACA,MACA,CACA,GAAAvC,GAAA0B,GACAA,EAAAoB,EAAApB,EAAA,QACA,GAAAtB,GAAAsB,GACAA,EAAAqB,EAAArB,EAAA,QACA,IAAAkB,EAAAjB,GACA,MAAA,IAAAkB,WAAA5B,EAAA,6HAAAU,IAEAD,EAAA,IAAA1D,GAAA0D,EACA,MACA,GAAAsB,EAAAT,UAAA,IAAA,CAEA,IAAAU,GADAvB,EAAAa,UAAA,IACAW,WAAA/C,IACA,MAAA,IAAA0C,WAAA5B,EAAA,yFAAAd,GAAAuB,EAAAwB,aAEAxB,EAAA,IAAA1D,GAAA0D,EACA,KAAA,KAAAyB,EAAAZ,UAAA,IAkBA,MAAA,IAAAvB,UAAAC,EAAA,qHAAAsB,UAAA,KAhBA,GADAb,EAAAa,UAAA,IACA,IAAAV,GACA,MAAA,IAAAb,UAAAC,EAAA,mJAAAS,IAEA,IAAA0B,EAAA1B,EAAA2B,IACA,MAAA,IAAArC,UAAAC,EAAA,qHAAAS,IAGA,GADAA,EAAAA,EAAA2B,MACAD,EAAA1B,EAAAhB,MACA,MAAA,IAAAM,UAAAC,EAAA,qHAAAS,IAGA,IADAA,EAAArB,GAAAqB,cACA3C,MACA,MAAA2C,EAEAA,EAAA,IAAA1D,GAAA0D,EAGA,KACA,CAEA,IAAAsB,EADAtB,EAAAa,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,wEAAAS,IAGA,IAAAe,EADAJ,EAAAE,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,4EAAAoB,IAEA,IAAAY,EAAAZ,EAAAlC,IACA,MAAA,IAAA0C,WAAA5B,EAAA,uEAAAd,GAAAkC,IAEA,GAAA,IAAAC,EAAA,CAEA,GADAX,EAAAD,EAAAwB,WAAAb,GACAY,EAAAtB,EAAAxB,IACA,MAAA,IAAA0C,WAAA5B,EAAA,oGAAAd,GAAAwB,IAEAD,EAAA,IAAA1D,GAAA0D,EAAAW,EACA,KAAA,CAEA,IAAAI,EADAd,EAAAY,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,uEAAAU,IAEA,GAAAA,EAAAxB,GAAAuB,EAAAwB,WAAAb,EACA,MAAA,IAAAQ,WAAA5B,EAAA,iJAAAU,EAAAxB,KAEAuB,EAAA,IAAA1D,GAAA0D,EAAAW,EAAA,EAAAV,EACA,CACA,CAIA,OAHA2B,EAAAd,KAAA,UAAAd,GACA4B,EAAAd,KAAA,UAAAd,EAAAb,OAAA,GAEA2B,IACA,CAeAc,EAAA5E,GAAA,oBAAAyB,IAeAmD,EAAA5E,GAAA,OAAA,mBAmDA4E,EAAA5E,GAAA,QAAA,SAAA+E,GACA,IAAAnC,EACAgB,EACAjB,EACAd,EACAmB,EACAgC,EACAnH,EACAoF,EACAgC,EACAnD,EACAe,EACAK,EACA,IAAAwB,EAAAZ,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAkB,GAAAM,MACA,MAAA,IAAAxB,UAAA,6DAGA,IADAsB,EAAAC,UAAA1B,QACA,EAAA,CAEA,IAAAuC,EADA/B,EAAAkB,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,qEAAAI,IAEAiB,EAAA,IACAhB,EAAAiB,UAAA,GAEA,CACA,GAAAR,GAAA0B,GAAA,CAEA,GADA9B,EAAA8B,EAAA5C,OACAQ,EAAA,CAIA,IAFAK,GADAnB,EAAA,IAAAiC,KAAAb,IACAM,QACAL,EAAA,EACAL,EAAA,EAAAA,EAAAI,EAAAJ,IAAA,CAEA,GADAf,EAAAa,EAAAG,KAAAF,EAAAmC,EAAAlH,IAAAgF,GAAAA,GACAR,EAAAP,GACAkB,EAAAE,GAAA2B,EAAA/C,GACAkB,EAAAE,EAAA,GAAA4B,EAAAhD,OACA,MAAAI,EAAAJ,IAAAA,EAAAK,QAAA,GAIA,MAAA,IAAAG,UAAAC,EAAA,+IAAAT,IAHAkB,EAAAE,GAAApB,EAAA,GACAkB,EAAAE,EAAA,GAAApB,EAAA,EAGA,CACAoB,GAAA,CACA,CACA,OAAArB,CACA,CACA,OAAA,IAAAiC,KAAAiB,EACA,CACA,GAAAf,EAAAe,GAAA,CACA,GAAApC,EAAA,CAUA,IAPAM,EAAA8B,EAAA5C,OAEAtE,EADAkH,EAAAlH,KAAAkH,EAAAjH,IACAoH,GAAA,WAEArG,GAAA,WAGAgE,EAAA,EAAAA,EAAAI,EAAAJ,IACA,IAAAR,EAAAxE,EAAAkH,EAAAlC,IAAA,CACAoC,GAAA,EACA,KACA,CAGA,GAAAA,EAAA,CACA,IAAAf,EAAAjB,GACA,MAAA,IAAAkB,WAAA5B,EAAA,gGAAAU,IAIA,IADAD,GADAnB,EAAA,IAAAiC,KAAAb,EAAA,IACAM,QACAV,EAAA,EAAAA,EAAAI,EAAAJ,IACAG,EAAAH,GAAAF,EAAAG,KAAAF,EAAA/E,EAAAkH,EAAAlC,GAAAA,GAEA,OAAAhB,CACA,CAKA,IAFAmB,GADAnB,EAAA,IAAAiC,KAAAb,IACAM,QACAL,EAAA,EACAL,EAAA,EAAAA,EAAAI,EAAAJ,IAAA,CAEA,GADAf,EAAAa,EAAAG,KAAAF,EAAA/E,EAAAkH,EAAAlC,GAAAA,GACAR,EAAAP,GACAkB,EAAAE,GAAA2B,EAAA/C,GACAkB,EAAAE,EAAA,GAAA4B,EAAAhD,OACA,MAAAI,EAAAJ,IAAAA,EAAAK,QAAA,GAIA,MAAA,IAAAG,UAAAC,EAAA,+IAAAT,IAHAkB,EAAAE,GAAApB,EAAA,GACAkB,EAAAE,EAAA,GAAApB,EAAA,EAGA,CACAoB,GAAA,CACA,CACA,OAAArB,CACA,CACA,OAAA,IAAAiC,KAAAiB,EACA,CACA,GAAAN,EAAAM,IAAA5B,IAAAuB,EAAAK,EAAAJ,IAAA,CAEA,GADA3B,EAAA+B,EAAAJ,MACAD,EAAA1B,EAAAhB,MACA,MAAA,IAAAM,UAAAC,EAAA,6FAAAwC,IAOA,IAJAC,EADArC,EACAD,GAAAM,EAAAL,EAAAC,GAEAjB,GAAAqB,cAEA3C,MACA,MAAA2E,EAKA,IADAhC,GADAnB,EAAA,IAAAiC,KADAb,EAAA+B,EAAA7C,OAAA,IAEAoB,QACAV,EAAA,EAAAA,EAAAI,EAAAJ,IACAG,EAAAH,GAAAmC,EAAAnC,GAEA,OAAAhB,CACA,CACA,MAAA,IAAAS,UAAAC,EAAA,6FAAAwC,GACA,IAoBAH,EAAA5E,GAAA,MAAA,WACA,IAAAmF,EACAtC,EACA,IAAA6B,EAAAZ,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAkB,GAAAM,MACA,MAAA,IAAAxB,UAAA,6DAGA,IADA6C,EAAA,GACAtC,EAAA,EAAAA,EAAAgB,UAAA1B,OAAAU,IACAsC,EAAA/C,KAAAyB,UAAAhB,IAEA,OAAA,IAAAiB,KAAAqB,EACA,IAwDAP,EAAA5E,GAAAoF,UAAA,MAAA,SAAAlH,GACA,IAAAmF,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAiC,EAAArG,GACA,MAAA,IAAAoE,UAAAC,EAAA,0DAAArE,IAKA,GAHAA,EAAA,IACAA,GAAA4F,KAAAR,WAEApF,EAAA,GAAAA,GAAA4F,KAAAR,SAGA,OAAA4D,GAAApD,KAAAP,QAAArF,EACA,IAgBAmH,EAAArF,GAAAoF,UAAA,UAAA,WACA,OAAAtB,KAAAP,QAAA+B,MACA,IAgBAD,EAAArF,GAAAoF,UAAA,cAAA,WACA,OAAAtB,KAAAP,QAAAiB,UACA,IAgBAa,EAAArF,GAAAoF,UAAA,cAAA,WACA,OAAAtB,KAAAP,QAAAI,UACA,IAiBAiB,EAAA5E,GAAAoF,UAAA,oBAAApF,GAAAyB,mBAuCAmD,EAAA5E,GAAAoF,UAAA,cAAA,SAAAG,EAAAC,GACA,IAAAnC,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAQA,OALA,IAAAuB,UAAA1B,OACA2B,KAAAP,QAAAkC,WAAA,EAAAF,EAAA,EAAAC,GAEA1B,KAAAP,QAAAkC,WAAA,EAAAF,EAAA,EAAAC,EAAA,EAAA3B,UAAA,IAEAC,IACA,IAqCAc,EAAA5E,GAAAoF,UAAA,WAAA,WACA,IAAAE,EACAI,EACAC,EACA1C,EACA2C,EACA/C,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAkBA,OAhBAoD,EAAA5B,KACAwB,EAAAxB,KAAAP,QACAN,EAAAa,KAAAR,QAGAT,GAAA,EACAK,GAAA,EAIA0B,EADAe,EAAA,CAAA,EACA,QAcA,WACA,IAAA5D,EAEA,GADAc,GAAA,EACA+C,GAAA/C,GAAAI,EACA,MAAA,CACAhB,MAAA,GAKA,OADAF,EAAA,IAAAoF,EAAA7B,EADApC,GAAA,GACAoC,EAAApC,EAAA,IACA,CACAtF,MAAA,CAAAiF,EAAAd,GACAE,MAAA,EAEA,IA3BA2C,EAAAe,EAAA,UAoCA,SAAA/H,GAEA,GADAgI,GAAA,EACA/B,UAAA1B,OACA,MAAA,CACAvE,MAAAA,EACAqE,MAAA,GAGA,MAAA,CACAA,MAAA,EAEA,IA7CA0C,GACAC,EAAAe,EAAAhB,GAoDA,WACA,OAAAe,EAAAG,SACA,IApDAF,CAqDA,IA+BAf,EAAA5E,GAAAoF,UAAA,SAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACA,IAAAiD,EAAAhD,KAAAF,EAAAsE,GAAAlE,EAAAH,GAAAA,EAAAiB,MACA,OAAA,EAGA,OAAA,CACA,IA0CAc,EAAA5E,GAAAoF,UAAA,QAAA,SAAAxH,EAAA4H,EAAAO,GACA,IAAA/C,EACAC,EACA/E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAAzE,GACA,MAAA,IAAA0E,UAAAC,EAAA,0EAAA3E,IAIA,GAFAoF,EAAAc,KAAAP,QACAN,EAAAa,KAAAR,QACAO,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAAiB,GACA,MAAA,IAAAlD,UAAAC,EAAA,qEAAAiD,IAQA,GANAA,EAAA,IACAA,GAAAvC,GACA,IACAuC,EAAA,GAGA3B,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAAwB,GACA,MAAA,IAAAzD,UAAAC,EAAA,oEAAAwD,IAEAA,EAAA,IACAA,GAAA9C,GACA,IACA8C,EAAA,GAGAA,EAAA9C,IACA8C,EAAA9C,EAEA,MACA8C,EAAA9C,CAEA,MACAuC,EAAA,EACAO,EAAA9C,EAIA,IAFA+C,EAAAnB,EAAAjH,GACAqI,EAAAnB,EAAAlH,GACAiF,EAAA2C,EAAA3C,EAAAkD,EAAAlD,IAEAG,EADA9E,EAAA,EAAA2E,GACAmD,EACAhD,EAAA9E,EAAA,GAAA+H,EAEA,OAAAnC,IACA,IA2CAc,EAAA5E,GAAAoF,UAAA,UAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAnB,EACAgB,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAIA,IAFA9C,EAAAc,KAAAP,QACA1B,EAAA,GACAgB,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAd,EAAAmF,GAAAlE,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,OACAjC,EAAAO,KAAAL,GAGA,OAAA,IAAA+B,KAAAvC,YAAAM,EACA,IAqCA+C,EAAA5E,GAAAoF,UAAA,QAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IAEA,GADAd,EAAAmF,GAAAlE,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAA/B,CAGA,IA+BA6C,EAAA5E,GAAAoF,UAAA,aAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IAEA,GADAd,EAAAmF,GAAAlE,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAAjB,EAGA,OAAA,CACA,IAqCA+B,EAAA5E,GAAAoF,UAAA,YAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAAiB,KAAAR,QAAA,EAAAT,GAAA,EAAAA,IAEA,GADAd,EAAAmF,GAAAlE,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAA/B,CAGA,IA+BA6C,EAAA5E,GAAAoF,UAAA,iBAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAAiB,KAAAR,QAAA,EAAAT,GAAA,EAAAA,IAEA,GADAd,EAAAmF,GAAAlE,EAAAH,GACAiD,EAAAhD,KAAAF,EAAAb,EAAAc,EAAAiB,MACA,OAAAjB,EAGA,OAAA,CACA,IA4BA+B,EAAA5E,GAAAoF,UAAA,WAAA,SAAAc,EAAAtD,GACA,IAAAI,EACAH,EACAd,EACA,IAAAsB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAwB,GACA,MAAA,IAAA5D,UAAAC,EAAA,oEAAA2D,IAGA,IADAlD,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAd,EAAAmF,GAAAlE,EAAAH,GACAqD,EAAApD,KAAAF,EAAAb,EAAAc,EAAAiB,KAEA,IAyCAc,EAAA5E,GAAAoF,UAAA,OAAA,SAAAlH,GACA,IAAAmF,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAyB,EAAA7F,GACA,MAAA,IAAAoE,UAAAC,EAAA,qEAAArE,IAEA,KAAAA,GAAA4F,KAAAR,SAGA,OAAA4D,GAAApD,KAAAP,QAAArF,EACA,IAgBAmH,EAAArF,GAAAoF,UAAA,UAAA,WACA,OAAAtB,KAAAR,OACA,IAmCAsB,EAAA5E,GAAAoF,UAAA,YAAA,SAAAe,EAAAC,GACA,IAAApD,EACA9E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAA8D,GACA,MAAA,IAAA7D,UAAAC,EAAA,0EAAA4D,IAEA,GAAAtC,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAA6B,GACA,MAAA,IAAA9D,UAAAC,EAAA,qEAAA6D,IAEAA,EAAA,IACAA,GAAAtC,KAAAR,SACA,IACA8C,EAAA,EAGA,MACAA,EAAA,EAKA,IAHAJ,EAAAnB,EAAAsB,GACAF,EAAAnB,EAAAqB,GACAnD,EAAAc,KAAAP,QACAV,EAAAuD,EAAAvD,EAAAiB,KAAAR,QAAAT,IAEA,GAAAmD,IAAAhD,EADA9E,EAAA,EAAA2E,IACAoD,IAAAjD,EAAA9E,EAAA,GACA,OAAA,EAGA,OAAA,CACA,IAmCA0G,EAAA5E,GAAAoF,UAAA,WAAA,SAAAe,EAAAC,GACA,IAAApD,EACA9E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAA8D,GACA,MAAA,IAAA7D,UAAAC,EAAA,0EAAA4D,IAEA,GAAAtC,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAA6B,GACA,MAAA,IAAA9D,UAAAC,EAAA,qEAAA6D,IAEAA,EAAA,IACAA,GAAAtC,KAAAR,SACA,IACA8C,EAAA,EAGA,MACAA,EAAA,EAKA,IAHAJ,EAAAnB,EAAAsB,GACAF,EAAAnB,EAAAqB,GACAnD,EAAAc,KAAAP,QACAV,EAAAuD,EAAAvD,EAAAiB,KAAAR,QAAAT,IAEA,GAAAmD,IAAAhD,EADA9E,EAAA,EAAA2E,IACAoD,IAAAjD,EAAA9E,EAAA,GACA,OAAA2E,EAGA,OAAA,CACA,IAyBA+B,EAAA5E,GAAAoF,UAAA,QAAA,SAAAiB,GACA,IAAAxE,EACAmB,EACAsD,EACAzD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,GAAA,IAAAuB,UAAA1B,OACAmE,EAAA,QACA,KAAAC,EAAAF,GAGA,MAAA,IAAA/D,UAAAC,EAAA,kEAAA8D,IAFAC,EAAAD,CAGA,CAGA,IAFAxE,EAAA,GACAmB,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAhB,EAAAO,KAAA8E,GAAAlE,EAAAH,GAAA2D,YAEA,OAAA3E,EAAA4E,KAAAH,EACA,IAsCA1B,EAAA5E,GAAAoF,UAAA,eAAA,SAAAe,EAAAC,GACA,IAAApD,EACA9E,EACA8H,EACAC,EACApD,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAD,EAAA8D,GACA,MAAA,IAAA7D,UAAAC,EAAA,0EAAA4D,IAEA,GAAAtC,UAAA1B,OAAA,EAAA,CACA,IAAAoC,EAAA6B,GACA,MAAA,IAAA9D,UAAAC,EAAA,qEAAA6D,IAEAA,GAAAtC,KAAAR,QACA8C,EAAAtC,KAAAR,QAAA,EACA8C,EAAA,IACAA,GAAAtC,KAAAR,QAEA,MACA8C,EAAAtC,KAAAR,QAAA,EAKA,IAHA0C,EAAAnB,EAAAsB,GACAF,EAAAnB,EAAAqB,GACAnD,EAAAc,KAAAP,QACAV,EAAAuD,EAAAvD,GAAA,EAAAA,IAEA,GAAAmD,IAAAhD,EADA9E,EAAA,EAAA2E,IACAoD,IAAAjD,EAAA9E,EAAA,GACA,OAAA2E,EAGA,OAAA,CACA,IAyCA+B,EAAA5E,GAAAoF,UAAA,OAAA,SAAAc,EAAAtD,GACA,IAAA8D,EACA1D,EACAnB,EACAgB,EACAf,EACA,IAAAuB,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAwB,GACA,MAAA,IAAA5D,UAAAC,EAAA,oEAAA2D,IAKA,IAHAlD,EAAAc,KAAAP,QAEAmD,GADA7E,EAAA,IAAAiC,KAAAvC,YAAAuC,KAAAR,UACAC,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IAEA,GADAf,EAAAoE,EAAApD,KAAAF,EAAAsE,GAAAlE,EAAAH,GAAAA,EAAAiB,MACAzB,EAAAP,GACA4E,EAAA,EAAA7D,GAAAgC,EAAA/C,GACA4E,EAAA,EAAA7D,EAAA,GAAAiC,EAAAhD,OACA,KAAAI,EAAAJ,IAAA,IAAAA,EAAAK,OAIA,MAAA,IAAAG,UAAAC,EAAA,+IAAAT,IAHA4E,EAAA,EAAA7D,GAAAf,EAAA,GACA4E,EAAA,EAAA7D,EAAA,GAAAf,EAAA,EAGA,CAEA,OAAAD,CACA,IAmDA+C,EAAA5E,GAAAoF,UAAA,WAAA,WACA,IAAApC,EACAgC,EACA/B,EACA0D,EACA9D,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAKA,IAHAW,EAAAa,KAAAR,QACAN,EAAAc,KAAAP,QACAoD,EAAAC,EAAA3D,EAAA,GACAJ,EAAA,EAAAA,EAAA8D,EAAA9D,IACAK,EAAAD,EAAAJ,EAAA,EACAmC,EAAAhC,EAAA,EAAAH,GACAG,EAAA,EAAAH,GAAAG,EAAA,EAAAE,GACAF,EAAA,EAAAE,GAAA8B,EACAA,EAAAhC,EAAA,EAAAH,EAAA,GACAG,EAAA,EAAAH,EAAA,GAAAG,EAAA,EAAAE,EAAA,GACAF,EAAA,EAAAE,EAAA,GAAA8B,EAEA,OAAAlB,IACA,IAgEAc,EAAA5E,GAAAoF,UAAA,OAAA,SAAAxH,GAEA,IAAAiJ,EACA3I,EACA8E,EACAgC,EACAC,EACA0B,EACA7E,EACAe,EACAK,EACA,IAAAG,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAGA,GADAU,EAAAc,KAAAP,QACAM,UAAA1B,OAAA,GAEA,IAAA4B,EADA7F,EAAA2F,UAAA,IAEA,MAAA,IAAAvB,UAAAC,EAAA,+EAAArE,SAGAA,EAAA,EAEA,GAAAmE,EAAAzE,GAAA,CACA,GAAAM,GAAA4F,KAAAR,QACA,MAAA,IAAAa,WAAA5B,EAAA,kEAAArE,IAKA,OAFA8E,EADA9E,GAAA,GACA2G,EAAAjH,QACAoF,EAAA9E,EAAA,GAAA4G,EAAAlH,GAEA,CACA,GAAAyF,GAAAzF,GAAA,CAEA,GAAAM,GADAyI,EAAA/I,EAAA0F,SACAQ,KAAAR,QACA,MAAA,IAAAa,WAAA,0FAMA,GAJA0C,EAAAjJ,EAAA2F,QAGAL,EAAAF,EAAAW,WAAAzF,EAAAuD,GAEAoF,EAAAvB,SAAAtC,EAAAsC,QAEAuB,EAAAlD,WAAAT,GACA2D,EAAAlD,WAAAkD,EAAArC,WAAAtB,EAEA,CAGA,IADA8B,EAAA,IAAA1F,GAAAuH,EAAA1E,QACAU,EAAA,EAAAA,EAAAgE,EAAA1E,OAAAU,IACAmC,EAAAnC,GAAAgE,EAAAhE,GAEAgE,EAAA7B,CACA,CAGA,IAFA9G,GAAA,EACAgF,EAAA,EACAL,EAAA,EAAAA,EAAA8D,EAAA9D,IACAG,EAAA9E,GAAA2I,EAAA3D,GACAF,EAAA9E,EAAA,GAAA2I,EAAA3D,EAAA,GACAhF,GAAA,EACAgF,GAAA,CAGA,KAhCA,CAiCA,IAAAc,EAAApG,GA2DA,MAAA,IAAA0E,UAAAC,EAAA,kIAAA3E,IAxDA,IADA+I,EAAA/I,EAAAuE,OACAU,EAAA,EAAAA,EAAA8D,EAAA9D,IACA,IAAAR,EAAAzE,EAAAiF,IAAA,CACAoC,GAAA,EACA,KACA,CAGA,GAAAA,EAAA,CACA,IAAAf,EAAAyC,GACA,MAAA,IAAAxC,WAAA5B,EAAA,6GAAAoE,IAEA,GAAAzI,EAAAyI,EAAA,EAAA7C,KAAAR,QACA,MAAA,IAAAa,WAAA,0FAMA,GAJA0C,EAAAjJ,EAGAsF,EAAAF,EAAAW,WAAAzF,EAAAuD,GAEAoF,EAAAvB,SAAAtC,EAAAsC,QAEAuB,EAAAlD,WAAAT,GACA2D,EAAAlD,WAAAkD,EAAArC,WAAAtB,EAEA,CAGA,IADA8B,EAAA,IAAA1F,GAAAqH,GACA9D,EAAA,EAAAA,EAAA8D,EAAA9D,IACAmC,EAAAnC,GAAAgE,EAAAhE,GAEAgE,EAAA7B,CACA,CAIA,IAHA9G,GAAA,EACAyI,GAAA,EACAzD,EAAA,EACAL,EAAA,EAAAA,EAAA8D,EAAA9D,IACAG,EAAA9E,GAAA2I,EAAA3D,GACAF,EAAA9E,EAAA,GAAA2I,EAAA3D,EAAA,GACAhF,GAAA,EACAgF,GAAA,EAEA,MACA,CAEA,GAAAhF,EAAAyI,EAAA7C,KAAAR,QACA,MAAA,IAAAa,WAAA,0FAGA,IADAjG,GAAA,EACA2E,EAAA,EAAAA,EAAA8D,EAAA9D,IACAf,EAAAlE,EAAAiF,GACAG,EAAA9E,GAAA2G,EAAA/C,GACAkB,EAAA9E,EAAA,GAAA4G,EAAAhD,GACA5D,GAAA,CAxDA,CA+DA,IA+BA0G,EAAA5E,GAAAoF,UAAA,QAAA,SAAAU,EAAAlD,GACA,IAAAI,EACAH,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAoC,EAAAoB,GACA,MAAA,IAAAxD,UAAAC,EAAA,oEAAAuD,IAGA,IADA9C,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACA,GAAAiD,EAAAhD,KAAAF,EAAAsE,GAAAlE,EAAAH,GAAAA,EAAAiB,MACA,OAAA,EAGA,OAAA,CACA,IA2EAc,EAAA5E,GAAAoF,UAAA,YAAA,SAAA2B,EAAAhB,GACA,IAAAiB,EACAhE,EACAC,EACA,IAAAI,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAIA,GAFAU,EAAAc,KAAAP,QACAN,EAAAa,KAAAR,QACA,IAAAO,UAAA1B,OACA4E,EAAA,EACAhB,EAAA9C,MACA,CACA,IAAAsB,EAAAwC,GACA,MAAA,IAAAzE,UAAAC,EAAA,oEAAAwE,IAQA,GANAA,EAAA,IACAA,GAAA9D,GACA,IACA8D,EAAA,GAGA,IAAAlD,UAAA1B,OACA4D,EAAA9C,MACA,CACA,IAAAsB,EAAAwB,GACA,MAAA,IAAAzD,UAAAC,EAAA,qEAAAwD,IAEAA,EAAA,GACAA,GAAA9C,GACA,IACA8C,EAAA,GAEAA,EAAA9C,IACA8C,EAAA9C,EAEA,CACA,CAWA,OAVA8D,GAAA9D,GACAA,EAAA,EACA+D,EAAAhE,EAAAwB,YACAuC,GAAAhB,GACA9C,EAAA,EACA+D,EAAAhE,EAAAW,WAAAoD,EAAAtF,KAEAwB,EAAA8C,EAAAgB,EACAC,EAAAhE,EAAAW,WAAAoD,EAAAtF,IAEA,IAAAqC,KAAAvC,YAAAyB,EAAAsC,OAAA0B,EAAA/D,EAAA,EAAA,EAAAA,EACA,IAoBA2B,EAAA5E,GAAAoF,UAAA,YAAA,WACA,IAAAvD,EACAmB,EACAH,EACA,IAAAQ,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAIA,IAFAT,EAAA,GACAmB,EAAAc,KAAAP,QACAV,EAAA,EAAAA,EAAAiB,KAAAR,QAAAT,IACAhB,EAAAO,KAAA8E,GAAAlE,EAAAH,GAAA2D,YAEA,OAAA3E,EAAA4E,KAAA,IACA,IAuCA7B,EAAA5E,GAAAoF,UAAA,QAAA,SAAA6B,EAAArJ,GACA,IAAAoF,EACAnB,EACAoB,EACA,IAAAI,GAAAS,MACA,MAAA,IAAAxB,UAAA,6DAEA,IAAAiC,EAAA0C,GACA,MAAA,IAAA3E,UAAAC,EAAA,oEAAA0E,IAMA,GAJAhE,EAAAa,KAAAR,QACA2D,EAAA,IACAA,GAAAhE,GAEAgE,EAAA,GAAAA,GAAAhE,EACA,MAAA,IAAAkB,WAAA5B,EAAA,kEAAA0E,IAEA,IAAA5E,EAAAzE,GACA,MAAA,IAAA0E,UAAAC,EAAA,2EAAA3E,IAMA,OAHAoF,GADAnB,EAAA,IAAAiC,KAAAvC,YAAAuC,KAAAP,UACAA,SACA,EAAA0D,GAAApC,EAAAjH,GACAoF,EAAA,EAAAiE,EAAA,GAAAnC,EAAAlH,GACAiE,CACA,IC/oEA,IAAIuF,GAAQ,CACX9H,GACAD,GACAI,GACAG,GACAJ,GACAG,GACAD,GACAG,GACAC,GACAC,GACAC,IC1BGqH,GAAS,CACZ,UACA,UACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,YACA,cCFGC,GAASD,GAAOlF,OAkBpB,SAASrD,GAAOlB,GACf,IAAIiF,EACJ,GAAKoB,EAASrG,GACb,MAAO,UAER,GAAK2J,EAAU3J,GACd,OAAO,KAER,IAAMiF,EAAI,EAAGA,EAAIyE,GAAQzE,IACxB,GAAKjF,aAAiBwJ,GAAOvE,GAC5B,OAAOwE,GAAQxE,GAIjB,OAAO2E,GAAYC,EAAiB7J,KAAa,IAClD,CCNA,SAAS8J,GAAWC,GACnB,IAAIC,EAAK9I,GAAO6I,GAChB,OAAKhK,GAAiBgK,GACd,CACNE,kBAAoB,EACpBH,UAAa,CACZxC,GAAgB0C,GAChBE,GAAgBF,KAIZ,CACNC,kBAAoB,EACpBH,UAAa,CACZ7I,GAAQ+I,GACR3I,GAAQ2I,IAGX,CCNA,SAASG,GAAe9J,GACvB,IAAI+J,EACJ,KAAOlE,gBAAgBiE,IACtB,OAAO,IAAIA,GAAe9J,GAE3B,IAAM+F,EAAc/F,GACnB,MAAM,IAAIqE,UAAWC,EAAQ,oEAAqEtE,IAMnG,OAJA+J,EAAIN,GAAWzJ,GACf6F,KAAKP,QAAUtF,EACf6F,KAAKmE,QAAUD,EAAEN,UAAW,GAC5B5D,KAAKoE,QAAUF,EAAEN,UAAW,GACrB5D,IACR,CCrCA,SAASqE,GAAkBR,GAC1B,IAAIK,EAAIN,GAAWC,GACnB,MAAO,CACNS,KAAQT,EACRE,iBAAoBG,EAAEH,iBACtBH,UAAaM,EAAEN,UAEjB,CCJA,SAASW,GAAUV,GAClB,IAAI9E,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,GAAK8E,EAAG9E,GACP,OAAO,EAGT,OAAO,CACR,CCjBA,SAASyF,GAAUX,EAAG/J,GACrB,IAAIqF,EACApF,EACA+J,EACA/E,EAeJ,IAZA+E,EAAK9I,GAAO6I,GAIX9J,EADIF,GAAiBgK,GACfzC,GAAgB0C,GAEhB/I,GAAQ+I,GAGf3E,EAAM0E,EAAExF,OAGFU,EAAI,EAAGA,EAAII,EAAKJ,IACrB,GAAKhF,EAAK8J,EAAG9E,KAAQjF,EACpB,OAAO,EAGT,OAAO,CACR,CCrBA,SAAS2K,GAASZ,GACjB,IAAI9J,EACAoF,EACA2E,EAEJ,IAAM5D,EAAc2D,GACnB,MAAM,IAAIrF,UAAWC,EAAQ,oEAAqEoF,IAYnG,OATAC,EAAK9I,GAAO6I,GAGPhK,GAAiBgK,KACrB9J,EAAMqH,GAAgB0C,IAGvB3E,EAAM0E,EAAExF,YAES,IAARtE,EAYT,SAAmBD,GAClB,IAAIiF,EACJ,IAAMA,EAAI,EAAGA,EAAII,EAAKJ,IACrB,GAAK8E,EAAG9E,KAAQjF,EACf,OAAO,EAGT,OAAO,CACP,EAQD,SAAoBA,GACnB,IAAIiF,EACJ,IAAMA,EAAI,EAAGA,EAAII,EAAKJ,IACrB,GAAKhF,EAAK8J,EAAG9E,KAAQjF,EACpB,OAAO,EAGT,OAAO,CACP,CACF,CC9CA,SAASyK,GAAUV,EAAGa,GACrB,IAAI3F,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,IAAM4F,EAAad,EAAG9E,GAAK2F,EAAG3F,IAC7B,OAAO,EAGT,OAAO,CACR,CLqCA+B,EAAamD,GAAe,OAAQ,iBASpCW,EAAsBX,GAAc3C,UAAW,UA3D/C,WACC,OAAOtB,KAAKP,QAAQpB,MACrB,IAZA,SAAoBc,GACnBa,KAAKP,QAAQpB,OAASc,CACvB,IAqFA2B,EAAamD,GAAc3C,UAAW,OAAO,SAAclH,GAC1D,OAAO4F,KAAKmE,QAASnE,KAAKP,QAASrF,EACpC,IAwBA0G,EAAamD,GAAc3C,UAAW,OAAO,SAAcxH,EAAOM,GAC5D2F,UAAU1B,OAAS,EACvB2B,KAAKoE,QAASpE,KAAKP,QAAS,EAAG3F,GAGhCkG,KAAKoE,QAASpE,KAAKP,QAASrF,EAAKN,EAClC,IMvHAgH,EAAA+D,GAAA,UAAAJ,ICHA,IAAAK,GAAA,CAAA,ECOA,SAASC,GAAelB,GACvB,IAAIC,EAAK9I,GAAO6I,GAChB,OAAKhK,GAAiBgK,GACdzC,GAAgB0C,GAEjB/I,GAAQ+I,EAChB,CCdA,SAASkB,GAASnB,EAAGa,EAAGzG,EAAGgH,EAAOC,EAAOC,EAAK/C,GAC7C,IAAIgD,EACAC,EACAtG,EAOJ,GALAqG,EAAIF,EAAOC,IAGXE,EAAIF,EAAM,KAECF,EAQX,IAAMlG,EAAI,EAAGA,EAAIqG,EAAGrG,IACnBiG,GAASnB,EAAG9E,GAAK2F,EAAG3F,GAAKd,EAAGc,GAAKkG,EAAOC,EAAOG,EAAGjD,QAPlD,IAAMrD,EAAI,EAAGA,EAAIqG,EAAGrG,IACnBd,EAAGc,GAAMqD,EAAKyB,EAAG9E,GAAK2F,EAAG3F,GAQ5B,CCxBA,SAASuG,GAAMzB,GACd,IAAI9F,EACAoB,EACAJ,EAIJ,IAFAI,EAAM0E,EAAExF,OACRN,EAAM,GACAgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBhB,EAAIO,KAAMuF,EAAG9E,IAEd,OAAOhB,CACR,CCNA,SAASwH,GAAQzL,EAAOqF,GACvB,IAAIhF,EACA4E,EAIJ,IADA5E,EAAM,GACA4E,EAAI,EAAGA,EAAII,EAAKJ,IACrB5E,EAAImE,KAAMxE,GAEX,OAAOK,CACR,CCVA,SAASqL,GAAOrG,GACf,OAAOoG,GAAQ,EAAKpG,EACrB,CC8CA,SAASsG,GAAgB5B,EAAG6B,EAASC,GACpC,IAAIrB,EACAa,EACAS,EACA/C,EACAgD,EACAR,EACAtG,EACAK,EAIJ,IAFAyD,EAAI8C,EAAStH,SACbwH,EAAIH,EAAQrH,QAEX,MAAM,IAAI9B,MAAO,gKAIlB,IADA+H,EAAOT,EACD9E,EAAI8G,EAAG9G,EAAI8D,EAAG9D,IACnBuF,EAAO,CAAEA,GAOV,IAHAsB,EAAKJ,GAAO3C,GAGN9D,EAAI8D,EAAE,EAAG9D,GAAK,EAAGA,IAEtB,MADAK,EAAIyG,EAAIhD,EAAI9D,GACH,GAAT,CAMA,GAFAsG,EAAIK,EAAStG,GAEA,KADb+F,EAAMQ,EAAU5G,KACEoG,EAAME,EACvB,MAAM,IAAI9I,MAAOkC,EAAQ,8PAA+P6G,GAAMI,GAAU/C,KAAM,MAAQ2C,GAAMK,GAAWhD,KAAM,MAAQ5D,IAEtV,GAAKsG,IAAMF,EAEVS,EAAI7G,GAAM,MACJ,IAAW,IAANsG,EAKX,MAAM,IAAI9I,MAAOkC,EAAQ,2IAA4I6G,GAAMI,GAAU/C,KAAM,MAAQ2C,GAAMK,GAAWhD,KAAM,MAAQ5D,IAHlO6G,EAAI7G,GAAM,CAIV,CAfA,CAkBF,MAAO,CACN+G,IAAOjC,EACPS,KAAQA,EACRY,MAASI,GAAMK,GACfI,QAAWH,EAEb,CCtGA,SAASN,GAAMzB,GACd,IAAI9F,EACAoB,EACApF,EACAgF,EAUJ,IAPAhF,EAAMgL,GAAelB,GAGrB1E,EAAM0E,EAAExF,OAGRN,EAAM,GACAgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBhB,EAAIO,KAAMvE,EAAK8J,EAAG9E,IAEnB,OAAOhB,CACR,CC8BA,SAASiI,GAAiBnC,GACzB,IAAI9E,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,GAAK,EAC/B,IAAQ8E,EAAG9E,KAAO8E,EAAG9E,EAAE,GACtB,OAAO,EAGT,OAAO,CACR,CCzDA,SAASkH,GAAU9G,EAAKN,EAAMC,GAC7B,IAAI3E,EACA4E,EAIJ,IADA5E,EAAM,GACA4E,EAAI,EAAGA,EAAII,EAAKJ,IACrB5E,EAAImE,KAAMO,EAAKG,KAAMF,EAASC,IAE/B,OAAO5E,CACR,CCJA,SAAS+L,GAAUpM,EAAOoL,GACzB,IAAI/K,EACAgM,EACAC,EACArH,EAOJ,IALAoH,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GAGZ/K,EAAM,GACA4E,EAAI,EAAGA,EAAIqH,EAAIrH,IACpB5E,EAAImE,KAAMiH,GAAQzL,EAAOqM,IAE1B,OAAOhM,CACR,CCfA,SAASkM,GAAUvM,EAAOoL,GACzB,IAAInH,EACAuI,EACAH,EACAC,EACAG,EACAC,EACAC,EAQJ,IANAN,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GAGZnH,EAAM,GACAyI,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCG,EAAK,EAAGA,EAAKL,EAAIK,IACtBH,EAAGhI,KAAMiH,GAAQzL,EAAOqM,IAEzBpI,EAAIO,KAAMgI,EACV,CACD,OAAOvI,CACR,CCvBA,SAAS2I,GAAU5M,EAAOoL,GACzB,IAAInH,EACAuI,EACAK,EACAR,EACAC,EACAG,EACAK,EACAH,EACAD,EACAK,EASJ,IAPAV,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GAGZnH,EAAM,GACA8I,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCH,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCG,EAAK,EAAGA,EAAKL,EAAIK,IACtBH,EAAGhI,KAAMiH,GAAQzL,EAAOqM,IAEzBQ,EAAGrI,KAAMgI,EACT,CACDvI,EAAIO,KAAMqI,EACV,CACD,OAAO5I,CACR,CC/BA,SAAS+I,GAAUhN,EAAOoL,GACzB,IAAInH,EACAuI,EACAK,EACAI,EACAZ,EACAC,EACAG,EACAK,EACAI,EACAP,EACAD,EACAK,EACAI,EAUJ,IARAd,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GAGZnH,EAAM,GACAkJ,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCF,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCH,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCG,EAAK,EAAGA,EAAKL,EAAIK,IACtBH,EAAGhI,KAAMiH,GAAQzL,EAAOqM,IAEzBQ,EAAGrI,KAAMgI,EACT,CACDS,EAAGzI,KAAMqI,EACT,CACD5I,EAAIO,KAAMyI,EACV,CACD,OAAOhJ,CACR,CC3CA,SAASiH,GAASlL,EAAOmL,EAAOC,EAAOC,EAAKpH,GAC3C,IAAIqH,EACAC,EACAtG,EAMJ,GAJAqG,EAAIF,EAAOC,IAGXE,EAAIF,EAAM,KACCF,EACV,OAAOM,GAAQzL,EAAOsL,GAIvB,IAAMrG,EAAI,EAAGA,EAAIqG,EAAGrG,IACnBhB,EAAIO,KAAM0G,GAASlL,EAAOmL,EAAOC,EAAOG,EAAG,KAE5C,OAAOtH,CACR,CAwBA,SAASmJ,GAAUpN,EAAOoL,GACzB,OAAOF,GAASlL,EAAOoL,EAAM7G,OAAQ6G,EAAO,EAAG,GAChD,CC/CA,SAASF,GAASC,EAAOC,EAAOC,EAAKgC,EAASpJ,EAAKc,EAAMC,GACxD,IAAI1E,EACA0H,EACAsD,EACAC,EACAtG,EAOJ,IAHA+C,GADAuD,EAAIF,EAAM,KACIF,EAEdG,EAAIF,EAAOC,GACLpG,EAAI,EAAGA,EAAIqG,EAAGrG,KACnB3E,EAAM+M,EAAQC,SACV9I,KAAMS,GACL+C,EACJ/D,EAAIO,KAAMO,EAAKG,KAAMF,EAAS1E,IAE9B2D,EAAIO,KAAM0G,GAASC,EAAOC,EAAOG,EAAGjL,EAAK,GAAIyE,EAAMC,IAGrD,OAAOf,CACR,CfXA+C,EAAAgE,GAAA,WAAAN,IAUA1D,EAAAgE,GAAA,iBFiFA,SAAwBjB,EAAGa,GAC1B,IAAI5C,EACAuF,EACAC,EACAC,EACAC,EAEJ,OAAK3D,EAAExF,SAAWqG,EAAErG,SAGpBgJ,EAAKhD,GAAkBR,GACvByD,EAAKjD,GAAkBK,GAClB2C,EAAGtD,kBAAoBuD,EAAGvD,kBAC9BjC,EAAM,EAGDlE,GAAmBiG,IACvB0D,EAAKhH,EAAgBsD,EAAG,GACxB/B,GAAO,GACItE,GAAkBqG,KAC7B0D,EAAKjH,EAAeuD,EAAG,GACvB/B,GAAO,GAEHlE,GAAmB8G,IACvB8C,EAAKjH,EAAgBmE,EAAG,GACxB5C,GAAO,GACItE,GAAkBkH,KAC7B8C,EAAKlH,EAAeoE,EAAG,GACvB5C,GAAO,GAEK,IAARA,EACGyC,GAAUgD,EAAIC,GA5ExB,SAAoB3D,EAAGa,GACtB,IAAI+C,EACAC,EACAC,EACAC,EACA7I,EAQJ,IANA0I,EAAQ5D,EAAES,KACVoD,EAAQhD,EAAEJ,KAEVqD,EAAO9D,EAAED,UAAW,GACpBgE,EAAOlD,EAAEd,UAAW,GAEd7E,EAAI,EAAGA,EAAI0I,EAAMpJ,OAAQU,IAC9B,IAAM4F,EAAagD,EAAMF,EAAO1I,GAAK6I,EAAMF,EAAO3I,IACjD,OAAO,EAGT,OAAO,CACR,CA2DS6E,CAAWyD,EAAIC,IAEhB/C,GAAUV,EAAGa,GACrB,IE3GA5D,EAAAgE,GAAA,kBAAAjL,IAUAiH,EAAAgE,GAAA,mBAAAtH,IAUAsD,EAAAgE,GAAA,oBAAAlH,IgB/BA,SAAS0H,GAAMzB,EAAGhB,EAAG9E,EAAK8J,EAAQ3E,GACjC,IAAInE,EACJ,IAAMA,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBhB,EAAKmF,GAAWW,EAAG9E,GACnBmE,GAAU2E,CAEZ,CAeA,SAASC,GAAsBjE,EAAGoB,EAAOC,EAAOC,EAAKpH,EAAK8J,EAAQ3E,GACjE,IAAIpB,EACAsD,EACAC,EACAtG,EAOJ,IAHA+C,GADAuD,EAAIF,EAAM,KACIF,EAEdG,EAAIF,EAAOC,GACLpG,EAAI,EAAGA,EAAIqG,EAAGrG,IACd+C,GACJ/D,EAAKmF,GAAWW,EAAG9E,GACnBmE,GAAU2E,GAEV3E,EAAS4E,GAAsBjE,EAAG9E,GAAKkG,EAAOC,EAAOG,EAAGtH,EAAK8J,EAAQ3E,GAGvE,OAAOA,CACR,CAqFA,SAAS6E,GAASlE,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,GACzD,IAAI+B,EAAQC,EAAM7G,OAClB,OAAe,IAAV4G,EACGlH,EAEO,IAAVkH,GAEJK,GAAMzB,EAAGqB,EAAO,GAAKnH,EAAK8J,EAAQ3E,GAC3BnF,GAEHiK,GAlFN,SAAiCnE,EAAGoB,EAAOC,EAAOnH,EAAK8J,EAAQ3E,GAC9D,IAAI/D,EACA+B,EACA+G,EACAC,EACAC,EACA/I,EACAL,EAwBJ,IAfA+I,GAAsBjE,EAAGoB,EAAOC,EAAO,EADvChE,EAAMsE,GAHNrG,EAAMiJ,EAAOlD,IAIkC,EAAG,GAMlDiD,EAAKE,EAAenD,EAHpB+C,EAAM,aAON3C,GAAMJ,EAAOD,EADbiD,EAAK1C,GAAOP,GACY,EAAG,GAC3BqD,EAAMrD,EAAOiD,EAAI,GACjBI,EAAMrD,EAAOkD,EAAI,GAGXpJ,EAAI,EAAGA,EAAII,EAAKJ,IACrBK,EAAImJ,EAAWL,EAAIC,EAAI,EAAGF,EAAKlJ,EA9GtB,SA+GThB,EAAKmF,GAAWhC,EAAK9B,GACrB8D,GAAU2E,CAEZ,CA+CEW,CAAwB3E,EAAGoB,EAAOC,EAAOnH,EAAK8J,EAAQ3E,GAC/CnF,IAER+J,GAAsBjE,EAAGoB,EAAOC,EAAO,EAAGnH,EAAK8J,EAAQ3E,GAChDnF,EACR,CChJA,SAASgK,GAASlE,EAAGqB,EAAO8C,GAE3B,OAAOS,GAAQ5E,EAAGqB,EAAO8C,EADfxC,GAAO4C,EAAOlD,IACuB,EAAG,EACnD,CCQApE,EAAA+D,GAAA,SAAA4D,ICyBA,SAASX,GAAsBY,EAAM7E,EAAGoB,EAAOC,EAAOC,EAAKgC,EAASpJ,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC9F,IAAIgD,EACA1H,EACAgL,EACAC,EACAtG,EAOJ,IAHA+C,GADAuD,EAAIF,EAAM,KACIF,EAEdG,EAAIF,EAAOC,GACLpG,EAAI,EAAGA,EAAIqG,EAAGrG,KACnB3E,EAAM+M,EAAQC,SACV9I,KAAMS,GACL+C,GACJ/D,EAAKmF,GAAWrE,EAAKG,KAAMF,EAAS+E,EAAG9E,GAAK3E,EAAKsO,GACjDxF,GAAU2E,GAEV3E,EAAS4E,GAAsBY,EAAM7E,EAAG9E,GAAKkG,EAAOC,EAAOG,EAAGjL,EAAK2D,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAGhG,OAAOoE,CACR,CAgGA,SAASyF,GAAW9E,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GACzE,IAAImG,EAAQC,EAAM7G,OAClB,OAAe,IAAV4G,EACGlH,EAEO,IAAVkH,GArJN,SAAiBpB,EAAGhB,EAAG9E,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GACjD,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBhB,EAAKmF,GAAWrE,EAAKG,KAAMF,EAAS+E,EAAG9E,GAAK,CAAEA,GAAK8E,GACnDX,GAAU2E,CAEZ,CAiJEe,CAAQ/E,EAAGqB,EAAO,GAAKnH,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC3Cf,GAEHiK,GA3FN,SAAiCnE,EAAGoB,EAAOC,EAAOnH,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC5E,IAAIK,EACA+B,EACA+G,EACAC,EACAC,EACA/I,EACAL,EAuBJ,IAdA+I,GAAsBjE,EAAGA,EAAGoB,EAAOC,EAAO,EAAG,GAD7ChE,EAAMsE,GAHNrG,EAAMiJ,EAAOlD,IAIyC,EAAG,EAAGrG,EAAMC,GAMlEqJ,EAAKE,EAAenD,EAHpB+C,EAAM,aAMNC,EAAK5C,GAAMJ,GACXoD,EAAMrD,EAAOiD,EAAI,GACjBI,EAAMrD,EAAOkD,EAAI,GAGXpJ,EAAI,EAAGA,EAAII,EAAKJ,IACrBK,EAAImJ,EAAWL,EAAIC,EAAI,EAAGF,EAAKlJ,EA5HtB,SA6HThB,EAAKmF,GAAWhC,EAAK9B,GACrB8D,GAAU2E,CAEZ,CAyDEW,CAAwB3E,EAAGoB,EAAOC,EAAOnH,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC7Df,IAER+J,GAAsBjE,EAAGA,EAAGoB,EAAOC,EAAO,EAAG,GAAInH,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GACrEf,EACR,CCjKA,SAAS4K,GAAW9E,EAAGqB,EAAO8C,EAAiBnJ,EAAMC,GAEpD,OAAO2J,GAAQ5E,EAAGqB,EAAO8C,EADfxC,GAAO4C,EAAOlD,IACuB,EAAG,EAAGrG,EAAMC,EAC5D,CCpBA,SAAS+J,GAAWhF,EAAGqB,EAAO8C,GAC7B,IAAIjK,EACAoI,EACAC,EACA0C,EACArC,EACAsC,EAUJ,GAPA5C,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB1I,EAAIO,KAAMuF,EAAG4C,GAAMqC,IAGrB,OAAO/K,CACP,CACD,IAAM0I,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKlF,EAAG4C,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMyK,EAAID,IAGhB,OAAO/K,CACR,CCrBA,SAASiL,GAAanF,EAAGqB,EAAO8C,EAAiBnJ,EAAMC,GACtD,IAAIf,EACAoI,EACAC,EACA0C,EACArC,EACAsC,EAUJ,GAPA5C,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB1I,EAAIO,KAAMO,EAAKG,KAAMF,EAAS+E,EAAG4C,GAAMqC,GAAM,CAAErC,EAAIqC,GAAMjF,IAG3D,OAAO9F,CACP,CACD,IAAM0I,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKlF,EAAG4C,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMO,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAErC,EAAIqC,GAAMjF,IAGtD,OAAO9F,CACR,CCzCA,SAASkL,GAAWpF,EAAGqB,EAAO8C,GAC7B,IAAIjK,EACAoI,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAuC,EACAzC,EAWJ,GARAH,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtBzI,EAAIO,KAAMuF,EAAG2C,GAAMC,GAAMqC,IAI5B,OAAO/K,CACP,CACD,IAAMyI,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKzC,EAAG2C,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMyK,EAAID,IAIjB,OAAO/K,CACR,CC5BA,SAASmL,GAAarF,EAAGqB,EAAO8C,EAAiBnJ,EAAMC,GACtD,IAAIf,EACAoI,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAuC,EACAzC,EAWJ,GARAH,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtBzI,EAAIO,KAAMO,EAAKG,KAAMF,EAAS+E,EAAG2C,GAAMC,GAAMqC,GAAM,CAAEtC,EAAIC,EAAIqC,GAAMjF,IAItE,OAAO9F,CACP,CACD,IAAMyI,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKzC,EAAG2C,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMO,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAEtC,EAAIC,EAAIqC,GAAMjF,IAI3D,OAAO9F,CACR,CCpDA,SAASoL,GAAWtF,EAAGqB,EAAO8C,GAC7B,IAAIjK,EACAoI,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACAkC,EACAzC,EACAK,EAYJ,GATAR,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB9I,EAAIO,KAAMuF,EAAGgD,GAAML,GAAMC,GAAMqC,IAKnC,OAAO/K,CACP,CACD,IAAM8I,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAK9C,EAAGgD,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMyK,EAAID,IAKlB,OAAO/K,CACR,CCrCA,SAASqL,GAAavF,EAAGqB,EAAO8C,EAAiBnJ,EAAMC,GACtD,IAAIf,EACAoI,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACAkC,EACAzC,EACAK,EAYJ,GATAR,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB9I,EAAIO,KAAMO,EAAKG,KAAMF,EAAS+E,EAAGgD,GAAML,GAAMC,GAAMqC,GAAM,CAAEjC,EAAIL,EAAIC,EAAIqC,GAAMjF,IAKjF,OAAO9F,CACP,CACD,IAAM8I,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAK9C,EAAGgD,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMO,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAEjC,EAAIL,EAAIC,EAAIqC,GAAMjF,IAKhE,OAAO9F,CACR,CC3DA,SAASsL,GAAWxF,EAAGqB,EAAO8C,GAC7B,IAAIjK,EACAoI,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACA8B,EACAzC,EACAK,EACAI,EAaJ,GAVAZ,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMI,EAAK,EAAGA,EAAKD,EAAIC,IACtBlJ,EAAIO,KAAMuF,EAAGoD,GAAMJ,GAAML,GAAMC,GAAMqC,IAM1C,OAAO/K,CACP,CACD,IAAMkJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKlD,EAAGoD,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKI,EAAIF,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMyK,EAAID,IAMnB,OAAO/K,CACR,CChDA,SAASuL,GAAazF,EAAGqB,EAAO8C,EAAiBnJ,EAAMC,GACtD,IAAIf,EACAoI,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACA8B,EACAzC,EACAK,EACAI,EAaJ,GAVAZ,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GAGZnH,EAAM,GAGDiK,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMI,EAAK,EAAGA,EAAKD,EAAIC,IACtBlJ,EAAIO,KAAMO,EAAKG,KAAMF,EAAS+E,EAAGoD,GAAMJ,GAAML,GAAMC,GAAMqC,GAAM,CAAE7B,EAAIJ,EAAIL,EAAIC,EAAIqC,GAAMjF,IAM5F,OAAO9F,CACP,CACD,IAAMkJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKlD,EAAGoD,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKI,EAAIF,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAIO,KAAMO,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAE7B,EAAIJ,EAAIL,EAAIC,EAAIqC,GAAMjF,IAMrE,OAAO9F,CACR,CC9EA,SAASwL,GAAU1F,GAClB,IAAI9F,EACAyL,EACAC,EACAhD,EACAqC,EAGJ,IADA/K,EAAM,GACA0I,EAAK,EAAGA,EAAK5C,EAAExF,OAAQoI,IAAO,CAGnC,IADAgD,EAAK,GACCX,GAFNU,EAAK3F,EAAG4C,IAEMpI,OAAO,EAAGyK,GAAM,EAAGA,IAChCW,EAAGnL,KAAMkL,EAAIV,IAEd/K,EAAIO,KAAMmL,EACV,CACD,OAAO1L,CACR,CCZA,SAAS2L,GAAU7F,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMiL,GAAU1F,EAAG9E,KAExB,OAAOhB,CACR,CCTA,SAAS4L,GAAU9F,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMoL,GAAU7F,EAAG9E,KAExB,OAAOhB,CACR,CCdA,SAAS6L,GAAU/F,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI8E,EAAExF,OAAO,EAAGU,GAAK,EAAGA,IAC7BhB,EAAIO,KAAMuF,EAAG9E,IAEd,OAAOhB,CACR,CCJA,SAAS8L,GAAUhG,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMsL,GAAU/F,EAAG9E,KAExB,OAAOhB,CACR,CCTA,SAAS+L,GAAUjG,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMuL,GAAUhG,EAAG9E,KAExB,OAAOhB,CACR,CCbA,SAASgM,GAAWC,EAAIC,EAAIC,GAC3B,IAAI/P,EACAgF,EACAJ,EAGJ,IADAI,EAAMgL,GAAQF,EAAGD,GAAOE,KACZ,EACX,MAAO,CAAEF,GAGV,IADA7P,EAAM,CAAE6P,GACFjL,EAAI,EAAGA,EAAII,EAAKJ,IACrB5E,EAAImE,KAAM0L,EAAME,EAAUnL,GAE3B,OAAO5E,CACR,CCdA,SAASiQ,GAAUC,EAAGC,EAAGnL,GACxB,IAAIhF,EACA0I,EACAwC,EACAtG,EAEJ,GAAa,IAARI,EACJ,MAAO,GAQR,IAJAkG,GAAMiF,EAAED,IADRxH,EAAI1D,EAAM,GAIVhF,EAAM,CAAEoQ,EAAK,GAAIF,IACXtL,EAAI,EAAGA,EAAI8D,EAAG9D,IACnB5E,EAAImE,KAAMiM,EAAK,GAAIF,EAAGhF,EAAEtG,IAGzB,OADA5E,EAAImE,KAAMiM,EAAK,GAAID,IACZnQ,CACR,CCfA,SAASqQ,GAAO3G,EAAGqB,EAAO9C,EAAKtD,GAC9B,IAAIqH,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA/E,EAKJ,IAHAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZR,EAAI,GACE+B,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA+C,EAAK3F,EAAG4C,GACRgD,EAAK,GACCX,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAGnL,KAAM8D,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAErC,EAAIqC,GAAMjF,IAEnDa,EAAEpG,KAAMmL,EACR,CACD,OAAO/E,CACR,CCrBA,SAAS+F,GAAO5G,EAAGqB,EAAO9C,EAAKtD,GAC9B,IAAIqH,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAC,EACAO,EACAU,EACAhG,EAMJ,IAJAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZR,EAAI,GACE8B,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFAwD,EAAKnG,EAAG2C,GACRkE,EAAK,GACCjE,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAK,GACCX,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAGnL,KAAM8D,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAEtC,EAAIC,EAAIqC,GAAMjF,IAEvD6G,EAAGpM,KAAMmL,EACT,CACD/E,EAAEpG,KAAMoM,EACR,CACD,OAAOhG,CACR,CC/BA,SAASiG,GAAO9G,EAAGqB,EAAO9C,EAAKtD,GAC9B,IAAIqH,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAC,EACAO,EACAU,EACAT,EACAW,EACAlG,EAOJ,IALAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZR,EAAI,GACEmC,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFAoD,EAAKpG,EAAGgD,GACR+D,EAAK,GACCpE,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFAwD,EAAKC,EAAIzD,GACTkE,EAAK,GACCjE,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAK,GACCX,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAGnL,KAAM8D,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAEjC,EAAIL,EAAIC,EAAIqC,GAAMjF,IAE3D6G,EAAGpM,KAAMmL,EACT,CACDmB,EAAGtM,KAAMoM,EACT,CACDhG,EAAEpG,KAAMsM,EACR,CACD,OAAOlG,CACR,CCzCA,SAASmG,GAAOhH,EAAGqB,EAAO9C,EAAKtD,GAC9B,IAAIqH,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAC,EACAO,EACAU,EACAT,EACAW,EACAE,EACAC,EACArG,EAQJ,IANAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GACZR,EAAI,GACEuC,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFA6D,EAAKjH,EAAGoD,GACR8D,EAAK,GACClE,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFAoD,EAAKa,EAAIjE,GACT+D,EAAK,GACCpE,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFAwD,EAAKC,EAAIzD,GACTkE,EAAK,GACCjE,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAK,GACCX,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAGnL,KAAM8D,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAE7B,EAAIJ,EAAIL,EAAIC,EAAIqC,GAAMjF,IAE/D6G,EAAGpM,KAAMmL,EACT,CACDmB,EAAGtM,KAAMoM,EACT,CACDK,EAAGzM,KAAMsM,EACT,CACDlG,EAAEpG,KAAMyM,EACR,CACD,OAAOrG,CACR,CC7CA,SAASH,GAAUV,GAClB,IAAI9E,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,GAAK8E,EAAG9E,GACP,OAAO,EAGT,OAAO,CACR,CC1BA,SAASiM,GAAOC,GACf,IAAI9Q,EACA4E,EAGJ,GADA5E,EAAM,GACD8Q,GAAK,EACT,OAAO9Q,EAER,IAAM4E,EAAI,EAAGA,EAAIkM,EAAE,EAAGlM,IACrB5E,EAAImE,KAAMS,GAEX,OAAO5E,CACR,CCmDA,SAAS+Q,GAASnN,EAAKuG,EAAMuD,EAAQ3E,GACpC,IAAIlF,EACAmN,EACApM,EAKJ,IAHAoM,EAAa,EAATtD,EACJ9I,EAAa,EAATmE,EACJlF,EAAI,EACIe,GAAK,GAAKA,EAAIuF,EAAKjG,QAC1BiG,EAAMvF,GAAMf,EACZsG,EAAMvF,EAAE,GAAM,EACdA,GAAKoM,EACLnN,GAAK,EAEN,OAAOD,CACR,CClCA+C,EAAA+D,GAAA,SAAA4D,ICZA3H,EAAA+D,GAAA,UCXA,SAAoBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,GAC3D,IAAIiD,EACAC,EACA0C,EACArC,EACAsC,EACAqC,EAQJ,GALAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB1I,EAAKqN,GAAOvH,EAAG4C,GAAMqC,GACrBsC,GAAMvD,EAGR,OAAO9J,CACP,CACD,IAAM0I,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKlF,EAAG4C,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOrC,EAAID,GAChBsC,GAAMvD,EAGR,OAAO9J,CACR,ICRA+C,EAAA+D,GAAA,UCbA,SAAsBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC3E,IAAIqH,EACAC,EACA0C,EACArC,EACAsC,EACAqC,EAQJ,GALAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB1I,EAAKqN,GAAOvM,EAAKG,KAAMF,EAAS+E,EAAG4C,GAAMqC,GAAM,CAAErC,EAAIqC,GAAMjF,GAC3DuH,GAAMvD,EAGR,OAAO9J,CACP,CACD,IAAM0I,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKlF,EAAG4C,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOvM,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAErC,EAAIqC,GAAMjF,GACtDuH,GAAMvD,EAGR,OAAO9J,CACR,IC/BA+C,EAAA+D,GAAA,UCVA,SAAoBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,GAC3D,IAAIiD,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAuC,EACAzC,EACA8E,EASJ,GANAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtBzI,EAAKqN,GAAOvH,EAAG2C,GAAMC,GAAMqC,GAC3BsC,GAAMvD,EAIT,OAAO9J,CACP,CACD,IAAMyI,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKzC,EAAG2C,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOrC,EAAID,GAChBsC,GAAMvD,EAIT,OAAO9J,CACR,IClBA+C,EAAA+D,GAAA,UCVA,SAAsBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC3E,IAAIqH,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAuC,EACAzC,EACA8E,EASJ,GANAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtBzI,EAAKqN,GAAOvM,EAAKG,KAAMF,EAAS+E,EAAG2C,GAAMC,GAAMqC,GAAM,CAAEtC,EAAIC,EAAIqC,GAAMjF,GACrEuH,GAAMvD,EAIT,OAAO9J,CACP,CACD,IAAMyI,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKzC,EAAG2C,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOvM,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAEtC,EAAIC,EAAIqC,GAAMjF,GAC1DuH,GAAMvD,EAIT,OAAO9J,CACR,ICzCA+C,EAAA+D,GAAA,UCXA,SAAoBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,GAC3D,IAAIiD,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACAkC,EACAzC,EACAK,EACAyE,EAUJ,GAPAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB9I,EAAKqN,GAAOvH,EAAGgD,GAAML,GAAMC,GAAMqC,GACjCsC,GAAMvD,EAKV,OAAO9J,CACP,CACD,IAAM8I,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAK9C,EAAGgD,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOrC,EAAID,GAChBsC,GAAMvD,EAKV,OAAO9J,CACR,IC1BA+C,EAAA+D,GAAA,UCXA,SAAsBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC3E,IAAIqH,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACAkC,EACAzC,EACAK,EACAyE,EAUJ,GAPAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB9I,EAAKqN,GAAOvM,EAAKG,KAAMF,EAAS+E,EAAGgD,GAAML,GAAMC,GAAMqC,GAAM,CAAEjC,EAAIL,EAAIC,EAAIqC,GAAMjF,GAC/EuH,GAAMvD,EAKV,OAAO9J,CACP,CACD,IAAM8I,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAK9C,EAAGgD,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOvM,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAEjC,EAAIL,EAAIC,EAAIqC,GAAMjF,GAC9DuH,GAAMvD,EAKV,OAAO9J,CACR,IClDA+C,EAAA+D,GAAA,UCTA,SAAoBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,GAC3D,IAAIiD,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACA8B,EACAzC,EACAK,EACAI,EACAqE,EAWJ,GARAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMI,EAAK,EAAGA,EAAKD,EAAIC,IACtBlJ,EAAKqN,GAAOvH,EAAGoD,GAAMJ,GAAML,GAAMC,GAAMqC,GACvCsC,GAAMvD,EAMX,OAAO9J,CACP,CACD,IAAMkJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKlD,EAAGoD,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKI,EAAIF,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOrC,EAAID,GAChBsC,GAAMvD,EAMX,OAAO9J,CACR,ICrCA+C,EAAA+D,GAAA,UCXA,SAAsBhB,EAAGqB,EAAO8C,EAAiBjK,EAAK8J,EAAQ3E,EAAQrE,EAAMC,GAC3E,IAAIqH,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACA8B,EACAzC,EACAK,EACAI,EACAqE,EAWJ,GARAjF,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GAGZkG,EAAKlI,EACA8E,EAAkB,CACtB,IAAMc,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB,IAAMrC,EAAK,EAAGA,EAAKL,EAAIK,IACtB,IAAMD,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMK,EAAK,EAAGA,EAAKD,EAAIC,IACtB,IAAMI,EAAK,EAAGA,EAAKD,EAAIC,IACtBlJ,EAAKqN,GAAOvM,EAAKG,KAAMF,EAAS+E,EAAGoD,GAAMJ,GAAML,GAAMC,GAAMqC,GAAM,CAAE7B,EAAIJ,EAAIL,EAAIC,EAAIqC,GAAMjF,GACzFuH,GAAMvD,EAMX,OAAO9J,CACP,CACD,IAAMkJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKlD,EAAGoD,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKI,EAAIF,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAEtB,IADAF,EAAKK,EAAIH,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAEtB,IADAsC,EAAKzC,EAAIG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB/K,EAAKqN,GAAOvM,EAAKG,KAAMF,EAASiK,EAAID,GAAM,CAAE7B,EAAIJ,EAAIL,EAAIC,EAAIqC,GAAMjF,GAClEuH,GAAMvD,EAMX,OAAO9J,CACR,ICtDA+C,EAAA+D,GAAA,UCdA,SAAgBhB,EAAGa,EAAGQ,EAAO9C,EAAKtD,GACjC,IAAIqH,EACAC,EACA0C,EACArC,EACA+C,EACAC,EAIJ,GAFAtD,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACPiB,GAAM,GAAKC,GAAM,EACrB,OAAO1B,EAER,IAAM+B,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAErC,EAAIqC,GAAMjF,GAGtD,OAAOa,CACR,ICPA5D,EAAA+D,GAAA,UCdA,SAAgBhB,EAAGa,EAAGQ,EAAO9C,EAAKtD,GACjC,IAAIqH,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAC,EACAO,EACAU,EAKJ,GAHAvE,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,EAChC,OAAO7B,EAER,IAAM8B,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAEtC,EAAIC,EAAIqC,GAAMjF,GAI3D,OAAOa,CACR,IChBA5D,EAAA+D,GAAA,UCdA,SAAgBhB,EAAGa,EAAGQ,EAAO9C,EAAKtD,GACjC,IAAIqH,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAC,EACAO,EACAU,EACAT,EACAW,EAMJ,GAJAzE,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,EAC3C,OAAOlC,EAER,IAAMmC,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAoD,EAAKpG,EAAGgD,GACR+D,EAAKlG,EAAGmC,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAEjC,EAAIL,EAAIC,EAAIqC,GAAMjF,GAKhE,OAAOa,CACR,ICzBA5D,EAAA+D,GAAA,UCdA,SAAgBhB,EAAGa,EAAGQ,EAAO9C,EAAKtD,GACjC,IAAIqH,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAC,EACAO,EACAU,EACAT,EACAW,EACAE,EACAC,EAOJ,GALA5E,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,EACtD,OAAOtC,EAER,IAAMuC,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFA6D,EAAKjH,EAAGoD,GACR8D,EAAKrG,EAAGuC,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAoD,EAAKa,EAAIjE,GACT+D,EAAKG,EAAIlE,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAIpD,KAAMF,EAAS0K,EAAIV,GAAM,CAAE7B,EAAIJ,EAAIL,EAAIC,EAAIqC,GAAMjF,GAMrE,OAAOa,CACR,ICpDA5D,EAAA+D,GAAA,U1BgIA,SAAiB9G,EAAK8J,EAAQ3E,GAC7B,IAAImI,EAAMhH,GAAkBtG,GAC5B,OAAKsN,EAAItH,iBAEHnG,GAAmBG,GAChBmN,GAASnN,EAAKwC,EAAgBxC,EAAK,GAAK8J,EAAQ3E,GAEnD1F,GAAkBO,GACfmN,GAASnN,EAAKuC,EAAevC,EAAK,GAAK8J,EAAQ3E,GAlDzD,SAAoBnF,EAAK8J,EAAQ3E,GAChC,IAAIoB,EACAtK,EACAgE,EACAe,EAOJ,IALAuF,EAAOvG,EAAIuG,KACXtK,EAAM+D,EAAI6F,UAAW,GAErB7E,EAAImE,EACJlF,EAAI,EACIe,GAAK,GAAKA,EAAIuF,EAAKjG,QAC1BrE,EAAKsK,EAAMvF,EAAGf,GACde,GAAK8I,EACL7J,GAAK,EAEN,OAAOsG,CACR,CAmCSV,CAAWyH,EAAKxD,EAAQ3E,GAzIjC,SAAkBnF,EAAK8J,EAAQ3E,GAC9B,IAAIlF,EACAe,EAIJ,IAFAA,EAAImE,EACJlF,EAAI,EACIe,GAAK,GAAKA,EAAIhB,EAAIM,QACzBN,EAAKgB,GAAMf,EACXe,GAAK8I,EACL7J,GAAK,EAEN,OAAOD,CACR,CA+HQuN,CAASvN,EAAK8J,EAAQ3E,EAC9B,I2BrKA,IAAIqI,GAAa9P,MAAM6F,UAAU8F,MC6BjC,SAASoE,GAAQ3H,EAAGsD,EAASsE,EAAWC,GACvC,IAAIC,EACA5N,EACAoH,EACAyG,EACAxR,EACA0O,EACArC,EACA+C,EACAC,EAGJ,IAAc,KADdtE,EAAM0G,EAAgBJ,EAAWK,IAEhC,MAAM,IAAIzL,WAAY5B,EAAQ,4GAxCpB,EAwCwIgN,IAInJ,GAFAG,EAAMG,EAAeL,GACrB3N,EAAM,GACO,IAARoH,EAAY,CAEhB,IADAwG,EAAY9H,EAAExF,OAAS,EACjBoI,EAAK,EAAGA,EAAKU,EAAQ9I,OAAQoI,IAClCrM,EAAMwR,EAAKzE,EAASV,GAAMkF,GAC1B5N,EAAIO,KAAMuF,EAAGzJ,IAEd,OAAO2D,CACP,CAED,IAAM0I,EAAK,EAAGA,EAAK5C,EAAExF,OAAQoI,IAAO,CAInC,IAFAgD,EAAK,GACLkC,GAFAnC,EAAK3F,EAAG4C,IAEOpI,OAAS,EAClByK,EAAK,EAAGA,EAAK3B,EAAQ9I,OAAQyK,IAClC1O,EAAMwR,EAAKzE,EAAS2B,GAAM6C,GAC1BlC,EAAGnL,KAAMkL,EAAIpP,IAEd2D,EAAIO,KAAMmL,EACV,CACD,OAAO1L,CACR,CC3DA,SAASiH,GAASnB,EAAGa,EAAGO,EAAOC,EAAOC,EAAK/C,GAC1C,IAAIgD,EACAC,EACAtG,EAOJ,GALAqG,EAAIF,EAAOC,IAGXE,EAAIF,EAAM,KAECF,EAQX,IAAMlG,EAAI,EAAGA,EAAIqG,EAAGrG,IACnBiG,GAASnB,EAAG9E,GAAK2F,EAAG3F,GAAKkG,EAAOC,EAAOG,EAAGjD,QAP1C,IAAMrD,EAAI,EAAGA,EAAIqG,EAAGrG,IACnB2F,EAAG3F,GAAMqD,EAAKyB,EAAG9E,GAQpB,CCvBA,SAASiN,GAAQf,GAChB,IAAI9Q,EACA4E,EAGJ,GADA5E,EAAM,GACD8Q,GAAK,EACT,OAAO9Q,EAER,IAAM4E,EAAI,EAAGA,EAAIkM,EAAGlM,IACnB5E,EAAImE,KAAMS,GAEX,OAAO5E,CACR,CCmDA,SAAS+Q,GAASnN,EAAKuG,EAAMuD,EAAQ3E,GACpC,IAAIlF,EACAmN,EACApM,EAKJ,IAHAoM,EAAa,EAATtD,EACJ9I,EAAa,EAATmE,EACJlF,EAAI,EACIe,GAAK,GAAKA,EAAIuF,EAAKjG,QAC1BiG,EAAMvF,GAAMf,EACZsG,EAAMvF,EAAE,GAAM,EACdA,GAAKoM,EACLnN,GAAK,EAEN,OAAOD,CACR,CC3DA+C,EAAA+D,GAAA,UDgIA,SAAiB9G,EAAK8J,EAAQ3E,GAC7B,IAAImI,EAAMhH,GAAkBtG,GAC5B,OAAKsN,EAAItH,iBAEHnG,GAAmBG,GAChBmN,GAASnN,EAAKwC,EAAgBxC,EAAK,GAAK8J,EAAQ3E,GAEnD1F,GAAkBO,GACfmN,GAASnN,EAAKuC,EAAevC,EAAK,GAAK8J,EAAQ3E,GAlDzD,SAAoBnF,EAAK8J,EAAQ3E,GAChC,IAAIoB,EACAtK,EACAgE,EACAe,EAOJ,IALAuF,EAAOvG,EAAIuG,KACXtK,EAAM+D,EAAI6F,UAAW,GAErB7E,EAAImE,EACJlF,EAAI,EACIe,GAAK,GAAKA,EAAIuF,EAAKjG,QAC1BrE,EAAKsK,EAAMvF,EAAGf,GACde,GAAK8I,EACL7J,GAAK,EAEN,OAAOsG,CACR,CAmCSV,CAAWyH,EAAKxD,EAAQ3E,GAzIjC,SAAkBnF,EAAK8J,EAAQ3E,GAC9B,IAAIlF,EACAe,EAIJ,IAFAA,EAAImE,EACJlF,EAAI,EACIe,GAAK,GAAKA,EAAIhB,EAAIM,QACzBN,EAAKgB,GAAMf,EACXe,GAAK8I,EACL7J,GAAK,EAEN,OAAOD,CACR,CA+HQuN,CAASvN,EAAK8J,EAAQ3E,EAC9B,IE5JA,IAAA4B,GAAA,CAAA,EAUAhE,EAAAgE,GAAA,gBAAAb,IAUAnD,EAAAgE,GAAA,iBAAA1D,IAUAN,EAAAgE,GAAA,iBAAAd,IAUAlD,EAAAgE,GAAA,YAAAlB,IAUA9C,EAAAgE,GAAA,OjFoCA,SAAcjB,GACb,IAAIwH,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAEHnG,GAAmBiG,GAChBU,GAAUhE,EAAgBsD,EAAG,IAEhCrG,GAAkBqG,GACfU,GAAUjE,EAAeuD,EAAG,IA7CtC,SAAoBA,GACnB,IAAIS,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7B,GAAKhF,EAAKuK,EAAMvF,GACf,OAAO,EAGT,OAAO,CACR,CAiCS6E,CAAWyH,GAEZ9G,GAAUV,EAClB,IiFvCA/C,EAAAgE,GAAA,SCuCA,SAAgBjB,EAAG7B,EAAWlD,GAC7B,IAAIuM,EACJ,OA9FD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CA4FMC,CAAWrI,EAAG,QACXA,EAAEsI,KAAMnK,EAAWlD,IAE3BuM,EAAMhH,GAAkBR,IACfE,iBA3CV,SAAoBF,EAAG7B,EAAWlD,GACjC,IAAIwF,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7B,GAAKiD,EAAUhD,KAAMF,EAAS/E,EAAKuK,EAAMvF,GAAKA,EAAGuF,GAChD,OAAO,EAGT,OAAO,CACR,CA8BSV,CAAWyH,EAAKrJ,EAAWlD,GA5EpC,SAAmB+E,EAAG7B,EAAWlD,GAChC,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,GAAKiD,EAAUhD,KAAMF,EAAS+E,EAAG9E,GAAKA,EAAG8E,GACxC,OAAO,EAGT,OAAO,CACR,CAsEQU,CAAUV,EAAG7B,EAAWlD,EAChC,IDvCAgC,EAAAgE,GAAA,cESA,SAAqBjB,EAAG7B,EAAWlD,GAClC,IAAIuM,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAvCV,SAAoBF,EAAG7B,EAAWlD,GACjC,IAAIwF,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAIuF,EAAKjG,OAAO,EAAGU,GAAK,EAAGA,IAChC,GAAKiD,EAAUhD,KAAMF,EAAS/E,EAAKuK,EAAMvF,GAAKA,EAAGuF,GAChD,OAAO,EAGT,OAAO,CACR,CA0BSV,CAAWyH,EAAKrJ,EAAWlD,GAxEpC,SAAmB+E,EAAG7B,EAAWlD,GAChC,IAAIC,EACJ,IAAMA,EAAI8E,EAAExF,OAAO,EAAGU,GAAK,EAAGA,IAC7B,GAAKiD,EAAUhD,KAAMF,EAAS+E,EAAG9E,GAAKA,EAAG8E,GACxC,OAAO,EAGT,OAAO,CACR,CAkEQU,CAAUV,EAAG7B,EAAWlD,EAChC,IFLAgC,EAAAgE,GAAA,mBAAAT,IAUAvD,EAAAgE,GAAA,SAAAsH,IAUAtL,EAAAgE,GAAA,oBG9FA,SAA2BjB,EAAGwI,GAC7B,IAAI1E,EACA2E,EACAnN,EACApB,EAEAC,EACAe,EAIJ,GADAI,EAAM0E,EAAExF,OACHgO,EAAOhO,SAAWc,EACtB,MAAM,IAAIkB,WAAY,+EAEvB,GAAa,IAARlB,EACJ,MAAO,GAQR,IALAwI,EAAO5C,GAAelB,GACtByI,EAAOvH,GAAesH,GAGtBtO,EAAM,CAAE,GAAI,IACNgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAI2J,EAAM9D,EAAG9E,GACTuN,EAAMD,EAAQtN,GAEjBhB,EAAK,GAAIO,KAAM,CAAES,EAAGf,IAEpBD,EAAK,GAAIO,KAAM,CAAES,EAAGf,IAGtB,OAAOD,CACR,IHuEA+C,EAAAgE,GAAA,sBIrGA,SAA6BjB,EAAG7B,EAAWlD,GAC1C,IAAI/E,EACAoF,EACApB,EACAC,EACAe,EAIJ,GAAa,KADbI,EAAM0E,EAAExF,QAEP,MAAO,GAOR,IAJAtE,EAAMgL,GAAelB,GAGrB9F,EAAM,CAAE,GAAI,IACNgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAIjE,EAAK8J,EAAG9E,GACPiD,EAAUhD,KAAMF,EAASd,EAAGe,EAAG8E,GACnC9F,EAAK,GAAIO,KAAM,CAAES,EAAGf,IAEpBD,EAAK,GAAIO,KAAM,CAAES,EAAGf,IAGtB,OAAOD,CACR,IJqFA+C,EAAAgE,GAAA,oBKlHA,SAA2BjB,EAAGwI,GAC7B,IAAIC,EACAnN,EACApB,EAEAgB,EAIJ,GADAI,EAAM0E,EAAExF,OACHgO,EAAOhO,SAAWc,EACtB,MAAM,IAAIkB,WAAY,+EAEvB,GAAa,IAARlB,EACJ,MAAO,GAOR,IAJAmN,EAAOvH,GAAesH,GAGtBtO,EAAM,CAAE,GAAI,IACNgB,EAAI,EAAGA,EAAII,EAAKJ,IACjBuN,EAAMD,EAAQtN,GAEjBhB,EAAK,GAAIO,KAAMS,GAEfhB,EAAK,GAAIO,KAAMS,GAGjB,OAAOhB,CACR,IL+FA+C,EAAAgE,GAAA,sBMzHA,SAA6BjB,EAAG7B,EAAWlD,GAC1C,IAAI/E,EACAoF,EACApB,EACAgB,EAIJ,GAAa,KADbI,EAAM0E,EAAExF,QAEP,MAAO,GAOR,IAJAtE,EAAMgL,GAAelB,GAGrB9F,EAAM,CAAE,GAAI,IACNgB,EAAI,EAAGA,EAAII,EAAKJ,IAChBiD,EAAUhD,KAAMF,EAAS/E,EAAK8J,EAAG9E,GAAKA,EAAG8E,GAC7C9F,EAAK,GAAIO,KAAMS,GAEfhB,EAAK,GAAIO,KAAMS,GAGjB,OAAOhB,CACR,IN2GA+C,EAAAgE,GAAA,mBOtIA,SAA0BjB,EAAGwI,GAC5B,IAAI1E,EACA2E,EACAnN,EACApB,EAEAC,EACAe,EAIJ,GADAI,EAAM0E,EAAExF,OACHgO,EAAOhO,SAAWc,EACtB,MAAM,IAAIkB,WAAY,+EAEvB,GAAa,IAARlB,EACJ,MAAO,GAQR,IALAwI,EAAO5C,GAAelB,GACtByI,EAAOvH,GAAesH,GAGtBtO,EAAM,CAAE,GAAI,IACNgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAI2J,EAAM9D,EAAG9E,GACTuN,EAAMD,EAAQtN,GAEjBhB,EAAK,GAAIO,KAAMN,GAEfD,EAAK,GAAIO,KAAMN,GAGjB,OAAOD,CACR,IP+GA+C,EAAAgE,GAAA,qBQ7IA,SAA4BjB,EAAG7B,EAAWlD,GACzC,IAAI/E,EACAoF,EACApB,EACAC,EACAe,EAIJ,GAAa,KADbI,EAAM0E,EAAExF,QAEP,MAAO,GAOR,IAJAtE,EAAMgL,GAAelB,GAGrB9F,EAAM,CAAE,GAAI,IACNgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAIjE,EAAK8J,EAAG9E,GACPiD,EAAUhD,KAAMF,EAASd,EAAGe,EAAG8E,GACnC9F,EAAK,GAAIO,KAAMN,GAEfD,EAAK,GAAIO,KAAMN,GAGjB,OAAOD,CACR,IR6HA+C,EAAAgE,GAAA,YSlJA,SAAmByH,EAAQrH,EAAO9C,GACjC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA+C,EACA3I,EACAa,EACAzG,EAIJ,GAFAkI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAMtB,IAHAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAItB,IAHA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACR+F,EAAKvO,EAAGwI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAGjC,ITgIAhI,EAAAgE,GAAA,YU5JA,SAAmByH,EAAQrH,EAAO9C,GACjC,IAAI+D,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAQ,EACAP,EACAiB,EACA8B,EACAC,EACA5I,EACAa,EACAzG,EAKJ,GAHAkI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAMjC,IAHA1C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACN/F,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACRiG,EAAKxO,EAAGuI,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAItB,IAHA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAIlC,IV+HAhI,EAAAgE,GAAA,YWtKA,SAAmByH,EAAQrH,EAAO9C,GACjC,IAAI+D,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAQ,EACAC,EACAR,EACAiB,EACAE,EACA4B,EACAC,EACAC,EACA7I,EACAa,EACAzG,EAMJ,GAJAkI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAM5C,IAHA/C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACN1F,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHAoD,EAAKpG,EAAGgD,GACR+D,EAAKlG,EAAGmC,GACR6F,EAAKzO,EAAG4I,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAItB,IAHA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAKnC,IX8HAhI,EAAAgE,GAAA,YYhLA,SAAmByH,EAAQrH,EAAO9C,GACjC,IAAI+D,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAQ,EACAC,EACAa,EACArB,EACAiB,EACAE,EACAG,EACAyB,EACAC,EACAC,EACAC,EACA9I,EACAa,EACAzG,EAOJ,GALAkI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,GAMvD,IAHAnD,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACNtF,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHA6D,EAAKjH,EAAGoD,GACR8D,EAAKrG,EAAGuC,GACR0F,EAAK1O,EAAGgJ,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHAoD,EAAKa,EAAIjE,GACT+D,EAAKG,EAAIlE,GACT6F,EAAKC,EAAI9F,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAItB,IAHA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAMpC,IZ6HAhI,EAAAgE,GAAA,Y1EnJA,SAAmByH,EAAQrH,EAAO9C,GACjC,OAAO4C,GAASuH,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKrH,EAAM7G,OAAQ6G,EAAO,EAAG9C,EAChF,I0E2JAtB,EAAAgE,GAAA,iBAAAW,IAUA3E,EAAAgE,GAAA,aazMA,SAAoByH,EAAQK,EAAQxK,GACnC,IAAIyK,EACAC,EACAC,EACAC,EACA7G,EACAC,EACA0C,EACArC,EACAwG,EACAC,EACAC,EACAC,EACA5D,EACAC,EACA+C,EACAtE,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EAKJ,GAFAkI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAmBtB,IAfAvC,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GAEV3H,EAAIsO,EAAQ,GAEZW,EAAK,EACLE,EAAK,EACC3G,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAM7B,IALAwG,EAAK,EACLE,EAAK,EACL3D,EAAK3F,EAAGqJ,GACRzD,EAAK/E,EAAG0I,GACRZ,EAAKvO,EAAGwI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,IAC9BF,GAAMJ,EACNM,GAAMJ,EAEPG,GAAMJ,EACNM,GAAMJ,CACN,CACF,IbwJAlM,EAAAgE,GAAA,acnNA,SAAoByH,EAAQK,EAAQxK,GACnC,IAAIyK,EACAC,EACAO,EACAN,EACAC,EACAM,EACAnH,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAyG,EACAC,EACAK,EACAJ,EACAC,EACAI,EACAhE,EACAQ,EACAP,EACAiB,EACA8B,EACAC,EACAvE,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EAMJ,GAHAkI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,GACT3B,EAAK2B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAqBjC,IAjBA1C,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GACVyH,EAAMzH,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GACV0H,EAAM1H,EAAI,GAEV3H,EAAIsO,EAAQ,GAEZgB,EAAK,EACLC,EAAK,EACChH,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAM7B,IALA0G,EAAK,EACLE,EAAK,EACLpD,EAAKnG,EAAG0J,GACR7C,EAAKhG,EAAG8I,GACRf,EAAKxO,EAAGuI,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAM7B,IALAwG,EAAK,EACLE,EAAK,EACL3D,EAAKQ,EAAIkD,GACTzD,EAAKiB,EAAI0C,GACTZ,EAAKC,EAAIhG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,IAC9BF,GAAMJ,EACNM,GAAMJ,EAEPG,GAAMJ,EACNM,GAAMJ,CACN,CACDO,GAAMF,EACNG,GAAMF,CACN,CACF,Id6IAxM,EAAAgE,GAAA,ae7NA,SAAoByH,EAAQK,EAAQxK,GACnC,IAAIyK,EACAC,EACAO,EACAI,EACAV,EACAC,EACAM,EACAI,EACAvH,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACAoG,EACAC,EACAK,EACAI,EACAR,EACAC,EACAI,EACAI,EACApE,EACAQ,EACAC,EACAR,EACAiB,EACAE,EACA4B,EACAC,EACAC,EACAxE,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EAOJ,GAJAkI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,GACT3B,EAAK2B,EAAI,GACTtB,EAAKsB,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAuB5C,IAnBA/C,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GACVyH,EAAMzH,EAAI,GACV6H,EAAM7H,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GACV0H,EAAM1H,EAAI,GACV8H,EAAM9H,EAAI,GAEV3H,EAAIsO,EAAQ,GAEZoB,EAAK,EACLC,EAAK,EACC/G,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAM7B,IALA0G,EAAK,EACLC,EAAK,EACLvD,EAAKpG,EAAG8J,GACR/C,EAAKlG,EAAGkJ,GACRlB,EAAKzO,EAAG4I,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAM7B,IALA0G,EAAK,EACLE,EAAK,EACLpD,EAAKC,EAAIsD,GACT7C,EAAKE,EAAI4C,GACTf,EAAKC,EAAIlG,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAM7B,IALAwG,EAAK,EACLE,EAAK,EACL3D,EAAKQ,EAAIkD,GACTzD,EAAKiB,EAAI0C,GACTZ,EAAKC,EAAIhG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,IAC9BF,GAAMJ,EACNM,GAAMJ,EAEPG,GAAMJ,EACNM,GAAMJ,CACN,CACDO,GAAMF,EACNG,GAAMF,CACN,CACDK,GAAMF,EACNG,GAAMF,CACN,CACF,IfkIA5M,EAAAgE,GAAA,agBvOA,SAAoByH,EAAQK,EAAQxK,GACnC,IAAIyK,EACAC,EACAO,EACAI,EACAI,EACAd,EACAC,EACAM,EACAI,EACAI,EACA3H,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAgG,EACAC,EACAK,EACAI,EACAI,EACAZ,EACAC,EACAI,EACAI,EACAI,EACAxE,EACAQ,EACAC,EACAa,EACArB,EACAiB,EACAE,EACAG,EACAyB,EACAC,EACAC,EACAC,EACAzE,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EAQJ,GALAkI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,GACT3B,EAAK2B,EAAI,GACTtB,EAAKsB,EAAI,GACTlB,EAAKkB,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,GAyBvD,IArBAnD,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GACVyH,EAAMzH,EAAI,GACV6H,EAAM7H,EAAI,GACViI,EAAMjI,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GACV0H,EAAM1H,EAAI,GACV8H,EAAM9H,EAAI,GACVkI,EAAMlI,EAAI,GAEV3H,EAAIsO,EAAQ,GAEZwB,EAAK,EACLC,EAAK,EACC/G,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAM7B,IALA0G,EAAK,EACLC,EAAK,EACL9C,EAAKjH,EAAGkK,GACRhD,EAAKrG,EAAGsJ,GACRrB,EAAK1O,EAAGgJ,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAM7B,IALA0G,EAAK,EACLC,EAAK,EACLvD,EAAKa,EAAI6C,GACT/C,EAAKG,EAAI6C,GACTlB,EAAKC,EAAI9F,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAM7B,IALA0G,EAAK,EACLE,EAAK,EACLpD,EAAKC,EAAIsD,GACT7C,EAAKE,EAAI4C,GACTf,EAAKC,EAAIlG,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAM7B,IALAwG,EAAK,EACLE,EAAK,EACL3D,EAAKQ,EAAIkD,GACTzD,EAAKiB,EAAI0C,GACTZ,EAAKC,EAAIhG,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB0D,EAAI1D,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,IAC9BF,GAAMJ,EACNM,GAAMJ,EAEPG,GAAMJ,EACNM,GAAMJ,CACN,CACDO,GAAMF,EACNG,GAAMF,CACN,CACDK,GAAMF,EACNG,GAAMF,CACN,CACDK,GAAMF,EACNG,GAAMF,CACN,CACF,IhBuHAhN,EAAAgE,GAAA,iBiB7OA,SAAwByH,EAAQK,EAAQxK,GACvC,IAAIyK,EACAC,EACAC,EACAC,EACAiB,EACAC,EACAC,EACAC,EACAjI,EACAC,EACA0C,EACArC,EACAwG,EACAC,EACAC,EACAC,EACAiB,EACAC,EACAC,EACAC,EACAhF,EACAC,EACA+C,EACAiC,EACAC,EACAxG,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EACA0Q,EACAC,EAKJ,GAFAzI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAiCtB,IA7BAvC,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GAGV3H,GADAiG,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAEN2J,GADArI,EAAK1B,EAAE6B,SACG,GACVmI,EAAMtI,EAAI,GAGV+I,GADAzK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAEN6J,GADAvI,EAAK1B,EAAE6B,SACG,GACVqI,EAAMxI,EAAI,GAEVgJ,EAAIrC,EAAQ,GAEZW,EAAK,EACLE,EAAK,EACLkB,EAAK,EACLE,EAAK,EACC/H,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAU7B,IATAwG,EAAK,EACLE,EAAK,EACLkB,EAAK,EACLE,EAAK,EACL/E,EAAK3F,EAAGqJ,GACRzD,EAAK/E,EAAG0I,GACRZ,EAAKvO,EAAGqQ,GACRG,EAAKE,EAAGH,GACRE,EAAKE,EAAGnI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB4F,EAAI5F,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,GAAMX,EAAI6B,GAAMI,EAAIF,IAClDtB,GAAMJ,EACNM,GAAMJ,EACNsB,GAAMJ,EACNM,GAAMJ,EAEPjB,GAAMJ,EACNM,GAAMJ,EACNsB,GAAMJ,EACNM,GAAMJ,CACN,CACF,IjB0JAtN,EAAAgE,GAAA,ckBlPA,SAAqByH,EAAQK,EAAQxK,GACpC,IAAIyK,EACAC,EACAC,EACAC,EACAiB,EACAC,EACAC,EACAC,EACAS,EACAC,EACA3I,EACAC,EACA0C,EACArC,EACAwG,EACAC,EACAC,EACAC,EACAiB,EACAC,EACAC,EACAC,EACAO,EACAC,EACAxF,EACAC,EACA+C,EACAiC,EACAC,EACAO,EACA/G,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EACA0Q,EACAC,EACA5Q,EAKJ,GAFAmI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAwCtB,IApCAvC,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GAGV3H,GADAiG,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAEN2J,GADArI,EAAK1B,EAAE6B,SACG,GACVmI,EAAMtI,EAAI,GAGV+I,GADAzK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAEN6J,GADAvI,EAAK1B,EAAE6B,SACG,GACVqI,EAAMxI,EAAI,GAGVgJ,GADA1K,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuK,GADAjJ,EAAK1B,EAAE6B,SACG,GACV+I,EAAMlJ,EAAI,GAEV5H,EAAIuO,EAAQ,GAEZW,EAAK,EACLE,EAAK,EACLkB,EAAK,EACLE,EAAK,EACLQ,EAAK,EACCvI,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAY7B,IAXAwG,EAAK,EACLE,EAAK,EACLkB,EAAK,EACLE,EAAK,EACLQ,EAAK,EACLvF,EAAK3F,EAAGqJ,GACRzD,EAAK/E,EAAG0I,GACRZ,EAAKvO,EAAGqQ,GACRG,EAAKE,EAAGH,GACRE,EAAKE,EAAGI,GACRC,EAAKjR,EAAGyI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,GAAMX,EAAI6B,GAAMI,EAAIF,GAAMG,EAAIK,IAC5D9B,GAAMJ,EACNM,GAAMJ,EACNsB,GAAMJ,EACNM,GAAMJ,EACNY,GAAMF,EAEP3B,GAAMJ,EACNM,GAAMJ,EACNsB,GAAMJ,EACNM,GAAMJ,EACNY,GAAMF,CACN,CACF,IlB8IAhO,EAAAgE,GAAA,cmBnQA,SAAqByH,EAAQK,EAAQxK,GACpC,IAAIyK,EACAC,EACAC,EACAC,EACAiB,EACAC,EACA/H,EACAC,EACA0C,EACArC,EACAwG,EACAC,EACAC,EACAC,EACAiB,EACAC,EACA9E,EACAC,EACA+C,EACAiC,EACAvG,EACAtC,EACA1B,EACAL,EACAa,EACAzG,EACA0Q,EAKJ,GAFAxI,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GA0BtB,IAtBAvC,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GAGVlB,GADAR,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENyI,GADAnH,EAAK1B,EAAE6B,SACG,GACViH,EAAMpH,EAAI,GAGV3H,GADAiG,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAEN2J,GADArI,EAAK1B,EAAE6B,SACG,GACVmI,EAAMtI,EAAI,GAEV+I,EAAIpC,EAAQ,GAEZW,EAAK,EACLE,EAAK,EACLkB,EAAK,EACC7H,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAQ7B,IAPAwG,EAAK,EACLE,EAAK,EACLkB,EAAK,EACL7E,EAAK3F,EAAGqJ,GACRzD,EAAK/E,EAAG0I,GACRZ,EAAKvO,EAAGqQ,GACRG,EAAKE,EAAGlI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB2F,EAAI3F,GAAO1G,EAAKoH,EAAIyD,GAAMxD,EAAI0D,GAAMX,EAAI6B,IACxCpB,GAAMJ,EACNM,GAAMJ,EACNsB,GAAMJ,EAEPf,GAAMJ,EACNM,GAAMJ,EACNsB,GAAMJ,CACN,CACF,InBiMApN,EAAAgE,GAAA,YoB9QA,SAAmByH,EAAQK,EAAQxK,GAClC,IAAIyK,EACAC,EACA3G,EACAC,EACA0C,EACArC,EACAwG,EACAC,EACA1D,EACAC,EACAvB,EACAtC,EACA1B,EACAL,EACAa,EAKJ,GAFAyB,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAYtB,IARAvC,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GAEVlB,EAAI6H,EAAQ,GAEZW,EAAK,EACCzG,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAI7B,IAHAwG,EAAK,EACLzD,EAAK3F,EAAGqJ,GACRzD,EAAK/E,EAAG+B,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIyD,IACpBA,GAAMJ,EAEPK,GAAMJ,CACN,CACF,IpB8OAhM,EAAAgE,GAAA,YqBxRA,SAAmByH,EAAQK,EAAQxK,GAClC,IAAIyK,EACAC,EACAO,EACAlH,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAyG,EACAC,EACAK,EACA/D,EACAQ,EACAP,EACAiB,EACAxC,EACAtC,EACA1B,EACAL,EACAa,EAMJ,GAHAyB,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,GACT3B,EAAK2B,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAYjC,IARA1C,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GACVyH,EAAMzH,EAAI,GAEVlB,EAAI6H,EAAQ,GACZgB,EAAK,EACC/G,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAI7B,IAHA0G,EAAK,EACLlD,EAAKnG,EAAG0J,GACR7C,EAAKhG,EAAG8B,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAI7B,IAHAwG,EAAK,EACLzD,EAAKQ,EAAIkD,GACTzD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIyD,IACpBA,GAAMJ,EAEPK,GAAMJ,CACN,CACDS,GAAMF,CACN,CACF,IrB2OAvM,EAAAgE,GAAA,YsBlSA,SAAmByH,EAAQK,EAAQxK,GAClC,IAAIyK,EACAC,EACAO,EACAI,EACAtH,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACAoG,EACAC,EACAK,EACAI,EACAnE,EACAQ,EACAC,EACAR,EACAiB,EACAE,EACA1C,EACAtC,EACA1B,EACAL,EACAa,EAOJ,GAJAyB,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,GACT3B,EAAK2B,EAAI,GACTtB,EAAKsB,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAa5C,IATA/C,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GACVyH,EAAMzH,EAAI,GACV6H,EAAM7H,EAAI,GAEVlB,EAAI6H,EAAQ,GACZoB,EAAK,EACC9G,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAI7B,IAHA0G,EAAK,EACLtD,EAAKpG,EAAG8J,GACR/C,EAAKlG,EAAGmC,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAI7B,IAHA0G,EAAK,EACLlD,EAAKC,EAAIsD,GACT7C,EAAKE,EAAIpE,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAI7B,IAHAwG,EAAK,EACLzD,EAAKQ,EAAIkD,GACTzD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIyD,IACpBA,GAAMJ,EAEPK,GAAMJ,CACN,CACDS,GAAMF,CACN,CACDM,GAAMF,CACN,CACF,ItBuOA3M,EAAAgE,GAAA,YuB5SA,SAAmByH,EAAQK,EAAQxK,GAClC,IAAIyK,EACAC,EACAO,EACAI,EACAI,EACA1H,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAgG,EACAC,EACAK,EACAI,EACAI,EACAvE,EACAQ,EACAC,EACAa,EACArB,EACAiB,EACAE,EACAG,EACA7C,EACAtC,EACA1B,EACAL,EACAa,EAQJ,GALAyB,GADA+B,EAAK0E,EAAQ,IACJ,GACTxG,EAAK8B,EAAI,GACT3B,EAAK2B,EAAI,GACTtB,EAAKsB,EAAI,GACTlB,EAAKkB,EAAI,KACJ/B,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,GAcvD,IAVAnD,GADAK,EAAIuB,GAAgB8G,EAAQ,GAAKK,EAAQ,GAAK1E,IACxC5D,KAENuI,GADAjH,EAAK1B,EAAE6B,SACG,GACV+G,EAAMlH,EAAI,GACVyH,EAAMzH,EAAI,GACV6H,EAAM7H,EAAI,GACViI,EAAMjI,EAAI,GAEVlB,EAAI6H,EAAQ,GACZwB,EAAK,EACC9G,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAI7B,IAHA0G,EAAK,EACL7C,EAAKjH,EAAGkK,GACRhD,EAAKrG,EAAGuC,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAI7B,IAHA0G,EAAK,EACLtD,EAAKa,EAAI6C,GACT/C,EAAKG,EAAIlE,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAI7B,IAHA0G,EAAK,EACLlD,EAAKC,EAAIsD,GACT7C,EAAKE,EAAIpE,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAI7B,IAHAwG,EAAK,EACLzD,EAAKQ,EAAIkD,GACTzD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIyD,IACpBA,GAAMJ,EAEPK,GAAMJ,CACN,CACDS,GAAMF,CACN,CACDM,GAAMF,CACN,CACDM,GAAMF,CACN,CACF,IvBmOA/M,EAAAgE,GAAA,kBwB7TA,SAAyBjB,EAAGoH,GAC3B,IAAIlN,EACAmD,EACA9G,EACA+E,EACA0D,EACAsI,EACApM,EACAK,EACA8P,EAGJ,IADArM,EAAIgB,EAAExF,SACI,GAAK4M,GAAK,EACnB,MAAO,GAOR,IAJA9L,EAAMoL,EAAK1H,EAAGoI,GAGd7Q,EAAM,GACA2E,EAAI,EAAGA,EAAIkM,EAAGlM,IACnB3E,EAAIkE,KAAM,GAIX,IADAP,EAAM,GACAgB,EAAI,EAAGA,EAAII,EAAKJ,IAAM,CAG3B,IADAmQ,EAAInQ,EACEK,EAAI6L,EAAE,EAAG7L,GAAK,EAAGA,IAEtB8P,GADA/D,EAAI+D,EAAIrM,EAERqM,GAAKrM,EACLzI,EAAKgF,GAAM+L,EAIZ,IADAjK,EAAM,GACA9B,EAAI,EAAGA,EAAI6L,EAAG7L,IACnB8B,EAAI5C,KAAMuF,EAAGzJ,EAAKgF,KAEnBrB,EAAIO,KAAM4C,EACV,CACD,OAAOnD,CACR,IxB6RA+C,EAAAgE,GAAA,oByBpVA,SAA2BkF,EAAIC,GAC9B,IAAIlM,EACA8H,EACAhD,EACA7E,EACAe,EACAK,EAKJ,IAHAyG,EAAImE,EAAG3L,OACPwE,EAAIoH,EAAG5L,OACPN,EAAM,GACAgB,EAAI,EAAGA,EAAI8G,EAAG9G,IAEnB,IADAf,EAAIgM,EAAIjL,GACFK,EAAI,EAAGA,EAAIyD,EAAGzD,IACnBrB,EAAIO,KAAM,CAAEN,EAAGiM,EAAI7K,KAGrB,OAAOrB,CACR,IzB4UA+C,EAAAgE,GAAA,mB0BhWA,SAA0BjB,GACzB,IAAI9F,EACA8E,EACA7E,EACAe,EACAK,EAIJ,IAFAyD,EAAIgB,EAAExF,OACNN,EAAM,GACAgB,EAAI,EAAGA,EAAI8D,EAAG9D,IAEnB,IADAf,EAAI6F,EAAG9E,GACDK,EAAI,EAAGA,EAAIyD,EAAGzD,IACnBrB,EAAIO,KAAM,CAAEN,EAAG6F,EAAGzE,KAGpB,OAAOrB,CACR,I1B0VA+C,EAAAgE,GAAA,OAAAQ,IAUAxE,EAAAgE,GAAA,cAAAqK,IAUArO,EAAAgE,GAAA,U2BvOA,SAAiBjB,EAAGuL,EAAOC,GAC1B,OAAKA,EAzEN,SAA0BxL,EAAGuL,GAC5B,IAAIE,EACAC,EACApQ,EACAqQ,EACA1N,EACA9D,EACAe,EAGJ,GAAa,KADbI,EAAM0E,EAAExF,QAEP,OAAOwF,EASR,IAPA/B,GAAM,EACNyN,EAAO1L,EAAG,GACL4L,EAAOF,KACXzN,GAAM,GAEPwN,EAAQ,EACRE,EAAM,EACAzQ,EAAI,EAAGA,EAAII,EAAKJ,KACrBf,EAAI6F,EAAG9E,MACIwQ,GAAUzN,GAAO2N,EAAOzR,IAClCsR,GAAS,IACKF,IACbvL,EAAG2L,GAAQD,EACXC,GAAO,IAGRD,EAAOvR,EACPsR,EAAQ,EACRzL,EAAG2L,GAAQD,EACXC,GAAO,EACP1N,GAAM,EACD2N,EAAOF,KACXzN,GAAM,IAKT,OADA+B,EAAExF,OAASmR,EACJ3L,CACR,CAiCS6L,CAAiB7L,EAAGuL,GAtI7B,SAAwBvL,EAAGuL,GAC1B,IAAIE,EACAC,EACApQ,EACAqQ,EACAxR,EACAe,EAGJ,GAAa,KADbI,EAAM0E,EAAExF,QAEP,OAAOwF,EAKR,IAHA0L,EAAO1L,EAAG,GACVyL,EAAQ,EACRE,EAAM,EACAzQ,EAAI,EAAGA,EAAII,EAAKJ,KACrBf,EAAI6F,EAAG9E,MACIwQ,GACVD,GAAS,IACKF,IACbvL,EAAG2L,GAAQD,EACXC,GAAO,IAGRD,EAAOvR,EACPsR,EAAQ,EACRzL,EAAG2L,GAAQD,EACXC,GAAO,GAIT,OADA3L,EAAExF,OAASmR,EACJ3L,CACR,CAwGQ8L,CAAe9L,EAAGuL,EAC1B,I3B4OAtO,EAAAgE,GAAA,SpE7QA,SAAgBjB,GACf,IAAIwH,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAEHnG,GAAmBiG,GAChBmC,GAAiBzF,EAAgBsD,EAAG,IAEvCrG,GAAkBqG,GACfmC,GAAiB1F,EAAeuD,EAAG,IA7C7C,SAAoBA,GACnB,IAAIS,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7B,IAAMhF,EAAKuK,EAAMvF,GAChB,OAAO,EAGT,OAAO,CACR,CAiCS6E,CAAWyH,GArHpB,SAAmBxH,GAClB,IAAI9E,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,IAAM8E,EAAG9E,GACR,OAAO,EAGT,OAAO,CACR,CA+GQwF,CAAUV,EAClB,IoE0QA/C,EAAAgE,GAAA,W4B7SA,SAAkBjB,EAAG7B,EAAWlD,GAC/B,IAAIuM,EACJ,OA9FD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CA4FMC,CAAWrI,EAAG,SACXA,EAAE+L,MAAO5N,EAAWlD,IAE5BuM,EAAMhH,GAAkBR,IACfE,iBA3CV,SAAoBF,EAAG7B,EAAWlD,GACjC,IAAIwF,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7B,IAAMiD,EAAUhD,KAAMF,EAAS/E,EAAKuK,EAAMvF,GAAKA,EAAGuF,GACjD,OAAO,EAGT,OAAO,CACR,CA8BSV,CAAWyH,EAAKrJ,EAAWlD,GA5EpC,SAAmB+E,EAAG7B,EAAWlD,GAChC,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,IAAMiD,EAAUhD,KAAMF,EAAS+E,EAAG9E,GAAKA,EAAG8E,GACzC,OAAO,EAGT,OAAO,CACR,CAsEQU,CAAUV,EAAG7B,EAAWlD,EAChC,I5B6SAgC,EAAAgE,GAAA,gB6B3UA,SAAuBjB,EAAG7B,EAAWlD,GACpC,IAAIuM,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAvCV,SAAoBF,EAAG7B,EAAWlD,GACjC,IAAIwF,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAIuF,EAAKjG,OAAO,EAAGU,GAAK,EAAGA,IAChC,IAAMiD,EAAUhD,KAAMF,EAAS/E,EAAKuK,EAAMvF,GAAKA,EAAGuF,GACjD,OAAO,EAGT,OAAO,CACR,CA0BSV,CAAWyH,EAAKrJ,EAAWlD,GAxEpC,SAAmB+E,EAAG7B,EAAWlD,GAChC,IAAIC,EACJ,IAAMA,EAAI8E,EAAExF,OAAO,EAAGU,GAAK,EAAGA,IAC7B,IAAMiD,EAAUhD,KAAMF,EAAS+E,EAAG9E,GAAKA,EAAG8E,GACzC,OAAO,EAGT,OAAO,CACR,CAkEQU,CAAUV,EAAG7B,EAAWlD,EAChC,I7B+UAgC,EAAAgE,GAAA,SAAAS,IAUAzE,EAAAgE,GAAA,WAAAmB,IAUAnF,EAAAgE,GAAA,WAAAoB,IAUApF,EAAAgE,GAAA,c8BlcA,SAAqBI,EAAOrG,EAAMC,GACjC,IAAI3E,EACA4O,EACA5C,EACAC,EACArH,EACAK,EAOJ,IALA+G,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GAGZ/K,EAAM,GACA4E,EAAI,EAAGA,EAAIqH,EAAIrH,IAAM,CAE1B,IADAgK,EAAK,GACC3J,EAAI,EAAGA,EAAI+G,EAAI/G,IACpB2J,EAAGzK,KAAMO,EAAKG,KAAMF,EAAS,CAAEC,EAAGK,KAEnCjF,EAAImE,KAAMyK,EACV,CACD,OAAO5O,CACR,I9BubA2G,EAAAgE,GAAA,WAAAuB,IAUAvF,EAAAgE,GAAA,c+BtdA,SAAqBI,EAAOrG,EAAMC,GACjC,IAAI3E,EACA4O,EACAzC,EACAH,EACAC,EACAG,EACAuC,EACArC,EACAD,EAQJ,IANAL,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GAGZ/K,EAAM,GACAqM,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCG,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAE7B,IADAsC,EAAK,GACCD,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBC,EAAGzK,KAAMO,EAAKG,KAAMF,EAAS,CAAE0H,EAAIC,EAAIqC,KAExCxC,EAAGhI,KAAMyK,EACT,CACD5O,EAAImE,KAAMgI,EACV,CACD,OAAOnM,CACR,I/BmcA2G,EAAAgE,GAAA,WAAA4B,IAUA5F,EAAAgE,GAAA,cgC1eA,SAAqBI,EAAOrG,EAAMC,GACjC,IAAI3E,EACA4O,EACAzC,EACAK,EACAR,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EASJ,IAPAV,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GAGZ/K,EAAM,GACA0M,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCH,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCG,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAE7B,IADAsC,EAAK,GACCD,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBC,EAAGzK,KAAMO,EAAKG,KAAMF,EAAS,CAAE+H,EAAIL,EAAIC,EAAIqC,KAE5CxC,EAAGhI,KAAMyK,EACT,CACDpC,EAAGrI,KAAMgI,EACT,CACDnM,EAAImE,KAAMqI,EACV,CACD,OAAOxM,CACR,IhC+cA2G,EAAAgE,GAAA,WAAAgC,IAUAhG,EAAAgE,GAAA,ciC9fA,SAAqBI,EAAOrG,EAAMC,GACjC,IAAI3E,EACA4O,EACAzC,EACAK,EACAI,EACAZ,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EAUJ,IARAd,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,GAGZ/K,EAAM,GACA8M,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCF,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCH,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAE7B,IADAF,EAAK,GACCG,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAE7B,IADAsC,EAAK,GACCD,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBC,EAAGzK,KAAMO,EAAKG,KAAMF,EAAS,CAAEmI,EAAIJ,EAAIL,EAAIC,EAAIqC,KAEhDxC,EAAGhI,KAAMyK,EACT,CACDpC,EAAGrI,KAAMgI,EACT,CACDS,EAAGzI,KAAMqI,EACT,CACDxM,EAAImE,KAAMyI,EACV,CACD,OAAO5M,CACR,IjC2dA2G,EAAAgE,GAAA,WAAAoC,IAUApG,EAAAgE,GAAA,c7D1eA,SAAqBI,EAAOrG,EAAMC,GACjC,OAAOkG,GAASE,EAAM7G,OAAQ6G,EAAO,EAAG,GAAI,GAAIrG,EAAMC,EACvD,I6DkfAgC,EAAAgE,GAAA,SkC3hBA,SAAgB3K,GAGf,GAAoB,IAAfA,EAAIkE,OAOT,OAHM0G,GAAe5K,EAGdJ,CAAKI,EAAK,EAClB,IlC0hBA2G,EAAAgE,GAAA,UAAAiD,IAUAjH,EAAAgE,GAAA,YAAA6D,IAUA7H,EAAAgE,GAAA,YAAA+D,IAUA/H,EAAAgE,GAAA,cAAAkE,IAUAlI,EAAAgE,GAAA,YAAAmE,IAUAnI,EAAAgE,GAAA,cAAAoE,IAUApI,EAAAgE,GAAA,YAAAqE,IAUArI,EAAAgE,GAAA,cAAAsE,IAUAtI,EAAAgE,GAAA,YAAAuE,IAUAvI,EAAAgE,GAAA,cAAAwE,IAUAxI,EAAAgE,GAAA,WAAAyE,IAUAzI,EAAAgE,GAAA,WAAA4E,IAUA5I,EAAAgE,GAAA,WAAA6E,IAUA7I,EAAAgE,GAAA,YmCjqBA,SAAmBjB,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMqL,GAAU9F,EAAG9E,KAExB,OAAOhB,CACR,InCkqBA+C,EAAAgE,GAAA,WAAA8E,IAUA9I,EAAAgE,GAAA,WAAA+E,IAUA/I,EAAAgE,GAAA,WAAAgF,IAUAhJ,EAAAgE,GAAA,YoCzsBA,SAAmBjB,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMwL,GAAUjG,EAAG9E,KAExB,OAAOhB,CACR,IpC0sBA+C,EAAAgE,GAAA,iBqChtBA,SAAwBjC,EAAGgB,EAAGgE,EAAQ3E,GACrC,IAAInF,EACAhE,EACA8V,EACA9Q,EAQJ,IALAhF,EAAMgL,GAAelB,GAGrBgM,EAAK3M,EACLnF,EAAM,GACAgB,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBhB,EAAIO,KAAMvE,EAAK8J,EAAGgM,IAClBA,GAAMhI,EAEP,OAAO9J,CACR,IrCysBA+C,EAAAgE,GAAA,SAAA/J,IAUA+F,EAAAgE,GAAA,gBsCvuBA,SAAuBjB,EAAGiM,GACzB,IAAInI,EACA2E,EACAnN,EACApB,EACAgS,EACA7L,EACAlG,EACAe,EAIJ,GADAI,EAAM0E,EAAExF,OACHyR,EAAOzR,SAAWc,EACtB,MAAM,IAAIkB,WAAY,+EAQvB,IALAsH,EAAO5C,GAAelB,GACtByI,EAAOvH,GAAe+K,GAGtB/R,EAAM,CAAA,EACAgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAI2J,EAAM9D,EAAG9E,GAEbmF,EAAInG,EADJgS,EAAIzD,EAAMwD,EAAQ/Q,GAAI2D,YAEjBvC,EAAS+D,GACbA,EAAE5F,KAAM,CAAES,EAAGf,IAEbD,EAAKgS,GAAM,CAAE,CAAEhR,EAAGf,IAGpB,OAAOD,CACR,ItCitBA+C,EAAAgE,GAAA,kBuC9uBA,SAAyBjB,EAAGmM,EAAWlR,GACtC,IAAI/E,EACAoF,EACApB,EACAgS,EACA7L,EACAlG,EACAe,EAUJ,IAPAI,EAAM0E,EAAExF,OAGRtE,EAAMgL,GAAelB,GAGrB9F,EAAM,CAAA,EACAgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAIjE,EAAK8J,EAAG9E,GAEZmF,EAAInG,EADJgS,EAAIC,EAAUhR,KAAMF,EAASd,EAAGe,EAAG8E,IAE9B1D,EAAS+D,GACbA,EAAE5F,KAAM,CAAES,EAAGf,IAEbD,EAAKgS,GAAM,CAAE,CAAEhR,EAAGf,IAGpB,OAAOD,CACR,IvC4tBA+C,EAAAgE,GAAA,gBwC3vBA,SAAuBjB,EAAGiM,GACzB,IAAIxD,EACAnN,EACApB,EACAgS,EACA7L,EACAnF,EAIJ,GADAI,EAAM0E,EAAExF,OACHyR,EAAOzR,SAAWc,EACtB,MAAM,IAAIkB,WAAY,+EAOvB,IAJAiM,EAAOvH,GAAe+K,GAGtB/R,EAAM,CAAA,EACAgB,EAAI,EAAGA,EAAII,EAAKJ,IAErBmF,EAAInG,EADJgS,EAAIzD,EAAMwD,EAAQ/Q,GAAI2D,YAEjBvC,EAAS+D,GACbA,EAAE5F,KAAMS,GAERhB,EAAKgS,GAAM,CAAEhR,GAGf,OAAOhB,CACR,IxCyuBA+C,EAAAgE,GAAA,kByClwBA,SAAyBjB,EAAGmM,EAAWlR,GACtC,IAAI/E,EACAoF,EACApB,EACAgS,EACA7L,EACAnF,EAUJ,IAPAI,EAAM0E,EAAExF,OAGRtE,EAAMgL,GAAelB,GAGrB9F,EAAM,CAAA,EACAgB,EAAI,EAAGA,EAAII,EAAKJ,IAErBmF,EAAInG,EADJgS,EAAIC,EAAUhR,KAAMF,EAAS/E,EAAK8J,EAAG9E,GAAKA,EAAG8E,IAExC1D,EAAS+D,GACbA,EAAE5F,KAAMS,GAERhB,EAAKgS,GAAM,CAAEhR,GAGf,OAAOhB,CACR,IzCkvBA+C,EAAAgE,GAAA,e0C/wBA,SAAsBjB,EAAGiM,GACxB,IAAInI,EACA2E,EACAnN,EACApB,EACAgS,EACA7L,EACAlG,EACAe,EAIJ,GADAI,EAAM0E,EAAExF,OACHyR,EAAOzR,SAAWc,EACtB,MAAM,IAAIkB,WAAY,+EAQvB,IALAsH,EAAO5C,GAAelB,GACtByI,EAAOvH,GAAe+K,GAGtB/R,EAAM,CAAA,EACAgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAI2J,EAAM9D,EAAG9E,GAEbmF,EAAInG,EADJgS,EAAIzD,EAAMwD,EAAQ/Q,GAAI2D,YAEjBvC,EAAS+D,GACbA,EAAE5F,KAAMN,GAERD,EAAKgS,GAAM,CAAE/R,GAGf,OAAOD,CACR,I1CyvBA+C,EAAAgE,GAAA,iB2CtxBA,SAAwBjB,EAAGmM,EAAWlR,GACrC,IAAI/E,EACAoF,EACApB,EACAgS,EACA7L,EACAlG,EACAe,EAUJ,IAPAI,EAAM0E,EAAExF,OAGRtE,EAAMgL,GAAelB,GAGrB9F,EAAM,CAAA,EACAgB,EAAI,EAAGA,EAAII,EAAKJ,IACrBf,EAAIjE,EAAK8J,EAAG9E,GAEZmF,EAAInG,EADJgS,EAAIC,EAAUhR,KAAMF,EAASd,EAAGe,EAAG8E,IAE9B1D,EAAS+D,GACbA,EAAE5F,KAAMN,GAERD,EAAKgS,GAAM,CAAE/R,GAGf,OAAOD,CACR,I3CowBA+C,EAAAgE,GAAA,YAAAiF,IAUAjJ,EAAAgE,GAAA,W4C7rBA,SAAkBjB,EAAGxB,EAAeC,EAAW+M,GAC9C,IAAIhE,EACJ,OAjHD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CA+GMC,CAAWrI,EAAG,aAA6B,IAAdwL,EAC1BxL,EAAEoM,QAAS5N,EAAeC,IAE7BA,EAAY,IAChBA,GAAauB,EAAExF,QACE,IAChBiE,EAAY,IAGd+I,EAAMhH,GAAkBR,IACfE,iBAlEV,SAAoBF,EAAGxB,EAAeC,EAAW+M,GAChD,IAAI/K,EACAvK,EACAgF,EAKJ,GAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEdyL,GAAaI,EAAOpN,GAAkB,CAC1C,IAAMtD,EAAIuD,EAAWvD,EAAIuF,EAAKjG,OAAQU,IACrC,GAAK0Q,EAAO1V,EAAKuK,EAAMvF,IACtB,OAAOA,EAGT,OAAQ,CACR,CACD,IAAMA,EAAIuD,EAAWvD,EAAIuF,EAAKjG,OAAQU,IACrC,GAAKsD,IAAkBtI,EAAKuK,EAAMvF,GACjC,OAAOA,EAGT,OAAQ,CACT,CA6CS6E,CAAWyH,EAAKhJ,EAAeC,EAAW+M,GAxGnD,SAAmBxL,EAAGxB,EAAeC,EAAW+M,GAC/C,IAAItQ,EACJ,GAAKsQ,GAAaI,EAAOpN,GAAkB,CAC1C,IAAMtD,EAAIuD,EAAWvD,EAAI8E,EAAExF,OAAQU,IAClC,GAAK0Q,EAAO5L,EAAG9E,IACd,OAAOA,EAGT,OAAQ,CACR,CACD,IAAMA,EAAIuD,EAAWvD,EAAI8E,EAAExF,OAAQU,IAClC,GAAKsD,IAAkBwB,EAAG9E,GACzB,OAAOA,EAGT,OAAQ,CACT,CA0FQwF,CAAUV,EAAGxB,EAAeC,EAAW+M,GAC/C,I5CurBAvO,EAAAgE,GAAA,Q6C7zBA,SAAe3K,GACd,IAAIJ,EACAK,EASJ,GANAL,EAAMgL,GAAe5K,MAGrBC,EAAMD,EAAIkE,OAAS,GAGR,GAGX,OAAOtE,EAAKI,EAAKC,EAClB,I7CwzBA0G,EAAAgE,GAAA,e8CjtBA,SAAsBjB,EAAGxB,EAAeC,EAAW+M,GAClD,IAAIhE,EACJ,GAjHD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CA+GMC,CAAWrI,EAAG,iBAAiC,IAAdwL,EACrC,OAAOxL,EAAEqM,YAAa7N,EAAeC,GAEtC,GAAKA,EAAY,GAEhB,IADAA,GAAauB,EAAExF,QACE,EAChB,OAAQ,OAEEiE,EAAYuB,EAAExF,SACzBiE,EAAYuB,EAAExF,OAAS,GAGxB,OADAgN,EAAMhH,GAAkBR,IACfE,iBApEV,SAAoBF,EAAGxB,EAAeC,EAAW+M,GAChD,IAAI/K,EACAvK,EACAgF,EAKJ,GAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEdyL,GAAaI,EAAOpN,GAAkB,CAC1C,IAAMtD,EAAIuD,EAAWvD,GAAK,EAAGA,IAC5B,GAAK0Q,EAAO1V,EAAKuK,EAAMvF,IACtB,OAAOA,EAGT,OAAQ,CACR,CACD,IAAMA,EAAIuD,EAAWvD,GAAK,EAAGA,IAC5B,GAAKsD,IAAkBtI,EAAKuK,EAAMvF,GACjC,OAAOA,EAGT,OAAQ,CACT,CA+CS6E,CAAWyH,EAAKhJ,EAAeC,EAAW+M,GA1GnD,SAAmBxL,EAAGxB,EAAeC,EAAW+M,GAC/C,IAAItQ,EACJ,GAAKsQ,GAAaI,EAAOpN,GAAkB,CAC1C,IAAMtD,EAAIuD,EAAWvD,GAAK,EAAGA,IAC5B,GAAK0Q,EAAO5L,EAAG9E,IACd,OAAOA,EAGT,OAAQ,CACR,CACD,IAAMA,EAAIuD,EAAWvD,GAAK,EAAGA,IAC5B,GAAKsD,IAAkBwB,EAAG9E,GACzB,OAAOA,EAGT,OAAQ,CACT,CA4FQwF,CAAUV,EAAGxB,EAAeC,EAAW+M,EAC/C,I9CysBAvO,EAAAgE,GAAA,Y+Cp1BA,SAAmBkF,EAAIC,EAAI9K,GAC1B,IAAIhF,EACA0I,EACAwC,EACAtG,EAEJ,GAAa,IAARI,EACJ,MAAO,GAQR,IAJAkG,GAAM4E,EAAGD,IADTnH,EAAI1D,EAAM,GAIVhF,EAAM,CAAE6P,GACFjL,EAAI,EAAGA,EAAI8D,EAAG9D,IACnB5E,EAAImE,KAAM0L,EAAM3E,EAAEtG,GAGnB,OADA5E,EAAImE,KAAM2L,GACH9P,CACR,I/C00BA2G,EAAAgE,GAAA,WAAAsF,IAUAtJ,EAAAgE,GAAA,QAAA0F,IAUA1J,EAAAgE,GAAA,QAAA2F,IAUA3J,EAAAgE,GAAA,QAAA6F,IAUA7J,EAAAgE,GAAA,QAAA+F,IAUA/J,EAAAgE,GAAA,egD93BA,SAAsByH,EAAQrH,EAAO9C,GACpC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA+C,EACA6B,EACAxK,EACAa,EACAzG,EACAkS,EAIJ,GAFAhK,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAOtB,IAJAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZ4D,EAAI5D,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAKtB,IAJA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACR+F,EAAKvO,EAAGwI,GACR4H,EAAK8B,EAAG1J,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACJ,IAAbuF,EAAIvF,KACR0D,EAAI1D,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,IAIlC,IhDs2BAhI,EAAAgE,GAAA,aiDn5BA,SAAoBjB,EAAGuM,GACtB,IAAIzI,EACA0I,EACAtS,EACAgB,EAQJ,IALA4I,EAAO5C,GAAelB,GACtBwM,EAAOtL,GAAeqL,GAGtBrS,EAAM,GACAgB,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IACrBsR,EAAMD,EAAMrR,IAChBhB,EAAIO,KAAMqJ,EAAM9D,EAAG9E,IAGrB,OAAOhB,CACR,IjD24BA+C,EAAAgE,GAAA,ckDh5BA,SAAqByH,EAAQrH,EAAO9C,GACnC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA4E,EACAxK,EACAa,EACAyL,EAIJ,GAFAhK,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAMtB,IAHAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZ4D,EAAI5D,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAItB,IAHA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACR4H,EAAK8B,EAAG1J,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACJ,IAAbuF,EAAIvF,KACRW,EAAIX,GAAO1G,EAAKoH,EAAIV,IAIxB,IlD43BAhI,EAAAgE,GAAA,cmD15BA,SAAqByH,EAAQrH,EAAO9C,GACnC,IAAI+D,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAQ,EACAP,EACAiB,EACA2D,EACAC,EACAzK,EACAa,EACAyL,EAKJ,GAHAhK,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAMjC,IAHA1C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZ4D,EAAI5D,EAAQ,GACN/F,EAAK,EAAGA,EAAKD,EAAIC,IAItB,IAHAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACR8H,EAAK6B,EAAG3J,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAItB,IAHA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT4H,EAAKC,EAAI7H,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACJ,IAAbuF,EAAIvF,KACRW,EAAIX,GAAO1G,EAAKoH,EAAIV,IAKzB,InD23BAhI,EAAAgE,GAAA,qBoD56BA,SAA4BkF,EAAIC,GAC/B,IAAInK,EACAwQ,EACAnW,EACA4D,EACAmD,EACAqP,EACAnW,EACAyI,EACAsI,EACApM,EACAK,EACA8P,EAiBJ,IAfApP,EAAQC,UAAU1B,OAGlBlE,EAAM,CAAE6P,EAAIC,GAMZ7P,EAAM,CAAE,EAAG,GAGXyI,GANAyN,EAAO,CAAEtG,EAAG3L,OAAQ4L,EAAG5L,SAMb,GAAMiS,EAAM,GAGhBvR,EAAI,EAAGA,EAAIe,EAAOf,IACvBwR,EAAMxQ,UAAWhB,GACjB5E,EAAImE,KAAMiS,GACVD,EAAKhS,KAAMiS,EAAIlS,QACfjE,EAAIkE,KAAM,GACVuE,GAAKyN,EAAMvR,GAIZ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAI8D,EAAG9D,IAAM,CAGzB,IADAmQ,EAAInQ,EACEK,EAAIU,EAAM,EAAGV,GAAK,EAAGA,IAE1B8P,GADA/D,EAAI+D,EAAIoB,EAAMlR,GAEd8P,GAAKoB,EAAMlR,GACXhF,EAAKgF,GAAM+L,EAIZ,IADAjK,EAAM,GACA9B,EAAI,EAAGA,EAAIU,EAAOV,IACvB8B,EAAI5C,KAAMnE,EAAKiF,GAAKhF,EAAKgF,KAE1BrB,EAAIO,KAAM4C,EACV,CACD,OAAOnD,CACR,IpD+3BA+C,EAAAgE,GAAA,QnC12BA,SAAejB,GACd,IAAIwH,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAEHnG,GAAmBiG,GAChBU,GAAUhE,EAAgBsD,EAAG,IAEhCrG,GAAkBqG,GACfU,GAAUjE,EAAeuD,EAAG,IA7CtC,SAAoBA,GACnB,IAAIS,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7B,GAAKhF,EAAKuK,EAAMvF,GACf,OAAO,EAGT,OAAO,CACR,CAiCS6E,CAAWyH,GAEZ9G,GAAUV,EAClB,ImCu2BA/C,EAAAgE,GAAA,UqD33BA,SAAiBjB,EAAG7B,EAAWlD,GAC9B,IAAIuM,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAvCV,SAAoBF,EAAG7B,EAAWlD,GACjC,IAAIwF,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7B,GAAKiD,EAAUhD,KAAMF,EAAS/E,EAAKuK,EAAMvF,GAAKA,EAAGuF,GAChD,OAAO,EAGT,OAAO,CACR,CA0BSV,CAAWyH,EAAKrJ,EAAWlD,GAxEpC,SAAmB+E,EAAG7B,EAAWlD,GAChC,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1B,GAAKiD,EAAUhD,KAAMF,EAAS+E,EAAG9E,GAAKA,EAAG8E,GACxC,OAAO,EAGT,OAAO,CACR,CAkEQU,CAAUV,EAAG7B,EAAWlD,EAChC,IrD+3BAgC,EAAAgE,GAAA,esDr4BA,SAAsBjB,EAAG7B,EAAWlD,GACnC,IAAIuM,EAAMhH,GAAkBR,GAC5B,OAAKwH,EAAItH,iBAvCV,SAAoBF,EAAG7B,EAAWlD,GACjC,IAAIwF,EACAvK,EACAgF,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEb7E,EAAIuF,EAAKjG,OAAO,EAAGU,GAAK,EAAGA,IAChC,GAAKiD,EAAUhD,KAAMF,EAAS/E,EAAKuK,EAAMvF,GAAKA,EAAGuF,GAChD,OAAO,EAGT,OAAO,CACR,CA0BSV,CAAWyH,EAAKrJ,EAAWlD,GAxEpC,SAAmB+E,EAAG7B,EAAWlD,GAChC,IAAIC,EACJ,IAAMA,EAAI8E,EAAExF,OAAO,EAAGU,GAAK,EAAGA,IAC7B,GAAKiD,EAAUhD,KAAMF,EAAS+E,EAAG9E,GAAKA,EAAG8E,GACxC,OAAO,EAGT,OAAO,CACR,CAkEQU,CAAUV,EAAG7B,EAAWlD,EAChC,ItDy4BAgC,EAAAgE,GAAA,QAAAkG,IAUAlK,EAAAgE,GAAA,QuDv+BA,SAAe3F,GACd,OAAOoG,GAAQ,EAAKpG,EACrB,IvD++BA2B,EAAAgE,GAAA,UwDj/BA,SAAiBI,GAChB,OAAOgB,GAAU,EAAKhB,EACvB,IxDy/BApE,EAAAgE,GAAA,UyD3/BA,SAAiBI,GAChB,OAAOmB,GAAU,EAAKnB,EACvB,IzDmgCApE,EAAAgE,GAAA,U0DrgCA,SAAiBI,GAChB,OAAOwB,GAAU,EAAKxB,EACvB,I1D6gCApE,EAAAgE,GAAA,U2D/gCA,SAAiBI,GAChB,OAAO4B,GAAU,EAAK5B,EACvB,I3DuhCApE,EAAAgE,GAAA,U4DrhCA,SAAiBI,GAChB,OAAOgC,GAAU,EAAKhC,EACvB,I5D6hCApE,EAAAgE,GAAA,gB6DphCA,SAAuByH,EAAQrH,EAAO9C,GACrC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA+C,EACAiC,EACAQ,EACApL,EACAa,EACAzG,EACA0Q,EACA3Q,EAIJ,GAFAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAQtB,IALAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZvO,EAAIuO,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAMtB,IALA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACR+F,EAAKvO,EAAGwI,GACRgI,EAAKE,EAAGlI,GACRwI,EAAKjR,EAAGyI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAGrD,I7D0/BAhI,EAAAgE,GAAA,gB8D9hCA,SAAuByH,EAAQrH,EAAO9C,GACrC,IAAI+D,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAC,EACA+C,EACAiC,EACAQ,EACAjF,EACAU,EACA+B,EACA+D,EACAC,EACA5M,EACAa,EACAzG,EACA0Q,EACA3Q,EAKJ,GAHAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAQjC,IALA1C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZvO,EAAIuO,EAAQ,GACN/F,EAAK,EAAGA,EAAKD,EAAIC,IAMtB,IALAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACRiG,EAAKxO,EAAGuI,GACRgK,EAAK7B,EAAGnI,GACRiK,EAAKzS,EAAGwI,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAMtB,IALA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACTwI,EAAKwB,EAAIhK,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAItD,I9Dq/BAhI,EAAAgE,GAAA,gB+DxiCA,SAAuByH,EAAQrH,EAAO9C,GACrC,IAAI+D,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAC,EACA+C,EACAiC,EACAQ,EACAjF,EACAU,EACA+B,EACA+D,EACAC,EACAxG,EACAW,EACA8B,EACAgE,EACAC,EACA9M,EACAa,EACAzG,EACA0Q,EACA3Q,EAMJ,GAJAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAQ5C,IALA/C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZvO,EAAIuO,EAAQ,GACN1F,EAAK,EAAGA,EAAKD,EAAIC,IAMtB,IALAoD,EAAKpG,EAAGgD,GACR+D,EAAKlG,EAAGmC,GACR6F,EAAKzO,EAAG4I,GACR6J,EAAK/B,EAAG9H,GACR8J,EAAK3S,EAAG6I,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAMtB,IALAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACTgK,EAAKE,EAAIlK,GACTiK,EAAKE,EAAInK,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAMtB,IALA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACTwI,EAAKwB,EAAIhK,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAKvD,I/Dg/BAhI,EAAAgE,GAAA,gBgEljCA,SAAuByH,EAAQrH,EAAO9C,GACrC,IAAI+D,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAC,EACA+C,EACAiC,EACAQ,EACAjF,EACAU,EACA+B,EACA+D,EACAC,EACAxG,EACAW,EACA8B,EACAgE,EACAC,EACA7F,EACAC,EACA4B,EACAiE,EACAC,EACAhN,EACAa,EACAzG,EACA0Q,EACA3Q,EAOJ,GALAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,GAQvD,IALAnD,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZvO,EAAIuO,EAAQ,GACNtF,EAAK,EAAGA,EAAKD,EAAIC,IAMtB,IALA6D,EAAKjH,EAAGoD,GACR8D,EAAKrG,EAAGuC,GACR0F,EAAK1O,EAAGgJ,GACR2J,EAAKjC,EAAG1H,GACR4J,EAAK7S,EAAGiJ,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAMtB,IALAoD,EAAKa,EAAIjE,GACT+D,EAAKG,EAAIlE,GACT6F,EAAKC,EAAI9F,GACT6J,EAAKE,EAAI/J,GACT8J,EAAKE,EAAIhK,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAMtB,IALAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACTgK,EAAKE,EAAIlK,GACTiK,EAAKE,EAAInK,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAMtB,IALA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACTwI,EAAKwB,EAAIhK,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAMxD,IhE2+BAhI,EAAAgE,GAAA,aiE3jCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA+C,EACAiC,EACAC,EACAO,EACApL,EACAa,EACAzG,EACA0Q,EACAC,EACA5Q,EAIJ,GAFAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAStB,IANAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZqC,EAAIrC,EAAQ,GACZvO,EAAIuO,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAOtB,IANA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACR+F,EAAKvO,EAAGwI,GACRgI,EAAKE,EAAGlI,GACRiI,EAAKE,EAAGnI,GACRwI,EAAKjR,EAAGyI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAAM4F,EAAI5F,GAG/D,IjE6hCAhI,EAAAgE,GAAA,akErkCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAC,EACA+C,EACAiC,EACAC,EACAO,EACAjF,EACAU,EACA+B,EACA+D,EACAM,EACAL,EACA5M,EACAa,EACAzG,EACA0Q,EACAC,EACA5Q,EAKJ,GAHAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GASjC,IANA1C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZqC,EAAIrC,EAAQ,GACZvO,EAAIuO,EAAQ,GACN/F,EAAK,EAAGA,EAAKD,EAAIC,IAOtB,IANAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACRiG,EAAKxO,EAAGuI,GACRgK,EAAK7B,EAAGnI,GACRsK,EAAKlC,EAAGpI,GACRiK,EAAKzS,EAAGwI,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAOtB,IANA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACTiI,EAAKoC,EAAIrK,GACTwI,EAAKwB,EAAIhK,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAAM4F,EAAI5F,GAIhE,IlEshCAhI,EAAAgE,GAAA,amE/kCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAC,EACA+C,EACAiC,EACAC,EACAO,EACAjF,EACAU,EACA+B,EACA+D,EACAM,EACAL,EACAxG,EACAW,EACA8B,EACAgE,EACAK,EACAJ,EACA9M,EACAa,EACAzG,EACA0Q,EACAC,EACA5Q,EAMJ,GAJAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAS5C,IANA/C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZqC,EAAIrC,EAAQ,GACZvO,EAAIuO,EAAQ,GACN1F,EAAK,EAAGA,EAAKD,EAAIC,IAOtB,IANAoD,EAAKpG,EAAGgD,GACR+D,EAAKlG,EAAGmC,GACR6F,EAAKzO,EAAG4I,GACR6J,EAAK/B,EAAG9H,GACRkK,EAAKnC,EAAG/H,GACR8J,EAAK3S,EAAG6I,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAOtB,IANAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACTgK,EAAKE,EAAIlK,GACTsK,EAAKC,EAAIvK,GACTiK,EAAKE,EAAInK,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAOtB,IANA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACTiI,EAAKoC,EAAIrK,GACTwI,EAAKwB,EAAIhK,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAAM4F,EAAI5F,GAKjE,InE+gCAhI,EAAAgE,GAAA,aoEzlCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAC,EACA+C,EACAiC,EACAC,EACAO,EACAjF,EACAU,EACA+B,EACA+D,EACAM,EACAL,EACAxG,EACAW,EACA8B,EACAgE,EACAK,EACAJ,EACA7F,EACAC,EACA4B,EACAiE,EACAI,EACAH,EACAhN,EACAa,EACAzG,EACA0Q,EACAC,EACA5Q,EAOJ,GALAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,GASvD,IANAnD,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACZqC,EAAIrC,EAAQ,GACZvO,EAAIuO,EAAQ,GACNtF,EAAK,EAAGA,EAAKD,EAAIC,IAOtB,IANA6D,EAAKjH,EAAGoD,GACR8D,EAAKrG,EAAGuC,GACR0F,EAAK1O,EAAGgJ,GACR2J,EAAKjC,EAAG1H,GACR+J,EAAKpC,EAAG3H,GACR4J,EAAK7S,EAAGiJ,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAOtB,IANAoD,EAAKa,EAAIjE,GACT+D,EAAKG,EAAIlE,GACT6F,EAAKC,EAAI9F,GACT6J,EAAKE,EAAI/J,GACTkK,EAAKC,EAAInK,GACT8J,EAAKE,EAAIhK,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAOtB,IANAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACTgK,EAAKE,EAAIlK,GACTsK,EAAKC,EAAIvK,GACTiK,EAAKE,EAAInK,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAOtB,IANA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACTiI,EAAKoC,EAAIrK,GACTwI,EAAKwB,EAAIhK,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBmG,EAAInG,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAAM2F,EAAI3F,GAAM4F,EAAI5F,GAMlE,IpEwgCAhI,EAAAgE,GAAA,gBAAAC,IAUAjE,EAAAgE,GAAA,WqExgCA,SAAkBjB,GACjB,IAAIwH,EACJ,OAhHD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CA8GMC,CAAWrI,EAAG,WACXA,EAAEoN,WAEV5F,EAAMhH,GAAkBR,IACfE,iBA5DV,SAAoBF,GACnB,IAAIS,EACAvK,EACAC,EACAkH,EACA2B,EACAgD,EACA9G,EACAK,EAQJ,IANAkF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GACnB5J,EAAM6J,EAAED,UAAW,GAEnBf,EAAIC,EAAOwB,EAAKjG,OAAO,GACvBwH,EAAIvB,EAAKjG,OAAS,EACZU,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBK,EAAIyG,EAAI9G,EACRmC,EAAMnH,EAAKuK,EAAMvF,GACjB/E,EAAKsK,EAAMvF,EAAGhF,EAAKuK,EAAMlF,IACzBpF,EAAKsK,EAAMlF,EAAG8B,GAEf,OAAOoD,CACR,CAsCSV,CAAWyH,GApGpB,SAAmBxH,GAClB,IAAI3C,EACA2B,EACAgD,EACA9G,EACAK,EAIJ,IAFAyD,EAAIC,EAAOe,EAAExF,OAAO,GACpBwH,EAAIhC,EAAExF,OAAS,EACTU,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBK,EAAIyG,EAAI9G,EACRmC,EAAM2C,EAAG9E,GACT8E,EAAG9E,GAAM8E,EAAGzE,GACZyE,EAAGzE,GAAM8B,EAEV,OAAO2C,CACR,CAsFQU,CAAUV,EAClB,IrEwgCA/C,EAAAgE,GAAA,SAAA3J,IAUA2F,EAAAgE,GAAA,SN/iCA,SAAgBjB,EAAGnC,EAAOO,GACzB,IAAIoJ,EACJ,OAzFD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CAuFMC,CAAWrI,EAAG,SACXA,EAAEuD,MAAO1F,EAAOO,IAExBoJ,EAAMhH,GAAkBR,IACfE,iBApDV,SAAoBF,EAAGnC,EAAOO,GAC7B,IAAIqC,EACAvK,EACAgE,EACAgB,EAKJ,IAHAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GACnB7F,EAAM,GACAgB,EAAI2C,EAAO3C,EAAIkD,EAAKlD,IACzBhB,EAAIO,KAAMvE,EAAKuK,EAAMvF,IAEtB,OAAOhB,CACR,CAwCS6F,CAAWyH,EAAK3J,EAAOO,GA3EhC,SAAkB4B,EAAGnC,EAAOO,GAC3B,OAAOsJ,GAAWvM,KAAM6E,EAAGnC,EAAOO,EACnC,CA4EQ3F,CAASuH,EAAGnC,EAAOO,EAC3B,IM8iCAnB,EAAAgE,GAAA,mBsE5oCA,SAA0BjB,EAAGqB,EAAOa,EAAS7C,GAC5C,IAAInJ,EACAgE,EACAmD,EACA2L,EACAC,EACA3G,EACAC,EACA0C,EACArC,EACAoJ,EAWJ,IATA9V,EAAMgL,GAAelB,GAErBuC,EAAKlB,EAAO,GACZiB,EAAKjB,EAAO,GAEZ4H,EAAM/G,EAAS,GACf8G,EAAM9G,EAAS,GAEfhI,EAAM,GACA0I,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFAvF,EAAM,GACN2O,EAAK3M,EAAW4J,EAAIrG,EACdqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB5H,EAAI5C,KAAMvE,EAAK8J,EAAGgM,IAClBA,GAAMhD,EAEP9O,EAAIO,KAAM4C,EACV,CACD,OAAOnD,CACR,ItEunCA+C,EAAAgE,GAAA,mBuEtpCA,SAA0BjB,EAAGqB,EAAOa,EAAS7C,GAC5C,IAAInJ,EACAgE,EACA8O,EACAC,EACAO,EACA6D,EACAC,EACAhL,EACAC,EACAG,EACAuC,EACArC,EACAD,EACA4K,EACAC,EAaJ,IAXAtX,EAAMgL,GAAelB,GAErB0C,EAAKrB,EAAO,GACZkB,EAAKlB,EAAO,GACZiB,EAAKjB,EAAO,GAEZmI,EAAMtH,EAAS,GACf+G,EAAM/G,EAAS,GACf8G,EAAM9G,EAAS,GAEfhI,EAAM,GACAyI,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFA4K,EAAK,GACLF,EAAMhO,EAAWmK,EAAI7G,EACfC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA4K,EAAK,GACLF,EAAMD,EAAQpE,EAAIrG,EACZqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBuI,EAAG/S,KAAMvE,EAAK8J,EAAGsN,IACjBA,GAAOtE,EAERuE,EAAG9S,KAAM+S,EACT,CACDtT,EAAIO,KAAM8S,EACV,CACD,OAAOrT,CACR,IvEqnCA+C,EAAAgE,GAAA,mBwEhqCA,SAA0BjB,EAAGqB,EAAOa,EAAS7C,GAC5C,IAAInJ,EACAgE,EACA8O,EACAC,EACAO,EACAI,EACA6D,EACAJ,EACAC,EACAhL,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA0K,EACAH,EACAC,EAeJ,IAbAtX,EAAMgL,GAAelB,GAErB+C,EAAK1B,EAAO,GACZqB,EAAKrB,EAAO,GACZkB,EAAKlB,EAAO,GACZiB,EAAKjB,EAAO,GAEZuI,EAAM1H,EAAS,GACfsH,EAAMtH,EAAS,GACf+G,EAAM/G,EAAS,GACf8G,EAAM9G,EAAS,GAEfhI,EAAM,GACA8I,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFA0K,EAAK,GACLD,EAAMpO,EAAWuK,EAAI5G,EACfL,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFA4K,EAAK,GACLF,EAAMI,EAAQjE,EAAI7G,EACZC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA4K,EAAK,GACLF,EAAMD,EAAQpE,EAAIrG,EACZqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBuI,EAAG/S,KAAMvE,EAAK8J,EAAGsN,IACjBA,GAAOtE,EAERuE,EAAG9S,KAAM+S,EACT,CACDE,EAAGjT,KAAM8S,EACT,CACDrT,EAAIO,KAAMiT,EACV,CACD,OAAOxT,CACR,IxEmnCA+C,EAAAgE,GAAA,mByE1qCA,SAA0BjB,EAAGqB,EAAOa,EAAS7C,GAC5C,IAAInJ,EACAgE,EACA8O,EACAC,EACAO,EACAI,EACAI,EACA2D,EACAF,EACAJ,EACAC,EACAhL,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAwK,EACAF,EACAH,EACAC,EAiBJ,IAfAtX,EAAMgL,GAAelB,GAErBmD,EAAK9B,EAAO,GACZ0B,EAAK1B,EAAO,GACZqB,EAAKrB,EAAO,GACZkB,EAAKlB,EAAO,GACZiB,EAAKjB,EAAO,GAEZ2I,EAAM9H,EAAS,GACf0H,EAAM1H,EAAS,GACfsH,EAAMtH,EAAS,GACf+G,EAAM/G,EAAS,GACf8G,EAAM9G,EAAS,GAEfhI,EAAM,GACAkJ,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFAwK,EAAK,GACLD,EAAMtO,EAAW2K,EAAI5G,EACfJ,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFA0K,EAAK,GACLD,EAAME,EAAQ/D,EAAI5G,EACZL,EAAK,EAAGA,EAAKD,EAAIC,IAAO,CAG7B,IAFA4K,EAAK,GACLF,EAAMI,EAAQjE,EAAI7G,EACZC,EAAK,EAAGA,EAAKL,EAAIK,IAAO,CAG7B,IAFA4K,EAAK,GACLF,EAAMD,EAAQpE,EAAIrG,EACZqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBuI,EAAG/S,KAAMvE,EAAK8J,EAAGsN,IACjBA,GAAOtE,EAERuE,EAAG9S,KAAM+S,EACT,CACDE,EAAGjT,KAAM8S,EACT,CACDK,EAAGnT,KAAMiT,EACT,CACDxT,EAAIO,KAAMmT,EACV,CACD,OAAO1T,CACR,IzEinCA+C,EAAAgE,GAAA,Q0E/rCA,SAAejB,EAAGsD,GACjB,IAAIpN,EACAgE,EACAgB,EAOJ,IAJAhF,EAAMgL,GAAelB,GAGrB9F,EAAM,GACAgB,EAAI,EAAGA,EAAIoI,EAAQ9I,OAAQU,IAChChB,EAAIO,KAAMvE,EAAK8J,EAAGsD,EAASpI,KAE5B,OAAOhB,CACR,I1E2rCA+C,EAAAgE,GAAA,e2E9sCA,SAAejB,EAAGsD,GACjB,IAAIpJ,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAIoI,EAAQ9I,OAAQU,IAChChB,EAAIO,KAAMuF,EAAGsD,EAASpI,KAEvB,OAAOhB,CACR,I3E+sCA+C,EAAAgE,GAAA,SAAA0G,IAUA1K,EAAAgE,GAAA,U4E7sCA,SAAiBjB,EAAGsD,EAASsE,EAAWC,GACvC,IAAIC,EACA5N,EACAoH,EACAyG,EACAxR,EACA2E,EAGJ,IAAc,KADdoG,EAAM0G,EAAgBJ,EAAWK,IAEhC,MAAM,IAAIzL,WAAY5B,EAAQ,4GArCpB,EAqCwIgN,IAGnJ,GADA1N,EAAM,GACO,IAARoH,EAAY,CAGhB,IAFAyG,EAAMG,EAAeL,GACrBC,EAAY9H,EAAExF,OAAS,EACjBU,EAAI,EAAGA,EAAIoI,EAAQ9I,OAAQU,IAChC3E,EAAMwR,EAAKzE,EAASpI,GAAK4M,GACzB5N,EAAIO,KAAMuF,EAAGzJ,IAEd,OAAO2D,CACP,CAGD,IADAoH,EAAMsG,EAAY,EACZ1M,EAAI,EAAGA,EAAI8E,EAAExF,OAAQU,IAC1BhB,EAAIO,KAAMkN,GAAQ3H,EAAG9E,GAAKoI,EAAShC,EAAKuG,IAEzC,OAAO3N,CACR,I5E2rCA+C,EAAAgE,GAAA,a6E7tCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA+C,EACAiC,EACA5K,EACAa,EACAzG,EACA0Q,EAIJ,GAFAxI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAOtB,IAJAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAKtB,IAJA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACR+F,EAAKvO,EAAGwI,GACRgI,EAAKE,EAAGlI,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB2F,EAAI3F,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAG3C,I7EusCAhI,EAAAgE,GAAA,a8EvuCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAC,EACA+C,EACAiC,EACAzE,EACAU,EACA+B,EACA+D,EACA3M,EACAa,EACAzG,EACA0Q,EAKJ,GAHAxI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAOjC,IAJA1C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACN/F,EAAK,EAAGA,EAAKD,EAAIC,IAKtB,IAJAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACRiG,EAAKxO,EAAGuI,GACRgK,EAAK7B,EAAGnI,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAKtB,IAJA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB2F,EAAI3F,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAI5C,I9EosCAhI,EAAAgE,GAAA,a+EjvCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAC,EACA+C,EACAiC,EACAzE,EACAU,EACA+B,EACA+D,EACAvG,EACAW,EACA8B,EACAgE,EACA7M,EACAa,EACAzG,EACA0Q,EAMJ,GAJAxI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAO5C,IAJA/C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACN1F,EAAK,EAAGA,EAAKD,EAAIC,IAKtB,IAJAoD,EAAKpG,EAAGgD,GACR+D,EAAKlG,EAAGmC,GACR6F,EAAKzO,EAAG4I,GACR6J,EAAK/B,EAAG9H,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAKtB,IAJAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACTgK,EAAKE,EAAIlK,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAKtB,IAJA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB2F,EAAI3F,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAK7C,I/EisCAhI,EAAAgE,GAAA,agF3vCA,SAAoByH,EAAQrH,EAAO9C,GAClC,IAAI+D,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAC,EACA+C,EACAiC,EACAzE,EACAU,EACA+B,EACA+D,EACAvG,EACAW,EACA8B,EACAgE,EACA5F,EACAC,EACA4B,EACAiE,EACA/M,EACAa,EACAzG,EACA0Q,EAOJ,GALAxI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAO5C,IAJA/C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACZtO,EAAIsO,EAAQ,GACZoC,EAAIpC,EAAQ,GACNtF,EAAK,EAAGA,EAAKD,EAAIC,IAKtB,IAJA6D,EAAKjH,EAAGoD,GACR8D,EAAKrG,EAAGuC,GACR0F,EAAK1O,EAAGgJ,GACR2J,EAAKjC,EAAG1H,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAKtB,IAJAoD,EAAKa,EAAIjE,GACT+D,EAAKG,EAAIlE,GACT6F,EAAKC,EAAI9F,GACT6J,EAAKE,EAAI/J,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAKtB,IAJAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACTiG,EAAKC,EAAIlG,GACTgK,EAAKE,EAAIlK,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAKtB,IAJA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACT+F,EAAKC,EAAIhG,GACTgI,EAAK+B,EAAI/J,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtB2F,EAAI3F,GAAO1G,EAAKoH,EAAIV,GAAMW,EAAIX,GAAM0D,EAAI1D,GAM9C,IhF8rCAhI,EAAAgE,GAAA,mBiF1wCA,SAA0B3K,GACzB,OAAKA,GAAsB,iBAARA,GAAoBN,GAAiBM,GAChDA,EAED,IAAI8J,GAAe9J,EAC3B,IjF+wCA2G,EAAAgE,GAAA,akFlpCA,SAAiBjB,EAAGuL,EAAOC,GAC1B,OAAKA,EAnEN,SAA0BxL,EAAGuL,GAC5B,IAAIE,EACAC,EACApQ,EACApB,EACA+D,EACA9D,EACAe,EAIJ,GAFAhB,EAAM,GAEO,KADboB,EAAM0E,EAAExF,QAEP,OAAON,EAKR,IAHA+D,GAAM,EACNyN,EAAOmC,IACPpC,EAAQ,EACFvQ,EAAI,EAAGA,EAAII,EAAKJ,KACrBf,EAAI6F,EAAG9E,MACIwQ,GAAUzN,GAAO2N,EAAOzR,IAClCsR,GAAS,IACKF,GACbrR,EAAIO,KAAMiR,IAGXA,EAAOvR,EACPsR,EAAQ,EACRvR,EAAIO,KAAMiR,GACVzN,GAAM,EACD2N,EAAOF,KACXzN,GAAM,IAIT,OAAO/D,CACR,CAiCS2R,CAAiB7L,EAAGuL,GA7H7B,SAAqBvL,EAAGuL,GACvB,IAAIE,EACAC,EACApQ,EACApB,EACAC,EACAe,EAIJ,GAFAhB,EAAM,GAEO,KADboB,EAAM0E,EAAExF,QAEP,OAAON,EAIR,IAFAwR,EAAOmC,IACPpC,EAAQ,EACFvQ,EAAI,EAAGA,EAAII,EAAKJ,KACrBf,EAAI6F,EAAG9E,MACIwQ,GACVD,GAAS,IACKF,GACbrR,EAAIO,KAAMiR,IAGXA,EAAOvR,EACPsR,EAAQ,EACRvR,EAAIO,KAAMiR,IAGZ,OAAOxR,CACR,CAkGQ4T,CAAY9N,EAAGuL,EACvB,IlFupCAtO,EAAAgE,GAAA,cmFptCA,SAAqBjB,GACpB,IAAIwH,EACJ,OAnFD,SAAoBA,EAAKY,GACxB,MAAkC,mBAAlBZ,EAAKY,EACtB,CAiFMC,CAAWrI,EAAG,cACXA,EAAE+N,cAEVvG,EAAMhH,GAAkBR,IACfE,iBAxCV,SAAoBF,GACnB,IAAIS,EACAvK,EACAgE,EACAgB,EAMJ,IAJAuF,EAAOT,EAAES,KACTvK,EAAM8J,EAAED,UAAW,GAEnB7F,EAAM,GACAgB,EAAIuF,EAAKjG,OAAO,EAAGU,GAAK,EAAGA,IAChChB,EAAIO,KAAMvE,EAAKuK,EAAMvF,IAEtB,OAAOhB,CACR,CA2BS6F,CAAWyH,GAvEpB,SAAmBxH,GAClB,IAAI9F,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI8E,EAAExF,OAAO,EAAGU,GAAK,EAAGA,IAC7BhB,EAAIO,KAAMuF,EAAG9E,IAEd,OAAOhB,CACR,CAgEQwG,CAAUV,EAClB,InFotCA/C,EAAAgE,GAAA,WoFlyCA,SAAkByH,EAAQrH,EAAO9C,GAChC,IAAI+D,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA5F,EACAa,EAIJ,GAFAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAKtB,IAFAvC,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIV,GAGvB,IpFoxCAhI,EAAAgE,GAAA,aqFtyCA,SAAoByH,EAAQrH,EAAO9C,EAAKvD,GACvC,IAAIC,EACAqH,EACAC,EACA0C,EACArC,EACA+C,EACAC,EACA5F,EACAa,EACA1G,EAIJ,GAFAmI,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAQtB,IALKrG,UAAU1B,OAAS,IACvBS,EAAUiB,UAAW,IAEtB8D,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACN9F,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAK3F,EAAG4C,GACRgD,EAAK/E,EAAG+B,GACFqC,EAAK,EAAGA,EAAK3C,EAAI2C,SAEX,KADX9K,EAAIa,EAAKG,KAAMF,EAAS0K,EAAIV,GAAM,CAAErC,EAAIqC,GAAM,CAAEjF,EAAGa,OAElD+E,EAAIX,GAAO1G,EAAKpE,GAIpB,IrFgxCA8C,EAAAgE,GAAA,WsFtzCA,SAAkByH,EAAQrH,EAAO9C,GAChC,IAAI+D,EACAC,EACAG,EACAuC,EACArC,EACAD,EACAgD,EACAQ,EACAP,EACAiB,EACA7G,EACAa,EAKJ,GAHAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAKjC,IAFA1C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACN/F,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAwD,EAAKnG,EAAG2C,GACRkE,EAAKhG,EAAG8B,GACFC,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIV,GAIxB,ItF+xCAhI,EAAAgE,GAAA,WuFh0CA,SAAkByH,EAAQrH,EAAO9C,GAChC,IAAI+D,EACAC,EACAG,EACAK,EACAkC,EACArC,EACAD,EACAK,EACA2C,EACAQ,EACAC,EACAR,EACAiB,EACAE,EACA/G,EACAa,EAMJ,GAJAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAK5C,IAFA/C,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACN1F,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAoD,EAAKpG,EAAGgD,GACR+D,EAAKlG,EAAGmC,GACFL,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIV,GAKzB,IvFgyCAhI,EAAAgE,GAAA,WwF10CA,SAAkByH,EAAQrH,EAAO9C,GAChC,IAAI+D,EACAC,EACAG,EACAK,EACAI,EACA8B,EACArC,EACAD,EACAK,EACAI,EACAuC,EACAQ,EACAC,EACAa,EACArB,EACAiB,EACAE,EACAG,EACAlH,EACAa,EAOJ,GALAyB,EAAKjB,EAAO,GACZkB,EAAKlB,EAAO,GACZqB,EAAKrB,EAAO,GACZ0B,EAAK1B,EAAO,GACZ8B,EAAK9B,EAAO,KACPiB,GAAM,GAAKC,GAAM,GAAKG,GAAM,GAAKK,GAAM,GAAKI,GAAM,GAKvD,IAFAnD,EAAI0I,EAAQ,GACZ7H,EAAI6H,EAAQ,GACNtF,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFA6D,EAAKjH,EAAGoD,GACR8D,EAAKrG,EAAGuC,GACFJ,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAoD,EAAKa,EAAIjE,GACT+D,EAAKG,EAAIlE,GACHL,EAAK,EAAGA,EAAKD,EAAIC,IAGtB,IAFAwD,EAAKC,EAAIzD,GACTkE,EAAKE,EAAIpE,GACHC,EAAK,EAAGA,EAAKL,EAAIK,IAGtB,IAFA+C,EAAKQ,EAAIvD,GACTgD,EAAKiB,EAAIjE,GACHqC,EAAK,EAAGA,EAAK3C,EAAI2C,IACtBW,EAAIX,GAAO1G,EAAKoH,EAAIV,GAM1B,IxFiyCAhI,EAAAgE,GAAA,WJ9yCA,SAAkByH,EAAQrH,EAAO9C,GAChC,OAAO4C,GAASuH,EAAQ,GAAKA,EAAQ,GAAKrH,EAAM7G,OAAQ6G,EAAO,EAAG9C,EACnE,IIszCAtB,EAAAgE,GAAA,ayFj3CA,SAAoBkF,EAAIC,GACvB,IAAI9P,EACAgF,EACAJ,EAGJ,IADAI,EAAM8K,EAAKD,IACC,EACX,MAAO,CAAEA,GAGV,IADA7P,EAAM,CAAE6P,GACFjL,EAAI,EAAGA,EAAII,EAAKJ,IACrB5E,EAAImE,KAAM0L,EAAKjL,GAEhB,OAAO5E,CACR,IzF62CA2G,EAAAgE,GAAA,SAAAkH,IAUAlL,EAAAgE,GAAA,QAAAU,IAUA1E,EAAAgE,GAAA,W0F34CA,SAAkBI,GACjB,OAAOgB,GAAU,EAAKhB,EACvB,I1Fm5CApE,EAAAgE,GAAA,W2Fr5CA,SAAkBI,GACjB,OAAOmB,GAAU,EAAKnB,EACvB,I3F65CApE,EAAAgE,GAAA,W4F/5CA,SAAkBI,GACjB,OAAOwB,GAAU,EAAKxB,EACvB,I5Fu6CApE,EAAAgE,GAAA,W6Fz6CA,SAAkBI,GACjB,OAAO4B,GAAU,EAAK5B,EACvB,I7Fi7CApE,EAAAgE,GAAA,W8F/6CA,SAAkBI,GACjB,OAAOgC,GAAU,EAAKhC,EACvB,ICrBA,IAAI/I,GAAgC,mBAAhB0V,YAA+BA,iBAAc,EC6BjE,IAAAC,GATKC,IACGzV,GCdR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECOIyV,GAAQ,CACX9X,QAAWsB,GACXnB,QAAWkB,GACXV,QAAWY,MACXlB,MAASmB,GACTpB,MAASqB,GACTnB,KAAQoB,GACRlB,OAAUmB,GACVpB,OAAUqB,GACVnB,MAASoB,GACTnB,OAAUoB,GACVX,UAAaY,GACbb,WAAcc,ICTf,SAAS8V,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,CCMA,SAASkX,GAAalX,GACrB,MAAmB,cAAVA,CACV,CAiBA,SAASmX,GAAcnX,GACtB,MAAmB,eAAVA,CACV,CAoBA,SAASoX,GAASvO,EAAG7I,GACpB,IAAIqX,EACAlW,EACAmW,EACAC,EACAxU,EACAoB,EACAqT,EAEJ,IAAMtS,GAAc2D,GACnB,MAAM,IAAIrF,UAAWC,GAAQ,8EAA+EoF,IAG7G,GAAe,YAAV7I,EACJ,OAAOsK,GAAMzB,GAGd,GAAc,QADd1H,EAAO6V,GAAOhX,IAEb,MAAM,IAAIwD,UAAWC,GAAQ,uFAAwFzD,IAatH,OAVAmE,EAAM0E,EAAExF,OAIRgU,EAAQH,GADRM,EAAIC,GAAS5O,IAIb9F,EAAM,IAAI5B,EAAMgD,GAGXkT,GAASF,GAAcK,IAE1BF,EADID,EACG/R,EAAeuD,EAAG,GAElBtD,GAAgBsD,EAAG,GAGtBqO,GAAalX,IACjBuX,EAAOjS,EAAevC,EAAK,GAC3B2U,GAAW,EAAJvT,EAAOmT,EAAM,EAAGC,EAAM,GACtBxU,GAEHoU,GAAcnX,IAClBuX,EAAOhS,GAAgBxC,EAAK,GAC5B2U,GAAW,EAAJvT,EAAOmT,EAAM,EAAGC,EAAM,GACtBxU,IAGR2U,GAAOvT,EAAKmT,EAAM,EAAGvU,EAAK,GACnBA,KAGRsU,EAAQH,GAAalX,KACPmX,GAAcnX,IAE1BuX,EADIF,EACG/R,EAAevC,EAAK,GAEpBwC,GAAgBxC,EAAK,GAG7B2U,GAAOvT,EAAK0E,EAAG,EAAG0O,EAAM,GACjBxU,IAGR2U,GAAOvT,EAAK0E,EAAG,EAAG9F,EAAK,GAChBA,EACR,CC9GA,SAAS4U,GAAa9O,EAAGa,GACxB,IAAI1J,EAAQyX,GAAS/N,GACrB,GAAe,OAAV1J,EACJ,MAAM,IAAIwD,UAAWC,GAAQ,yGAA0GzD,EAAO0J,IAE/I,OAAO0N,GAASvO,EAAG7I,EACpB,CC/BA,IAAImB,GAA6B,mBAAbyW,SAA4BA,cAAW,ECiC3D,IAAAC,GATKC,KACGxW,GClBR,WACC,MAAM,IAAIC,MAAO,kBAClB,ECGIwW,GAAY,oBACZC,GAAW,CAAE,QAAS,OAAQ,SAelC,SAASC,GAAWnZ,EAAO4D,GAC1B,IAAIwV,EAGJ,GAAc,YADdA,SAAcpZ,GACW,CAExB,IADAA,EAAQqZ,KAAKC,MAAOtZ,KACLA,EACd,MAAM,IAAIyC,MAAOkC,GAAQ,6CAA8Cf,EAAK2V,gBAE7EvZ,EAAQ,IAAIqZ,KAAMrZ,EAClB,CACD,GAAc,WAAToZ,EAAoB,CACxB,IAAMH,GAAUO,KAAMxZ,GACrB,MAAM,IAAIyC,MAAOkC,GAAQ,mFAAoFf,EAAK2V,gBAElF,KAA5BvZ,EAAM4I,WAAWrE,SACrBvE,GAAS,KAEVA,EAAQ,IAAIqZ,KAAMrZ,EAClB,CACD,KAAOA,aAAiBqZ,MACvB,MAAM,IAAI3U,UAAWC,GAAQ,gHAAiHf,IAE/I,OAAO5D,CACR,CAiCA,SAASyZ,GAAW7R,EAAO8R,EAAMnV,EAAQoV,GACxC,IAAIC,EACAvU,EACAgC,EACAhH,EACA8H,EACAG,EACAlB,EACAmE,EACAtG,EASJ,GAPAI,EAAM,IACNgC,GAAM,EACNuS,EAAO,CACNC,MAAS,SAEVjS,EAAQuR,GAAWvR,EAAO,SAC1B8R,EAAOP,GAAWO,EAAM,QACnBzT,UAAU1B,OAAS,EAAI,CAc3B,GAb0B,IAArB0B,UAAU1B,OACTsC,GAAUtC,GACdqV,EAAOrV,GAEPc,EAAMd,EAGN8C,GAAM,IAGPuS,EAAOD,EACPtU,EAAMd,GAEM,IAARc,EACJ,MAAO,GAER,IAAMsB,GAAWtB,IAASA,EAAM,EAC/B,MAAM,IAAIX,UAAWC,GAAQ,oEAAqEU,IAEnG,GAAKgC,EAAM,CACV,IAAMR,GAAU+S,GACf,MAAM,IAAIlV,UAAWC,GAAQ,qEAAsEiV,IAEpG,GAAKE,GAAYF,EAAM,SAAY,CAClC,IAAMjR,GAAUiR,EAAKC,OACpB,MAAM,IAAInV,UAAWC,GAAQ,8DAA+D,QAASiV,EAAKC,QAE3G,IAAyC,IAApCX,GAAS/C,QAASyD,EAAKC,OAC3B,MAAM,IAAIpX,MAAOkC,GAAQ,gFAAiF,QAASuU,GAASrQ,KAAM,QAAU+Q,EAAKC,OAElJ,CACD,CACD,CACD,OAASD,EAAKC,OACd,IAAK,QACJvR,EAAMuR,GACN,MACD,IAAK,OACJvR,EAAM+H,EACN,MAED,QACC/H,EAAMU,EAaP,IARAb,EAAM9C,EAAM,EACZkG,GAAMmO,EAAKK,UAAYnS,EAAMmS,WAAc5R,EAI3Cf,EAAMQ,GADNvH,EAAM,IAAIsB,MAAO0D,IAEZ,GAAM+B,EACXA,EAAMA,EAAI2S,UACJ9U,EAAI,EAAGA,EAAIkD,EAAKlD,IACrBmC,GAAOmE,EACPlL,EAAK4E,GAAM,IAAIoU,KAAM/Q,EAAKlB,IAG3B,OADA/G,EAAK8H,GAAQuR,EACNrZ,CACR,CC5JA,SAAS2Z,KACR,MAAO,CAENC,OAAU,CACTjZ,QAAW,UACXkZ,QAAW,UACXjT,KAAQ,UACRkT,eAAkB,UAClBC,oBAAuB,UACvBC,uBAA0B,aAC1BC,QAAW,QACXC,eAAkB,QAClBC,iBAAoB,UAGvB,CCnBA,IAAIC,GDKI,CAENR,OAAU,CACTjZ,QAAW,UACXkZ,QAAW,UACXjT,KAAQ,UACRkT,eAAkB,UAClBC,oBAAuB,UACvBC,uBAA0B,aAC1BC,QAAW,QACXC,eAAkB,QAClBC,iBAAoB,WCfnBE,GAAO,CACV,iBAAkBD,GAASR,OAAOjZ,QAClC,iBAAkByZ,GAASR,OAAOC,QAClC,cAAeO,GAASR,OAAOhT,KAC/B,wBAAyBwT,GAASR,OAAOE,eACzC,6BAA8BM,GAASR,OAAOG,oBAC9C,gCAAiCK,GAASR,OAAOI,uBACjD,iBAAkBI,GAASR,OAAOK,QAClC,wBAAyBG,GAASR,OAAOM,eACzC,0BAA2BE,GAASR,OAAOO,kBCI5CxT,EAAA+D,GAAA,ODYA,SAAcnH,GACb,IAAIM,EAAIwW,GAAM9W,GACd,YAAe,IAANM,EAAiB,KAAOA,CAClC,soBE5BIyW,GAAY,gBAmBhB,SAASV,KACR,IAAIW,EACA3W,EACA+D,EACJ,OAA0B,IAArB/B,UAAU1B,OACPkF,GAAOoR,IAAIvN,SAEnBtF,GAAM,EACN4S,EAAO3U,UAAW,GACb0U,GAAUnB,KAAMoB,IAEN,SADdA,EAAOE,GAASF,EAAMD,GAAW,OAEhC3S,GAAM,GAIR/D,GADAA,EAAMwF,GAAQmR,IACE3W,EAAIqJ,QAAU,GACzBtF,GAAO/D,EAAIM,OAAS,GACxBN,EAAIO,KAAM,WAEJP,EACR,CCrCA,IAAI8W,GAAgBf,GAAS/Z,IAAK,kBAsBlC,SAASyL,GAAOnH,GACf,IAAIrD,EACAmB,EACJ,IAAM8D,EAAsB5B,GAC3B,MAAM,IAAIG,UAAWC,EAAQ,+EAAgFJ,IAO9G,GAAe,aAJdrD,EADI+E,UAAU1B,OAAS,EACf0B,UAAW,GAEX8U,IAGR,OAAOC,GAAQzW,GAGhB,GAAc,QADdlC,EAAO6V,GAAOhX,IAEb,MAAM,IAAIwD,UAAWC,EAAQ,iFAAkFzD,IAEhH,OAAO,IAAImB,EAAMkC,EAClB,CC3BA,SAAS0W,GAAO1W,GACf,OAAK0B,UAAU1B,OAAS,EAChBmH,GAAOnH,EAAQ0B,UAAW,IAE3ByF,GAAOnH,EACf,CCJA,SAAS2W,GAAWnR,GACnB,IAAIC,EAAK9I,GAAO6I,GAChB,GAAY,OAAPC,EACJ,MAAM,IAAItF,UAAWC,GAAQ,8GAA+GoF,IAK7I,OAHK9D,UAAU1B,OAAS,IACvByF,EAAK/D,UAAW,IAEVgV,GAAOlR,EAAExF,OAAQyF,EACzB,CCfA,IAAIzE,GAAsBC,KACtBuV,GAAgBf,GAAS/Z,IAAK,kBAalC,SAASkb,GAAgBnX,EAAIhE,GAC5B,IAAIK,EAIJ,IADAA,EAAM,IAED2D,EAAGI,OACAC,MAGPhE,EAAImE,KAAMxE,GAEX,OAAOK,CACR,CAUA,SAAS+a,GAAiB/a,EAAKL,GAC9B,IAAIiF,EACJ,IAAMA,EAAI,EAAGA,EAAI5E,EAAIkE,OAAQU,IAC5B5E,EAAIH,IAAKF,EAAOiF,GAEjB,OAAO5E,CACR,CA8FA,SAASgb,KACR,IAAIrb,EACAgG,EACA9E,EACAmB,EACAhC,EACAgF,EACAoR,EAWJ,GATAzQ,EAAQC,UAAU1B,QAClByB,GAAS,IACK,GAAK2C,GAAU1C,UAAWD,KACvC9E,EAAQ+E,UAAWD,GACnBA,GAAS,GAET9E,EAAQ6Z,GAGK,QADd1Y,EAAO6V,GAAOhX,IAEb,MAAM,IAAIwD,UAAWC,GAAQ,sEAAuEzD,IAErG,GAAe,YAAVA,EAAsB,CAC1B,GAAK8E,GAAS,EACb,MAAO,GAIR,GAFAhG,EAAQiG,UAAW,GACnBwQ,EAAMxQ,UAAW,GACF,IAAVD,EAAc,CAMlB,GALKG,GAAsBsQ,GAC1BpR,EAAMoR,EACKrQ,GAAcqQ,KACzBpR,EAAMoR,EAAIlS,aAEE,IAARc,EACJ,OAAOoG,GAAQzL,EAAOqF,GAEvB,GAAKqB,GAAe+P,GACnB,MAAM,IAAIhU,MAAO,qFAElB,GAAKoE,GAAU4P,GAAQ,CACtB,IAA6B,IAAxBlR,GACJ,MAAM,IAAIb,UAAWC,GAAQ,sIAAuI8R,IAErK,IAAM3P,GAAY2P,EAAK1P,KACtB,MAAM,IAAIrC,UAAWC,GAAQ,wGAAyG8R,IAGvI,GADAA,EAAMA,EAAK1P,OACLD,GAAY2P,EAAIrS,MACrB,MAAM,IAAIM,UAAWC,GAAQ,wGAAyG8R,IAEvI,OAAO0E,GAAgB1E,EAAKzW,EAC5B,CACD,MAAM,IAAI0E,UAAWC,GAAQ,wGAAyG8R,GACzI,CAAS,GAAK/P,GAAe+P,GAC1B,MAAM,IAAIhU,MAAO,qFAElB,MAAM,IAAIiC,UAAWC,GAAQ,wGAAyG8R,GACtI,CACD,GAAKzQ,GAAS,EACb,OAAO,IAAI3D,EAAM,GAElB,GAAe,IAAV2D,EAEJ,GAAKI,GADLqQ,EAAMxQ,UAAW,IAEhB5F,EAAM,IAAIgC,EAAMoU,EAAIlS,aACd,GAAKmC,GAAe+P,GAC1BpW,EAAM,IAAIgC,EAAMoU,QACV,GAAKtQ,GAAsBsQ,GACjCpW,EAAM,IAAIgC,EAAMoU,OACV,KAAK5P,GAAU4P,GAarB,MAAM,IAAI/R,UAAWC,GAAQ,wGAAyG8R,IAZtI,IAA6B,IAAxBlR,GACJ,MAAM,IAAIb,UAAWC,GAAQ,sIAAuI8R,IAErK,IAAM3P,GAAY2P,EAAK1P,KACtB,MAAM,IAAIrC,UAAWC,GAAQ,wGAAyG8R,IAGvI,GADAA,EAAMA,EAAK1P,OACLD,GAAY2P,EAAIrS,MACrB,MAAM,IAAIM,UAAWC,GAAQ,wGAAyG8R,IAEvIpW,EAAM,IAAIgC,EAAMiZ,GAAY7E,GAG5B,MAEDpW,EADqB,IAAV2F,EACL,IAAI3D,EAAM4D,UAAU,GAAIA,UAAU,IAElC,IAAI5D,EAAM4D,UAAU,GAAIA,UAAU,GAAIA,UAAU,IASvD,OAPK5F,EAAIkE,OAAS,IACZ,WAAWiV,KAAMtY,GACrBka,GAAiB/a,EAAK4F,UAAW,IAEjCsV,GAAOlb,EAAIkE,OAAQ0B,UAAW,GAAK5F,EAAK,IAGnCA,CACR,CC1OA,IAAIkF,GAAsBC,KACtBuV,GAAgBf,GAAS/Z,IAAK,kBAclC,SAASub,GAAqBxX,EAAIe,EAAMC,GACvC,IAAI3E,EACA4E,EAKJ,IAFA5E,EAAM,GACN4E,GAAK,GAEAjB,EAAGI,OACAC,MAGPY,GAAK,EACL5E,EAAImE,KAAMO,EAAKG,KAAMF,EAASC,IAE/B,OAAO5E,CACR,CAWA,SAAS+a,GAAiB/a,EAAK0E,EAAMC,GACpC,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAI5E,EAAIkE,OAAQU,IAC5B5E,EAAIH,IAAK6E,EAAKG,KAAMF,EAASC,GAAKA,GAEnC,OAAO5E,CACR,CA4JA,SAASob,KACR,IAAIzW,EACAgB,EACA9E,EACA6D,EACA1C,EACAhC,EACAgF,EACAoR,EAKJ,GAAe,KAHfzQ,EAAQC,UAAU1B,QAKjB,OAAO,IADPlC,EAAO6V,GAAO6C,KACG,GAIlB,GAAKpS,GADLzH,EAAQ+E,UAAW,IACM,CAExB,GAAKD,EAAQ,EACZ,MAAM,IAAItB,UAAW,6FAGtB,GAAc,QADdrC,EAAO6V,GAAOhX,IAEb,MAAM,IAAIwD,UAAWC,GAAQ,sEAAuEzD,IAGrG,OAAO,IAAImB,EAAM,EACjB,CAED,GAAK2D,EAAQ,EACZ,MAAM,IAAItB,UAAW,6FAMtB,GAAKoC,GAAYb,UAHjBD,GAAS,IAKR,GAAKc,GAAYb,UAAWD,EAAM,KAMjC,GALAhB,EAAUiB,UAAWD,GAErBjB,EAAOkB,UADPD,GAAS,GAIM,IAAVA,EACJ,MAAM,IAAItB,UAAW,kGAItBK,EAAOkB,UAAWD,OAIf,MAAKA,GAAS,GAUlB,MAAM,IAAItB,UAAW,6FANrB,GAHAM,EAAUiB,UAAWD,IAGfc,GADN/B,EAAOkB,UADPD,GAAS,IAGR,MAAM,IAAItB,UAAWC,GAAQ,uEAAwEI,GAMtG,CAUD,IARAiB,GAAS,IACK,GAAK2C,GAAU1C,UAAWD,KACvC9E,EAAQ+E,UAAWD,GACnBA,GAAS,GAET9E,EAAQ6Z,GAGK,QADd1Y,EAAO6V,GAAOhX,IAEb,MAAM,IAAIwD,UAAWC,GAAQ,sEAAuEzD,IAGrG,GAAe,YAAVA,EAAsB,CAE1B,GADAuV,EAAMxQ,UAAW,GACF,IAAVD,EAAc,CAMlB,GALKG,GAAsBsQ,GAC1BpR,EAAMoR,EACKrQ,GAAcqQ,KACzBpR,EAAMoR,EAAIlS,aAEE,IAARc,EACJ,OAAOqW,GAAarW,EAAKN,EAAMC,GAEhC,GAAK0B,GAAe+P,GACnB,MAAM,IAAIhU,MAAO,qFAElB,GAAKoE,GAAU4P,GAAQ,CACtB,IAA6B,IAAxBlR,GACJ,MAAM,IAAIb,UAAWC,GAAQ,sIAAuI8R,IAErK,IAAM3P,GAAY2P,EAAK1P,KACtB,MAAM,IAAIrC,UAAWC,GAAQ,wGAAyG8R,IAGvI,GADAA,EAAMA,EAAK1P,OACLD,GAAY2P,EAAIrS,MACrB,MAAM,IAAIM,UAAWC,GAAQ,wGAAyG8R,IAEvI,OAAO+E,GAAqB/E,EAAK1R,EAAMC,EACvC,CACD,MAAM,IAAIN,UAAWC,GAAQ,wGAAyG8R,GACzI,CAAS,GAAK/P,GAAe+P,GAC1B,MAAM,IAAIhU,MAAO,qFAElB,MAAM,IAAIiC,UAAWC,GAAQ,wGAAyG8R,GACtI,CACD,GAAe,IAAVzQ,EAEJ,GAAKI,GADLqQ,EAAMxQ,UAAW,IAEhB5F,EAAM,IAAIgC,EAAMoU,EAAIlS,aACd,GAAKmC,GAAe+P,GAC1BpW,EAAM,IAAIgC,EAAMoU,QACV,GAAKtQ,GAAsBsQ,GACjCpW,EAAM,IAAIgC,EAAMoU,OACV,KAAK5P,GAAU4P,GAarB,MAAM,IAAI/R,UAAWC,GAAQ,wGAAyG8R,IAZtI,IAA6B,IAAxBlR,GACJ,MAAM,IAAIb,UAAWC,GAAQ,sIAAuI8R,IAErK,IAAM3P,GAAY2P,EAAK1P,KACtB,MAAM,IAAIrC,UAAWC,GAAQ,wGAAyG8R,IAGvI,GADAA,EAAMA,EAAK1P,OACLD,GAAY2P,EAAIrS,MACrB,MAAM,IAAIM,UAAWC,GAAQ,wGAAyG8R,IAEvIpW,EAAM,IAAIgC,EAAMiZ,GAAY7E,GAG5B,MAEDpW,EADqB,IAAV2F,EACL,IAAI3D,EAAM4D,UAAU,GAAIA,UAAU,IAElC,IAAI5D,EAAM4D,UAAU,GAAIA,UAAU,GAAIA,UAAU,IASvD,OAPK5F,EAAIkE,OAAS,IACZ,WAAWiV,KAAMtY,GACrBka,GAAiB/a,EAAK0E,EAAMC,GAE5B2W,GAAStb,EAAIkE,OAAQlE,EAAK,EAAGub,IAGxBvb,EAYP,SAASub,EAAU5b,EAAO6b,GACzB,OAAO9W,EAAKG,KAAMF,EAAS6W,EAC3B,CACF,CCjWA,SAASC,KACR,IAAIC,EACA/W,EACAsD,EACArE,EACAoB,EACAnF,EACA8J,EACA/E,EACAf,EAGJ,GADA6X,EAAW9V,UAAW,GACjBA,UAAU1B,OAAS,EACvB,GAAK6B,GAAcH,UAAW,KAE7B,GADAhC,EAAMgC,UAAW,GACZA,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,GADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,uEAAwE2D,IAEtGtD,EAAUiB,UAAW,EACrB,MACK,CAEN,IAAMa,GADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,uEAAwE2D,IAEtGtD,EAAUiB,UAAW,EACrB,CAEF,IAAM+V,GAAgBD,GACrB,MAAM,IAAIrX,UAAWC,EAAQ,kGAAmGoX,IAGjI,GADA9W,GAAK,OACQ,IAARhB,EAAiB,CAErB,GADAA,EAAM,GACDqE,EAAM,CACV,KACCrD,GAAK,IACLf,EAAI6X,EAAS3X,QACNC,MAGPJ,EAAIO,KAAM8D,EAAIpD,KAAMF,EAASd,EAAElE,MAAOiF,IAEvC,OAAOhB,CACP,CACD,OACCC,EAAI6X,EAAS3X,QACNC,MAGPJ,EAAIO,KAAMN,EAAElE,OAEb,OAAOiE,CACP,CAQD,GAPAoB,EAAMpB,EAAIM,OACVyF,EAAK9I,GAAO+C,GAEX/D,EADIH,GAAiBkE,GACfiG,GAAgBF,GAEhB3I,GAAQ2I,GAEV1B,EAAM,CACV,KAAQrD,EAAII,EAAI,IACfJ,GAAK,IACLf,EAAI6X,EAAS3X,QACNC,OAGPnE,EAAK+D,EAAKgB,EAAGqD,EAAIpD,KAAMF,EAASd,EAAElE,MAAOiF,IAE1C,OAAOhB,CACP,CACD,KAAQgB,EAAII,EAAI,IACfJ,GAAK,IACLf,EAAI6X,EAAS3X,QACNC,OAGPnE,EAAK+D,EAAKgB,EAAGf,EAAElE,OAEhB,OAAOiE,CACR,CC1GA,IAAI8W,GAAgBf,GAAS/Z,IAAK,kBAuBlC,SAASgc,GAAM1X,EAAQvE,GACtB,IAAIkB,EACAmB,EACA4B,EACJ,IAAMkC,GAAsB5B,GAC3B,MAAM,IAAIG,UAAWC,GAAQ,+EAAgFJ,IAO9G,GAAe,aAJdrD,EADI+E,UAAU1B,OAAS,EACf0B,UAAW,GAEX8U,IAGR,OAAOmB,GAAOlc,EAAOuE,GAGtB,GAAc,QADdlC,EAAO6V,GAAOhX,IAEb,MAAM,IAAIwD,UAAWC,GAAQ,gFAAiFzD,IAO/G,OALA+C,EAAM,IAAI5B,EAAMkC,GAGhBgX,GAAOhX,EAAQvE,EAAOiE,EAAK,GAEpBA,CACR,CC/BA,SAASkY,GAAUpS,EAAG/J,GACrB,IAAIgK,EACA9F,EAGJ,GAAY,QADZ8F,EAAK9I,GAAO6I,IAEX,MAAM,IAAIrF,UAAWC,GAAQ,8GAA+GoF,IAgB7I,OAdK9D,UAAU1B,OAAS,IACvByF,EAAK/D,UAAW,IAIf/B,EAFoB,iBAAVlE,EACC,eAAPgK,EACA,IAAIT,GAAYvJ,EAAO,GACT,cAAPgK,EACP,IAAIlE,GAAW9F,EAAO,GAEtBA,EAGDA,EAEEic,GAAMlS,EAAExF,OAAQL,EAAG8F,EAC3B,CCxBA,SAASiG,GAAWC,EAAIC,EAAIC,GAC3B,IACIgM,EACJ,IAAMC,GAAUnM,IAAQyF,EAAOzF,GAC9B,MAAM,IAAIxL,UAAWC,GAAQ,wDAAyDuL,IAEvF,IAAMmM,GAAUlM,IAAQwF,EAAOxF,GAC9B,MAAM,IAAIzL,UAAWC,GAAQ,uDAAwDwL,IAEtF,GAAKlK,UAAU1B,OAAS,EACvB6X,EAAM,OAGN,IAAMC,GADND,EAAMhM,IACmBuF,EAAOyG,GAC/B,MAAM,IAAI1X,UAAWC,GAAQ,4DAA6DyX,IAI5F,GADM/L,GAAQF,EAAGD,GAAOkM,GACbE,GACV,MAAM,IAAI/V,WAAY,oEAEvB,OAAOgW,GAAKrM,EAAIC,EAAIiM,EACrB,CCvCA,IAAIlE,GAAQ,CACX9X,QAAWsB,GACXnB,QAAWkB,GACXH,WAAcc,GACdb,UAAaY,ICMd,SAAS+V,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,CCHA,SAASsb,GAAU5U,EAAO8R,EAAMrU,EAAKoX,GACpC,IAAIpc,EACA0I,EACAwC,EACAtG,EAEJ,GAAa,IAARI,EACJ,MAAO,GAGR,GAAa,IAARA,EACJ,OAAKoX,EACG,CAAE/C,GAEH,CAAE9R,GAaV,IAXAvH,EAAM,CAAEuH,GAQR2D,GAAMmO,EAAK9R,IAJVmB,EADI0T,EACApX,EAAM,EAENA,GAKCJ,EAAI,EAAGA,EAAI8D,EAAG9D,IACnB5E,EAAImE,KAAMoD,EAAS2D,EAAEtG,GAMtB,OAHKwX,GACJpc,EAAImE,KAAMkV,GAEJrZ,CACR,CC/BA,SAASmc,GAAUE,EAAK9U,EAAO+U,EAAKjD,EAAMrU,EAAKoX,GAC9C,IAAIG,EACAC,EACAxc,EACAyc,EACAC,EACAC,EACAC,EACA7U,EACAC,EACA6U,EACAC,EACApU,EACA9D,EAEJ,GAAa,IAARI,EACJ,MAAO,GAgCR,GA9BAwX,EAAQ,EACK,YAARH,GACJI,EAAMlV,EACNoV,EAAM,GACa,cAARN,GACXG,GAAS,EACTC,EAAMlY,EAAOgD,GACboV,EAAMnY,EAAO+C,KAEbkV,EAAM7V,EAAMW,GACZoV,EAAM9V,EAAMU,IAEA,YAAR+U,GACJI,EAAMrD,EACNuD,EAAM,GACa,cAARN,GACXE,GAAS,EACTE,EAAMnY,EAAO8U,GACbuD,EAAMpY,EAAO6U,KAEbqD,EAAM9V,EAAMyS,GACZuD,EAAM/V,EAAMwS,IAIZkD,EADc,IAAVC,EACI/W,EAEAyD,EAGI,IAARlE,EACJ,OAAKoX,EACG,CAAE,IAAIG,EAAOG,EAAKE,IAEnB,CAAE,IAAIL,EAAOE,EAAKE,IAc1B,IAZA3c,EAAM,CAAE,IAAIuc,EAAOE,EAAKE,IAQxBE,GAAOH,EAAID,IAJV/T,EADI0T,EACApX,EAAM,EAENA,GAGL8X,GAAOF,EAAID,GAAQjU,EAGb9D,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBmD,EAAK0U,EAAOI,EAAGjY,EACfoD,EAAK2U,EAAOG,EAAGlY,EACf5E,EAAImE,KAAM,IAAIoY,EAAOxU,EAAIC,IAM1B,OAHKoU,GACJpc,EAAImE,KAAM,IAAIoY,EAAOG,EAAKE,IAEpB5c,CACR,CCzEA,SAASmc,GAAUvY,EAAK2D,EAAO8R,EAAMrU,EAAKoX,GACzC,IAAI1T,EACAwC,EACAtG,EAEJ,GAAa,IAARI,EACJ,OAAOpB,EAGR,GAAa,IAARoB,EAMJ,OAJCpB,EAAK,GADDwY,EACO/C,EAEA9R,EAEL3D,EAaR,IAXAA,EAAK,GAAM2D,EAQX2D,GAAMmO,EAAK9R,IAJVmB,EADI0T,EACApX,EAAM,EAENA,GAKCJ,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBhB,EAAKgB,GAAM2C,EAAS2D,EAAEtG,EAMvB,OAHKwX,IACJxY,EAAK8E,GAAM2Q,GAELzV,CACR,CCxCA,SAASuY,GAAUvY,EAAKyY,EAAK9U,EAAO+U,EAAKjD,EAAMrU,EAAKoX,GACnD,IAAIK,EACAC,EACAC,EACAC,EACAC,EACAC,EACApU,EACA9D,EACAK,EAEJ,GAAa,IAARD,EACJ,OAAOpB,EAuBR,GArBa,YAARyY,GACJI,EAAMlV,EACNoV,EAAM,GACa,cAARN,GACXI,EAAMlY,EAAOgD,GACboV,EAAMnY,EAAO+C,KAEbkV,EAAM7V,EAAMW,GACZoV,EAAM9V,EAAMU,IAEA,YAAR+U,GACJI,EAAMrD,EACNuD,EAAM,GACa,cAARN,GACXI,EAAMnY,EAAO8U,GACbuD,EAAMpY,EAAO6U,KAEbqD,EAAM9V,EAAMyS,GACZuD,EAAM/V,EAAMwS,IAGA,IAARrU,EAQJ,OAPKoX,GACJxY,EAAK,GAAM8Y,EACX9Y,EAAK,GAAMgZ,IAEXhZ,EAAK,GAAM6Y,EACX7Y,EAAK,GAAM+Y,GAEL/Y,EAgBR,IAdAA,EAAK,GAAM6Y,EACX7Y,EAAK,GAAM+Y,EAQXE,GAAOH,EAAID,IAJV/T,EADI0T,EACApX,EAAM,EAENA,GAGL8X,GAAOF,EAAID,GAAQjU,EAGnBzD,EAAI,EACEL,EAAI,EAAGA,EAAI8D,EAAG9D,IACnBhB,EAAKqB,GAAMwX,EAAOI,EAAGjY,EACrBhB,EAAKqB,EAAE,GAAM0X,EAAOG,EAAGlY,EACvBK,GAAK,EAON,OAJKmX,IACJxY,EAAKqB,GAAMyX,EACX9Y,EAAKqB,EAAE,GAAM2X,GAEPhZ,CACR,CC9DA,SAASmZ,GAAUxD,EAAMD,GACxB,OAAM9S,GAAU8S,GAGXG,GAAYH,EAAS,WACzBC,EAAK1Y,MAAQyY,EAAQzY,OACfyH,EAAUiR,EAAK1Y,QACb,IAAIwD,UAAWC,EAAQ,8DAA+D,QAASiV,EAAK1Y,QAGxG4Y,GAAYH,EAAS,cACzBC,EAAK6C,SAAW9C,EAAQ8C,UAClBY,GAAWzD,EAAK6C,WACd,IAAI/X,UAAWC,EAAQ,+DAAgE,WAAYiV,EAAK6C,WAG1G,KAdC,IAAI/X,UAAWC,EAAQ,qEAAsEgV,GAetG,WC1BI2D,GAAwB7C,GAASxa,IAAK,iCA6B1C,SAASuc,GAAU5U,EAAO8R,EAAMrU,GAC/B,IAAIuU,EACAvX,EACAkb,EACAtZ,EACAyY,EACAC,EACAtV,EAEJ,GAAsB,iBAAVO,EAAqB,CAEhC,GAAa,QADb8U,EAAMxb,GAAO0G,IACO,CACnB,IAAMnD,EAAemD,GACpB,MAAM,IAAIlD,UAAWC,GAAQ,yFAA0FiD,IAExH8U,EAAM,YACN,CACDrV,GAAM,CACR,KAAQ,KAAMgV,GAAUzU,IAAW+N,EAAO/N,GACxC,MAAM,IAAIlD,UAAWC,GAAQ,yFAA0FiD,IAEvH8U,EAAM,SACN,CACD,GAAqB,iBAAThD,EAAoB,CAE/B,GAAa,QADbiD,EAAMzb,GAAOwY,IACO,CACnB,IAAMjV,EAAeiV,GACpB,MAAM,IAAIhV,UAAWC,GAAQ,0FAA2F+U,IAEzHiD,EAAM,YACN,CACDtV,GAAM,CACR,KAAQ,KAAMgV,GAAU3C,IAAU/D,EAAO+D,GACvC,MAAM,IAAIhV,UAAWC,GAAQ,0FAA2F+U,IAExHiD,EAAM,SACN,CACD,IAAMxW,GAAsBd,GAC3B,MAAM,IAAIX,UAAWC,GAAQ,+EAAgFU,IAW9G,IATAuU,EAAO,CACN6C,SAAYzC,KAGP9Y,MADDwb,IAAQC,EACCD,EAGAY,GAETrX,UAAU1B,OAAS,IACvBgZ,EAAMH,GAAUxD,EAAM3T,UAAW,KAEhC,MAAMsX,EAGR,GAAoB,YAAf3D,EAAK1Y,MACT,OAAKmG,EACGmW,GAAUd,EAAK9U,EAAO+U,EAAKjD,EAAMrU,EAAKuU,EAAK6C,UAE5CgB,GAAS7V,EAAO8R,EAAMrU,EAAKuU,EAAK6C,UAGxC,GAAc,QADdpa,EAAO6V,GAAO0B,EAAK1Y,QAElB,MAAM,IAAIwD,UAAWC,GAAQ,6GAA8G,QAASiV,EAAK1Y,QAG1J,GADA+C,EAAM,IAAI5B,EAAMgD,GACI,cAAfuU,EAAK1Y,MAET,OADAwc,GAAYlX,EAAevC,EAAK,GAAKyY,EAAK9U,EAAO+U,EAAKjD,EAAMrU,EAAKuU,EAAK6C,UAC/DxY,EAER,GAAoB,eAAf2V,EAAK1Y,MAET,OADAwc,GAAYjX,GAAgBxC,EAAK,GAAKyY,EAAK9U,EAAO+U,EAAKjD,EAAMrU,EAAKuU,EAAK6C,UAChExY,EAER,GAAKoD,EACJ,MAAM,IAAI3C,UAAW,4JAEtB,OAAOiZ,GAAW1Z,EAAK2D,EAAO8R,EAAMrU,EAAKuU,EAAK6C,SAC/C,CCtGA,SAASD,GAAUvY,EAAKyY,EAAK9U,EAAO+U,EAAKjD,EAAMrU,EAAKoX,GACnD,IAAIG,EACAC,EACAC,EACAC,EACAC,EACAC,EACA/c,EACAkF,EAGA8X,EACAC,EACApU,EACA9D,EAEJ,GAAa,IAARI,EACJ,OAAOpB,EAoCR,GAlCA4Y,EAAQ,EACK,YAARH,GACJI,EAAMlV,EACNoV,EAAM,GACa,cAARN,GACXG,GAAS,EACTC,EAAMlY,EAAOgD,GACboV,EAAMnY,EAAO+C,KAEbkV,EAAM7V,EAAMW,GACZoV,EAAM9V,EAAMU,IAEA,YAAR+U,GACJI,EAAMrD,EACNuD,EAAM,GACa,cAARN,GACXE,GAAS,EACTE,EAAMnY,EAAO8U,GACbuD,EAAMpY,EAAO6U,KAEbqD,EAAM9V,EAAMyS,GACZuD,EAAM/V,EAAMwS,IAIZkD,EADc,IAAVC,EACI/W,EAEAyD,EAGTnE,EAAMnB,EAAIuG,KACVtK,EAAM+D,EAAI6F,UAAW,GAGR,IAARzE,EAMJ,OAJCnF,EAAKkF,EAAK,EADNqX,EACS,IAAIG,EAAOG,EAAKE,GAEhB,IAAIL,EAAOE,EAAKE,IAEvB/Y,EAcR,IAZA/D,EAAKkF,EAAK,EAAG,IAAIwX,EAAOE,EAAKE,IAQ7BE,GAAOH,EAAID,IAJV/T,EADI0T,EACApX,EAAM,EAENA,GAGL8X,GAAOF,EAAID,GAAQjU,EAGb9D,EAAI,EAAGA,EAAI8D,EAAG9D,IAGnB/E,EAAKkF,EAAKH,EAAG,IAAI2X,EAFZE,EAAOI,EAAGjY,EACV+X,EAAOG,EAAGlY,IAOhB,OAHKwX,GACJvc,EAAKkF,EAAK2D,EAAG,IAAI6T,EAAOG,EAAKE,IAEvBhZ,CACR,CC7DA,SAASuY,GAAUvY,EAAK2D,EAAO8R,EAAMrU,EAAKoX,GACzC,IAAIrX,EACAlF,EACA6I,EACAwC,EACAtG,EAEJ,GAAa,IAARI,EACJ,OAAOpB,EAOR,GAJAmB,EAAMnB,EAAIuG,KACVtK,EAAM+D,EAAI6F,UAAW,GAGR,IAARzE,EAMJ,OAJCnF,EAAKkF,EAAK,EADNqX,EACS/C,EAEA9R,GAEP3D,EAaR,IAXA/D,EAAKkF,EAAK,EAAGwC,GAQb2D,GAAMmO,EAAK9R,IAJVmB,EADI0T,EACApX,EAAM,EAENA,GAKCJ,EAAI,EAAGA,EAAI8D,EAAG9D,IACnB/E,EAAKkF,EAAKH,EAAG2C,EAAS2D,EAAEtG,GAMzB,OAHKwX,GACJvc,EAAKkF,EAAK2D,EAAG2Q,GAEPzV,CACR,CCjEA,SAASqM,GAAUC,EAAGC,EAAGnL,GACxB,IAAMgX,GAAU9L,IAAOoF,EAAOpF,GAC7B,MAAM,IAAI7L,UAAWC,GAAQ,0EAA2E4L,IAEzG,IAAM8L,GAAU7L,IAAOmF,EAAOnF,GAC7B,MAAM,IAAI9L,UAAWC,GAAQ,yEAA0E6L,IAExG,GAAKvK,UAAU1B,OAAS,EACvBc,EAAM,QACA,IAAMc,GAAsBd,GAClC,MAAM,IAAIX,UAAWC,GAAQ,uEAAwEU,IAEtG,OAAOkX,GAAKhM,EAAGC,EAAGnL,EACnB,CCZA,SAASuY,GAAkB5d,GAC1B,OAAKA,GAAUA,GAASA,IAAU6d,IAAQ7d,IAAU8d,GAC5C,UAEHnX,GAAW3G,GACVA,GAAS+d,IAA4B/d,GAASge,GAC3C,UAED,UAIPhe,GAASie,IACTje,EAAQie,GAED,UAGD,SACR,CAmBA,SAASC,GAAale,GACrB,MAAsB,iBAAVA,EACNyE,EAAezE,GACmB,YAAjC4d,GAAkB5d,EAAMoI,KAAuD,YAAjCwV,GAAkB5d,EAAMqI,IACnE,aAED,YAED,UAEHrI,GAAUA,GAASA,IAAU6d,IAAQ7d,IAAU8d,GAC5C,UAEHnX,GAAW3G,GACA,IAAVA,GAAeme,GAAgBne,GAC5B,UAEHA,EAAQ,EACPA,GAASoe,GACN,OAEHpe,GAASqe,GACN,QAEHre,GAASse,GACN,QAED,UAEHte,GAASue,GACN,QAEHve,GAASwe,GACN,SAEHxe,GAASye,GACN,SAED,UAIPze,GAASie,IACTje,EAAQie,GAED,UAGD,SACR,CC7DAjX,EAAA+D,GAAA,UCRA,SAAmBnD,EAAO8R,EAAMzV,GAC/B,IAAI2V,EACA2D,EACAb,EACAC,EACAtV,EACAqX,EACAtU,EAEJ,GAAsB,iBAAVxC,EAAqB,CAEhC,GAAa,QADb8U,EAAMxb,GAAO0G,IACO,CACnB,IAAMnD,EAAemD,GACpB,MAAM,IAAIlD,UAAWC,GAAQ,yFAA0FiD,IAExH8U,EAAM,YACN,CACDrV,GAAM,CACR,KAAQ,KAAMgV,GAAUzU,IAAW+N,EAAO/N,GACxC,MAAM,IAAIlD,UAAWC,GAAQ,yFAA0FiD,IAEvH8U,EAAM,SACN,CACD,GAAqB,iBAAThD,EAAoB,CAE/B,GAAa,QADbiD,EAAMzb,GAAOwY,IACO,CACnB,IAAMjV,EAAeiV,GACpB,MAAM,IAAIhV,UAAWC,GAAQ,0FAA2F+U,IAEzHiD,EAAM,YACN,CACDtV,GAAM,CACR,KAAQ,KAAMgV,GAAU3C,IAAU/D,EAAO+D,GACvC,MAAM,IAAIhV,UAAWC,GAAQ,0FAA2F+U,IAExHiD,EAAM,SACN,CACD,IAAMvW,GAAcnC,GACnB,MAAM,IAAIS,UAAWC,GAAQ,8EAA+EV,IAK7G,GAHA2V,EAAO,CACN6C,SAAYzC,IAER/T,UAAU1B,OAAS,IACvBgZ,EAAMH,GAAUxD,EAAM3T,UAAW,KAEhC,MAAMsX,EAOR,GAHa,QADbmB,EAAMC,GAAQ1a,MAEbya,EAAM,WAEM,cAARA,EAEJ,OADAhB,GAAYlX,EAAevC,EAAK,GAAKyY,EAAK9U,EAAO+U,EAAKjD,EAAMzV,EAAIM,OAAQqV,EAAK6C,UACtExY,EAER,GAAa,eAARya,EAEJ,OADAhB,GAAYjX,GAAgBxC,EAAK,GAAKyY,EAAK9U,EAAO+U,EAAKjD,EAAMzV,EAAIM,OAAQqV,EAAK6C,UACvExY,EAER,GAAKoD,EAAM,CACV,GAAa,YAARqX,EAGJ,OADAE,GADAxU,EAAIG,GAAkBtG,GACTyY,EAAK9U,EAAO+U,EAAKjD,EAAMzV,EAAIM,OAAQqV,EAAK6C,UAC9CxY,EAER,MAAM,IAAIS,UAAW,iKACrB,CAED,OADA0F,EAAIG,GAAkBtG,IACfgG,kBACN4U,GAASzU,EAAGxC,EAAO8R,EAAMzV,EAAIM,OAAQqV,EAAK6C,UACnCxY,IAER0Z,GAAW1Z,EAAK2D,EAAO8R,EAAMzV,EAAIM,OAAQqV,EAAK6C,UACvCxY,EACR,IC5GA,IAAI6a,GAAO,IAAIvV,GAAYqO,IAAKA,KAC5BmH,GAAM,IAAIjZ,GAAW8R,IAAKA,KAC1BnO,GAASwQ,GAAQ,8BACjB+E,GAAetU,GAAUjB,IACzBsR,GAAgBf,GAAS/Z,IAAK,8BAsBlC,SAASgf,GAAM1a,GACd,IAAIrD,EAGJ,GAAK+E,UAAU1B,OAAS,GAEvB,IAAMya,GADN9d,EAAQ+E,UAAW,IAElB,MAAM,IAAIvB,UAAWC,GAAQ,qFAAsF8E,GAAOZ,KAAM,QAAU3H,SAG3IA,EAAQ6Z,GAST,OAAOkB,GAAM1X,EAPE,eAAVrD,EACI4d,GACa,cAAV5d,EACH6d,GAEAnH,IAEmB1W,EAC7B,CChDA,IAAI4d,GAAO,IAAIvV,GAAYqO,IAAKA,KAC5BmH,GAAM,IAAIjZ,GAAW8R,IAAKA,KAC1BnO,GAAS,CAAE,UAAW,UAAW,aAAc,YAAa,WAsBhE,SAASyV,GAAUnV,GAClB,IAAIC,EACA9F,EAGJ,GAAY,QADZ8F,EAAK9I,GAAO6I,IAEX,MAAM,IAAIrF,UAAWC,GAAQ,8GAA+GoF,IAE7I,GAAK9D,UAAU1B,OAAS,GAEvB,GADAyF,EAAK/D,UAAW,IACe,IAA1BwD,GAAO0M,QAASnM,GACpB,MAAM,IAAItF,UAAWC,GAAQ,qFAAsF8E,GAAOZ,KAAM,QAAUmB,SAErI,IAA+B,IAA1BP,GAAO0M,QAASnM,GAC3B,MAAM,IAAItF,UAAWC,GAAQ,+FAAgG8E,GAAOZ,KAAM,QAAUmB,IASrJ,OANC9F,EADW,eAAP8F,EACA8U,GACc,cAAP9U,EACP+U,GAEAnH,IAEEqE,GAAMlS,EAAExF,OAAQL,EAAG8F,EAC3B,oLC5CA,SAASmV,KACR,IAAIlF,EACAmF,EACAnb,EACAgB,EAKJ,IAHAhB,EAAM,CAAA,EAENmb,GADAnF,EAASoF,GAAYC,KACL/a,OACVU,EAAI,EAAGA,EAAIma,EAAQna,IACxBhB,EAAKgW,EAAOhV,IAAOqa,GAAarF,EAAOhV,IAExC,OAAOhB,CACR,CAeA,SAASsb,GAAcre,GACtB,OAA0B,IAArB+E,UAAU1B,OACP4a,KAEHrF,GAAYwF,GAAape,GACtBoe,GAAape,GAEd,IACR,CCzCA,IAAI4d,GAAO,IAAIvV,EAAY,EAAK,GAC5BwV,GAAM,IAAIjZ,EAAW,EAAK,GAC1BiV,GAAgBf,GAAS/Z,IAAK,kBAsBlC,SAASuf,GAAMjb,GACd,IAAIrD,EAeJ,OAAO+a,GAAM1X,EAPE,gBAJdrD,EADI+E,UAAU1B,OAAS,EACf0B,UAAW,GAEX8U,IAGA+D,GACa,cAAV5d,EACH6d,GAEA,EAEmB7d,EAC7B,CCxCA,IAAI4d,GAAO,IAAIvV,GAAY,EAAK,GAC5BwV,GAAM,IAAIjZ,GAAW,EAAK,GAsB9B,SAAS2Z,GAAU1V,GAClB,IAAIC,EACA9F,EAGJ,GAAY,QADZ8F,EAAK9I,GAAO6I,IAEX,MAAM,IAAIrF,UAAWC,GAAQ,8GAA+GoF,IAY7I,OAVK9D,UAAU1B,OAAS,IACvByF,EAAK/D,UAAW,IAGhB/B,EADW,eAAP8F,EACA8U,GACc,cAAP9U,EACP+U,GAEA,EAEE9C,GAAMlS,EAAExF,OAAQL,EAAG8F,EAC3B,CCnCA,IAAIkO,GAAQ,CACX9X,QAAWsB,GACXnB,QAAWkB,GACXhB,MAASmB,GACTpB,MAASqB,GACTnB,KAAQoB,GACRlB,OAAUmB,GACVpB,OAAUqB,GACVnB,MAASoB,GACTnB,OAAUoB,GACVX,UAAaY,GACbb,WAAcc,ICRf,SAAS8V,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,CCMA,SAASkc,GAAUxD,EAAMD,GACxB,OAAM9S,GAAU8S,GAGXG,GAAYH,EAAS,mBACzBC,EAAK8F,cAAgB/F,EAAQ+F,eACvBvZ,EAAsByT,EAAK8F,gBACzB,IAAIhb,UAAWC,EAAQ,2EAA4E,gBAAiBiV,EAAK8F,gBAG3H,KARC,IAAIhb,UAAWC,EAAQ,qEAAsEgV,GAStG,CC/BA,SAASgG,GAAMxO,GACd,IAAIlN,EACAgB,EAGJ,IADAhB,EAAM,GACAgB,EAAI,EAAGA,EAAIkM,EAAE,EAAGlM,IACrBhB,EAAIO,KAAM,IAEX,OAAOP,CACR,kHCcI8W,GAAgB6E,GAAe3f,IAAK,kBACpCkC,GAAiB+V,GAAO,aACxB9V,GAAkB8V,GAAO,cAY7B,SAAS2H,GAAgBxf,GACxB,OAASA,aAAe8B,EACzB,CASA,SAAS2d,GAAiBzf,GACzB,OAASA,aAAe+B,EACzB,CA6BA,SAASuI,GAASgP,GACjB,IAAIoG,EACAJ,EACA/F,EACA2D,EAGJ,GADA3D,ECjFO,CACN8F,cAAiB,kBDiFbzZ,UAAU1B,SACdgZ,EAAMH,GAAUxD,EAAMD,IAErB,MAAM4D,EAaR,OAVAoC,EAAOK,GAAY3P,EAAM4P,GAAMrG,EAAK8F,iBACpCK,EAAS,EAET/Y,EAAakZ,EAAQ,SAAUA,GAC/BlZ,EAAakZ,EAAQ,SAAUC,GAC/BnZ,EAAakZ,EAAQ,OAAQE,GAC7BpZ,EAAakZ,EAAQ,QAASG,GAC9BrZ,EAAakZ,EAAQ,gBAAiBtG,EAAK8F,eAC3CjY,EAAqByY,EAAQ,SAAUI,GAEhCJ,EAQP,SAASI,IACR,OAAOP,CACP,CASD,SAASQ,EAAapP,GACrB,IAAI/L,EACAH,EAMJ,OAHAA,EAAIgb,GAAM9O,IAGDwO,EAAKpb,QAAUob,EAAM1a,GAAIV,OAC1Bob,EAAM1a,GAAIub,MAGbT,EAAO5O,EAAIyI,EAAK8F,cACb,MAERta,EAAM,IAAI2S,GAAa5G,GAGvB4O,GAAU5O,EAEH/L,EACP,CAWD,SAASqb,EAAYpe,EAAMgD,EAAKnE,GAC/B,IAAIkE,EACJ,OAAa,IAARC,EACG,IAAIhD,EAAM,GAGL,QADb+C,EAAMmb,EAAaG,GAAOrb,GAAMxB,GAAmB3C,KAE3CkE,EAED,IAAI/C,EAAM+C,EAAK,EAAGC,EACzB,CAkBD,SAAS6a,IACR,IAAIla,EACA9E,EACAmB,EACAhC,EACA4D,EACA/D,EACAD,EACAoF,EACAJ,EAUJ,GAAc,QADd5C,EAAO6V,GAJNhX,GAHD8E,EAAQC,UAAU1B,SACJoE,EAAU1C,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD+U,KAIR,MAAM,IAAIrW,UAAWC,EAAQ,sEAAuEzD,IAErG,GAAK8E,GAAS,EACb,OAAO,IAAI3D,EAAM,GAGlB,GAAK8D,EAAsBF,UAAW,IACrC,OAAOwa,EAAYpe,EAAM4D,UAAW,GAAK/E,GAG1C,GAAKkF,EAAcH,UAAW,IAAQ,CAYrC,GAVAZ,GADAhF,EAAM4F,UAAW,IACP1B,OACLT,GAAmBzD,GACvBA,EAAMoG,EAAgBpG,EAAK,GAChBqD,GAAkBrD,GAC7BA,EAAMmG,EAAenG,EAAK,GACf,WAAWmZ,KAAMtY,KAE5BmE,GAAO,GAGK,QADbpB,EAAMwc,EAAYpe,EAAMgD,EAAKnE,IAE5B,OAAO+C,EAER,GAAK6b,GAAiB7b,IAAS4b,GAAgB5b,GAE9C,OADAA,EAAI/D,IAAKG,GACF4D,EAKR,IAFAhE,EAAM6J,GAAW6U,GAAQte,IAAQyJ,UAAW,GAC5C5J,EAAM4J,GAAW5I,GAAQ4I,UAAW,GAC9B7E,EAAI,EAAGA,EAAII,EAAKJ,IACrB/E,EAAK+D,EAAKgB,EAAGhF,EAAKI,EAAK4E,IAExB,OAAOhB,CACP,CACD,MAAM,IAAIS,UAAWC,EAAQ,wGAAyGsB,UAAW,IACjJ,CAgBD,SAASka,IACR,IAAIna,EACA/B,EACAmD,EACAnC,EAUJ,GAAa,QANZhB,EADc,KADf+B,EAAQC,UAAU1B,QAEX2b,IACe,IAAVla,EACLka,EAAQja,UAAW,IAEnBia,EAAQja,UAAW,GAAKA,UAAW,KAWzC,IANCmB,EADI0Y,GAAiB7b,GACfwC,EAAgBxC,EAAK,GAChB4b,GAAgB5b,GACrBuC,EAAevC,EAAK,GAEpBA,EAEDgB,EAAI,EAAGA,EAAImC,EAAI7C,OAAQU,IAC5BmC,EAAKnC,GAAM,EAGb,OAAOhB,CACP,CAcD,SAASmc,EAAMhb,GACd,IAAI+L,EACAwP,EACA1b,EACJ,GAAK2b,GAAkBxb,IAASA,EAAIsC,OACnCtC,EAAMA,EAAIsC,YACJ,IAAMhB,EAAetB,GAC3B,MAAM,IAAIV,UAAWC,EAAQ,4EAA6ES,IAE3G,GAAKA,EAAIwB,WAAa,EAAI,CAQzB,IAPAuK,EAAInI,EAAOiX,GAAM7a,EAAIwB,aAGrBuK,EAAI0P,GAAKlB,EAAKpb,OAAO,EAAG4M,GAGxBwP,EAAIhB,EAAMxO,GACJlM,EAAI,EAAGA,EAAI0b,EAAEpc,OAAQU,IAC1B,GAAK0b,EAAG1b,KAAQG,EACf,OAAO,EAITub,EAAEnc,KAAMY,EACR,CACD,OAAO,CACP,CAOD,SAASib,IACR,IAAIpb,EACJ,IAAMA,EAAI,EAAGA,EAAI0a,EAAKpb,OAAQU,IAC7B0a,EAAM1a,GAAIV,OAAS,EAEpBwb,EAAS,CACT,CACF,CErTG,IAACe,GAAiBnW,KCPrB3D,EAAA+D,GAAA,UAAAJ,0mFCfA,SAASoW,KACR,IAAI9G,EACAmF,EACAnb,EACAmD,EACAsV,EACAC,EACAvS,EACA9E,EACAL,EAKJ,IAHAhB,EAAM,CAAA,EAENmb,GADAnF,EAASoF,GAAY2B,KACLzc,OACVU,EAAI,EAAGA,EAAIma,EAAQna,IAAM,CAI9B,IAHAyX,EAAMzC,EAAQhV,GACdmF,EAAI4W,GAAiBtE,GACrBtV,EAAM,CAAA,EACA9B,EAAI,EAAGA,EAAI8Z,EAAQ9Z,IAExB8B,EADAuV,EAAM1C,EAAQ3U,IACD8E,EAAGuS,GAEjB1Y,EAAKyY,GAAQtV,CACb,CACD,OAAOnD,CACR,CAwBA,SAASgd,GAAgBC,EAAQC,GAChC,IAAI/W,EACJ,OAA0B,IAArBnE,UAAU1B,OACPwc,KAEHjH,GAAYkH,GAAiBE,IAE5BpH,GADL1P,EAAI4W,GAAiBE,GACDC,GACZ/W,EAAG+W,GAGL,IACR,CC3DA,IAAIjJ,GAAQ,CACXxW,aAAgBA,GAChBD,aAAgBA,GAChBI,WAAcA,GACdG,YAAeA,GACfJ,WAAcA,GACdG,YAAeA,GACfD,UAAaA,GACbG,WAAcA,GACdC,kBAAqBA,GACrBC,eAAkBA,GAClBC,gBAAmBA,ICLpB,SAASgf,GAAkBC,EAAKrhB,GAC/B,IAAIqC,EACJ,OACCrC,GACAA,EAAMoZ,MACN/S,EAASrG,EAAMwK,QAEfnI,EAAO6V,GAAOlY,EAAMoZ,OAEZ,IAAI/W,EAAMrC,EAAMwK,MAGlBxK,CACR,KC3BIshB,q8CAWJ,SAASP,KACR,IAAI9G,EACAmF,EACAnb,EACAmD,EACAsV,EACAC,EACAvS,EACA9E,EACAL,EAKJ,IAHAhB,EAAM,CAAA,EAENmb,GADAnF,EAASoF,GAAYkC,KACLhd,OACVU,EAAI,EAAGA,EAAIma,EAAQna,IAAM,CAI9B,IAHAyX,EAAMzC,EAAQhV,GACdmF,EAAImX,GAAY7E,GAChBtV,EAAM,CAAA,EACA9B,EAAI,EAAGA,EAAI8Z,EAAQ9Z,IAExB8B,EADAuV,EAAM1C,EAAQ3U,IACD8E,EAAGuS,GAEjB1Y,EAAKyY,GAAQtV,CACb,CACD,OAAOnD,CACR,CAQA,SAASkb,KACR,IAAIlF,EACAmF,EACAnb,EACAmD,EACAsV,EACAC,EACAvS,EACA9E,EACAL,EAKJ,IAHAhB,EAAM,CAAA,EAENmb,GADAnF,EAASoF,GAAYkC,KACLhd,OACVU,EAAI,EAAGA,EAAIma,EAAQna,IAAM,CAI9B,IAHAyX,EAAMzC,EAAQhV,GACdmF,EAAImX,GAAY7E,GAChBtV,EAAM,GACA9B,EAAI,EAAGA,EAAI8Z,EAAQ9Z,IAEN,IAAb8E,EADLuS,EAAM1C,EAAQ3U,KAEb8B,EAAI5C,KAAMmY,GAGZ1Y,EAAKyY,GAAQtV,CACb,CACD,OAAOnD,CACR,CAeA,SAASud,GAAWtgB,GACnB,OAA0B,IAArB+E,UAAU1B,OACPwc,WAEO,IAAVO,KAEJA,GAAQnC,MAEJrF,GAAYwH,GAAOpgB,GAChBogB,GAAOpgB,GAAQoM,QAEhB,KACR,KClGIgU,q8CAWJ,SAASP,KACR,IAAI9G,EACAmF,EACAnb,EACAmD,EACAsV,EACAC,EACAvS,EACA9E,EACAL,EAKJ,IAHAhB,EAAM,CAAA,EAENmb,GADAnF,EAASoF,GAAYoC,KACLld,OACVU,EAAI,EAAGA,EAAIma,EAAQna,IAAM,CAI9B,IAHAyX,EAAMzC,EAAQhV,GACdmF,EAAIqX,GAAiB/E,GACrBtV,EAAM,CAAA,EACA9B,EAAI,EAAGA,EAAI8Z,EAAQ9Z,IAExB8B,EADAuV,EAAM1C,EAAQ3U,IACD8E,EAAGuS,GAEjB1Y,EAAKyY,GAAQtV,CACb,CACD,OAAOnD,CACR,CAQA,SAASkb,KACR,IAAIlF,EACAmF,EACAnb,EACAmD,EACAsV,EACAC,EACAvS,EACA9E,EACAL,EAKJ,IAHAhB,EAAM,CAAA,EAENmb,GADAnF,EAASoF,GAAYoC,KACLld,OACVU,EAAI,EAAGA,EAAIma,EAAQna,IAAM,CAI9B,IAHAyX,EAAMzC,EAAQhV,GACdmF,EAAIqX,GAAiB/E,GACrBtV,EAAM,GACA9B,EAAI,EAAGA,EAAI8Z,EAAQ9Z,IAEN,IAAb8E,EADLuS,EAAM1C,EAAQ3U,KAEb8B,EAAI5C,KAAMmY,GAGZ1Y,EAAKyY,GAAQtV,CACb,CACD,OAAOnD,CACR,CAeA,SAASyd,GAAexgB,GACvB,OAA0B,IAArB+E,UAAU1B,OACPwc,WAEO,IAAVO,KAEJA,GAAQnC,MAEJrF,GAAYwH,GAAOpgB,GAChBogB,GAAOpgB,GAAQoM,QAEhB,KACR,CC3FA,SAASpC,GAASE,EAAO/K,GACxB,IAAI6D,EAAI7D,EAAK,GAKb,OAJKiE,EAAmBJ,KACvBkH,EAAM5G,KAAMN,EAAEK,QACd2G,GAASE,EAAOlH,IAEVkH,CACR,CAaA,SAASuW,GAAOxW,EAAOC,EAAOG,EAAGlL,EAAKgH,GACrC,IAAIhC,EACAnB,EACAe,EAMJ,IAHAI,EAAM+F,EAAOG,GAGPtG,EAAI,EAAGA,EAAI5E,EAAIkE,OAAQU,IAAM,CAIlC,GAHAf,EAAI7D,EAAK4E,IAGHX,EAAmBJ,IAAOA,EAAEK,SAAWc,EAE5C,OAAOkG,EAGR,GAAKlE,IACJnD,EAAIyd,GAAOxW,EAAOC,EAAOG,EAAE,EAAGrH,EAAGqH,EAAE,EAAIJ,EAAM,IACpCA,EAER,OAAOjH,CAGT,CACD,OAAOiH,CACR,CA8BA,SAASyW,GAAYvhB,GACpB,IAAI+K,EACAD,EAEJ,IAAM7G,EAAmBjE,GACxB,MAAM,IAAIqE,UAAWC,EAAQ,oEAAqEtE,IAcnG,OARA6K,GAHAE,EAAQ,CAAE/K,EAAIkE,QAGElE,IAChB8K,EAAQC,EAAM7G,QAGD,IAEZ6G,EAAM7G,OAASod,GAAOxW,EAAOC,EAAO,EAAG/K,EAAK8K,EAAQ,IAE9CC,CACR,CC/GA,IAAI/I,GAAsC,mBAAtBwf,kBAAqCA,kBAAoB,KCkC7E,IAAAC,GATKC,KACGvf,GCpBR,SAAmBwf,GAClB,MAAM,IAAIvf,MAAO,sPAClB,ECqCA,SAASwf,GAAoB9a,GAC5B,IAAInC,EACA2U,EACAnE,EACAoE,EACA7R,EACAC,EACAM,EACArI,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAM7G,GAJAyS,EAAO,CACN7R,KAAQ,MACRma,IAAO,GAEHjc,UAAU1B,OAAS,EACvB,GAAKsC,GAAUZ,UAAW,IAAQ,CAEjC,GADA0T,EAAU1T,UAAW,GAChBA,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,uEAAwE2D,IAEtGtD,EAAUiB,UAAW,EACrB,CACD,GAAK6T,GAAYH,EAAS,UACzBC,EAAK7R,KAAO4R,EAAQ5R,MACd5B,EAAsBwT,EAAQ5R,OACnC,MAAM,IAAIrD,UAAWC,EAAQ,2EAA4E,OAAQgV,EAAQ5R,OAG3H,GAAK+R,GAAYH,EAAS,SACzBC,EAAKsI,IAAMvI,EAAQuI,IACE,IAAhBvI,EAAQuI,MAA8B,IAAjBvI,EAAQuI,KACjC,MAAM,IAAIxd,UAAWC,EAAQ,wEAAyE,MAAOgV,EAAQuI,KAG1H,KAAS,CAEN,IAAMpb,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,iGAAkG2D,IAEhItD,EAAUiB,UAAW,EACrB,CAkCF,OAhCAuP,EAAQ,EAGRzN,EAAO,CAAA,EACFO,EACc,IAAbsR,EAAKsI,KACTjd,GAAK,EACL+B,EAAae,EAAM,OAAQoa,KAE3Bld,EAAIkC,EAAI5C,OACRyC,EAAae,EAAM,OAAQqa,IAEJ,IAAbxI,EAAKsI,KAChBjd,GAAK,EACL+B,EAAae,EAAM,OAAQsa,KAE3Bpd,EAAIkC,EAAI5C,OACRyC,EAAae,EAAM,OAAQua,IAE5Btb,EAAae,EAAM,SAAUI,GAGxBoa,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAASoa,IAGR,OAFAld,GAAKA,EAAE,GAAKkC,EAAI5C,OAChBiR,GAAS,EACJxN,GAAOwN,EAAQoE,EAAK7R,MAAuB,IAAfZ,EAAI5C,OAC7B,CACNF,MAAQ,GAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGuQ,EAAOrO,GACrD9C,MAAQ,EAET,CAQD,SAAS+d,IAMR,OALAnd,GAAK,GACI,IACRA,GAAKkC,EAAI5C,QAEViR,GAAS,EACJxN,GAAOwN,EAAQoE,EAAK7R,MAAuB,IAAfZ,EAAI5C,OAC7B,CACNF,MAAQ,GAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGuQ,EAAOrO,GACrD9C,MAAQ,EAET,CAQD,SAASge,IAGR,OAFApd,GAAKA,EAAE,GAAKkC,EAAI5C,OAChBiR,GAAS,EACJxN,GAAOwN,EAAQoE,EAAK7R,MAAuB,IAAfZ,EAAI5C,OAC7B,CACNF,MAAQ,GAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CAQD,SAASie,IAMR,OALArd,GAAK,GACI,IACRA,GAAKkC,EAAI5C,QAEViR,GAAS,EACJxN,GAAOwN,EAAQoE,EAAK7R,MAAuB,IAAfZ,EAAI5C,OAC7B,CACNF,MAAQ,GAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAAS8D,EAAKnI,GAEb,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACG2Z,GAAoB9a,EAAKyS,EAAMtR,EAAKtD,GAErCid,GAAoB9a,EAAKyS,EAChC,CACF,CChNA,SAAS4I,GAAgBrb,GACxB,IAAInC,EACA+C,EACAC,EACAM,EACArI,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAE7G,GAAKlB,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,qEAAsE2D,IAEpGtD,EAAUiB,UAAW,EACrB,CAuBD,OAtBAhB,GAAK,EAKJ+B,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUI,GAGxBoa,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IAER,OADAxd,GAAK,EACA+C,GAAO/C,GAAKkC,EAAI5C,OACb,CACNF,MAAQ,GAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGkC,GAC9C9C,MAAQ,EAET,CAQD,SAASqe,IAER,OADAzd,GAAK,EACA+C,GAAO/C,GAAKkC,EAAI5C,OACb,CACNF,MAAQ,GAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAAS8D,EAAKnI,GAEb,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACGka,GAAgBrb,EAAKmB,EAAKtD,GAE3Bwd,GAAgBrb,EACvB,CACF,CC5GA,SAASwb,GAAqBxb,GAC7B,IAAInC,EACA+C,EACAC,EACAM,EACAjD,EACApF,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAE7G,GAAKlB,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,qEAAsE2D,IAEpGtD,EAAUiB,UAAW,EACrB,CAwBD,OAvBAZ,EAAM8B,EAAI5C,OACVU,EAAII,EAKH2B,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUI,GAGxBoa,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IAGR,OAFAxd,GAAKkC,EAAI5C,OAASc,EAAM,EACxBA,EAAM8B,EAAI5C,OACLyD,GAAO/C,EAAI,GACf+C,GAAM,EACC,CACN3D,MAAQ,IAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGkC,GAC9C9C,MAAQ,EAET,CAQD,SAASqe,IAGR,OAFAzd,GAAKkC,EAAI5C,OAASc,EAAM,EACxBA,EAAM8B,EAAI5C,OACLyD,GAAO/C,EAAI,GACf+C,GAAM,EACC,CACN3D,MAAQ,IAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAAS8D,EAAKnI,GAEb,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACGqa,GAAqBxb,EAAKmB,EAAKtD,GAEhC2d,GAAqBxb,EAC5B,CACF,CChJA,IAAIqC,GAAQ,CACX,CAAE9H,GAAc,gBAChB,CAAED,GAAc,gBAChB,CAAEI,GAAY,cACd,CAAEG,GAAa,eACf,CAAEJ,GAAY,cACd,CAAEG,GAAa,eACf,CAAED,GAAW,aACb,CAAEG,GAAY,cACd,CAAEC,GAAmB,qBACrB,CAAEC,GAAgB,kBAClB,CAAEC,GAAiB,oBCJpB,SAASwgB,GAAUviB,GAClB,IAAI6D,EACAe,EAGJ,IAAMA,EAAI,EAAGA,EAAIuE,GAAMjF,OAAQU,IAC9B,GAAK4d,GAAYxiB,EAAKmJ,GAAOvE,GAAK,IACjC,OAAOuE,GAAOvE,GAAK,GAIrB,KAAQ5E,GAAM,CAEb,IADA6D,EAAI4e,EAAUziB,GACR4E,EAAI,EAAGA,EAAIuE,GAAMjF,OAAQU,IAC9B,GAAKf,IAAMsF,GAAOvE,GAAK,GACtB,OAAOuE,GAAOvE,GAAK,GAGrB5E,EAAM0iB,GAAgB1iB,EACtB,CACF,CCZA,SAAS2iB,GAAiB3iB,GACzB,IAAImK,EACAvG,EACAgB,EAEJ,GAAKge,GAAc5iB,GAClBmK,EAAOnK,MACD,KAAK6iB,GAAqB7iB,GAOhC,MAAM,IAAIqE,UAAWC,EAAQ,6DAA8DtE,IAL1FmK,EAD8B,IAA1BnK,EAAIwD,kBACD2C,EAAenG,EAAK,GAEpBoG,EAAgBpG,EAAK,EAI7B,CAKD,IAJA4D,EAAM,CACLmV,KAAQwJ,GAAUviB,GAClBmK,KAAQ,IAEHvF,EAAI,EAAGA,EAAIuF,EAAKjG,OAAQU,IAC7BhB,EAAIuG,KAAKhG,KAAMgG,EAAMvF,IAEtB,OAAOhB,CACR,CCnBA,SAASkf,GAAsBhc,GAC9B,IAAInC,EACA+C,EACAC,EACAM,EACArI,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAE7G,GAAKlB,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,qEAAsE2D,IAEpGtD,EAAUiB,UAAW,EACrB,CAuBD,OAtBAhB,GAAK,EAKJ+B,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUI,GAGxBoa,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IACR,IAAIpd,EACJ,GAAK2C,EACJ,MAAO,CACN3D,MAAQ,GAKV,IAFAgB,EAAM8B,EAAI5C,OACVU,GAAK,EACGA,EAAII,QAAyB,IAAlBpF,EAAKkH,EAAKlC,IAC5BA,GAAK,EAEN,OAAKA,GAAKI,GACT2C,GAAM,EACC,CACN3D,MAAQ,IAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGkC,GAC9C9C,MAAQ,EAET,CAQD,SAASqe,IACR,IAAIrd,EACJ,GAAK2C,EACJ,MAAO,CACN3D,MAAQ,GAKV,IAFAgB,EAAM8B,EAAI5C,OACVU,GAAK,EACGA,EAAII,QAAyB,IAAlBpF,EAAKkH,EAAKlC,IAC5BA,GAAK,EAEN,OAAKA,GAAKI,GACT2C,GAAM,EACC,CACN3D,MAAQ,IAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAAS8D,EAAKnI,GAEb,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACG6a,GAAsBhc,EAAKmB,EAAKtD,GAEjCme,GAAsBhc,EAC7B,CACF,CClIA,SAASic,GAA2Bjc,GACnC,IAAInC,EACA+C,EACAC,EACAM,EACAjD,EACApF,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAE7G,GAAKlB,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,qEAAsE2D,IAEpGtD,EAAUiB,UAAW,EACrB,CAwBD,OAvBAZ,EAAM8B,EAAI5C,OACVU,EAAII,EAKH2B,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUI,GAGxBoa,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IACR,GAAKza,EACJ,MAAO,CACN3D,MAAQ,GAKV,IAFAY,GAAKkC,EAAI5C,OAASc,EAAM,EACxBA,EAAM8B,EAAI5C,OACFU,GAAK,QAAuB,IAAlBhF,EAAKkH,EAAKlC,IAC3BA,GAAK,EAEN,OAAKA,EAAI,GACR+C,GAAM,EACC,CACN3D,MAAQ,IAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGkC,GAC9C9C,MAAQ,EAET,CAQD,SAASqe,IACR,GAAK1a,EACJ,MAAO,CACN3D,MAAQ,GAKV,IAFAY,GAAKkC,EAAI5C,OAASc,EAAM,EACxBA,EAAM8B,EAAI5C,OACFU,GAAK,QAAuB,IAAlBhF,EAAKkH,EAAKlC,IAC3BA,GAAK,EAEN,OAAKA,EAAI,GACR+C,GAAM,EACC,CACN3D,MAAQ,IAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAAS8D,EAAKnI,GAEb,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACG8a,GAA2Bjc,EAAKmB,EAAKtD,GAEtCoe,GAA2Bjc,EAClC,CACF,CC1HA,SAASkc,GAAuBta,EAAG5B,EAAK4G,EAAQ3E,GAC/C,IAAIpE,EACA+C,EACAC,EACAM,EACAhI,EACAL,EACA+J,EACA/E,EACJ,IAAMkB,EAAsB4C,GAC3B,MAAM,IAAIrE,UAAWC,EAAQ,+EAAgFoE,IAE9G,IAAM3C,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,+EAAgFwC,IAE9G,IAAMR,GAAWoH,GAChB,MAAM,IAAIrJ,UAAWC,EAAQ,oEAAqEoJ,IAEnG,IAAM5H,EAAsBiD,GAC3B,MAAM,IAAI1E,UAAWC,EAAQ,gFAAiFyE,IAE/G,GAAKnD,UAAU1B,OAAS,EAAI,CAE3B,IAAMuC,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,oEAAqE2D,IAEnGtD,EAAUiB,UAAW,EACrB,CAwBD,OAvBA3F,EAAM8I,EACNnE,GAAK,EAKJ+B,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUI,GAGxBoa,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IACR,IAAIve,EAEJ,OADAe,GAAK,EACA+C,GAAO/C,GAAK8D,EACT,CACN1E,MAAQ,IAGVH,EAAIoE,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAK7G,GAAOA,EAAK2E,EAAGkC,GAChD7G,GAAOyN,EACA,CACN/N,MAASkE,EACTG,MAAQ,GAET,CAQD,SAASqe,IACR,IAAIxe,EAEJ,OADAe,GAAK,EACA+C,GAAO/C,GAAK8D,EACT,CACN1E,MAAQ,IAGVH,EAAIjE,EAAKkH,EAAK7G,GACdA,GAAOyN,EACA,CACN/N,MAASkE,EACTG,MAAQ,GAET,CASD,SAAS8D,EAAKnI,GAEb,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACG+a,GAAuBta,EAAG5B,EAAK4G,EAAQ3E,EAAQd,EAAKtD,GAErDqe,GAAuBta,EAAG5B,EAAK4G,EAAQ3E,EAC9C,CACF,CC5IA,SAASka,GAAoBnc,GAC5B,IAAInC,EACAmE,EACAnD,EACA+B,EACAC,EACAM,EACAH,EACAlI,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAG7G,GAAe,KADfnB,EAAQC,UAAU1B,QAEjB4E,EAAQ,EACRhB,EAAMhB,EAAI5C,YACJ,GAAe,IAAVyB,EACNc,EAAYb,UAAW,KAC3BkD,EAAQ,EACRb,EAAMrC,UAAW,IAEjBkD,EAAQlD,UAAW,GAEpBkC,EAAMhB,EAAI5C,YACJ,GAAe,IAAVyB,EACNc,EAAYb,UAAW,KAC3BkD,EAAQ,EACRhB,EAAMhB,EAAI5C,OACV+D,EAAMrC,UAAW,GACjBjB,EAAUiB,UAAW,IACVa,EAAYb,UAAW,KAClCkD,EAAQlD,UAAW,GACnBkC,EAAMhB,EAAI5C,OACV+D,EAAMrC,UAAW,KAEjBkD,EAAQlD,UAAW,GACnBkC,EAAMlC,UAAW,QAEZ,CAIN,GAHAkD,EAAQlD,UAAW,GACnBkC,EAAMlC,UAAW,IAEXa,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,qEAAsE2D,IAEpGtD,EAAUiB,UAAW,EACrB,CACD,IAAMU,GAAWwC,GAChB,MAAM,IAAIzE,UAAWC,EAAQ,2GAA4GwE,IAE1I,IAAMxC,GAAWwB,GAChB,MAAM,IAAIzD,UAAWC,EAAQ,wGAAyGwD,IAsCvI,OApCKA,EAAM,GACVA,EAAMhB,EAAI5C,OAAS4D,GACR,IACVA,EAAM,GAEIA,EAAMhB,EAAI5C,SACrB4D,EAAMhB,EAAI5C,QAEN4E,EAAQ,IACZA,EAAQhC,EAAI5C,OAAS4E,GACR,IACZA,EAAQ,GAGVlE,EAAIkE,EAAQ,EAKXnC,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUwb,GAGxBhB,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IAER,OADAxd,GAAK,EACA+C,GAAO/C,GAAKkD,EACT,CACN9D,MAAQ,GAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGA,EAAEkE,EAAOhC,GACvD9C,MAAQ,EAET,CAQD,SAASqe,IAER,OADAzd,GAAK,EACA+C,GAAO/C,GAAKkD,EACT,CACN9D,MAAQ,GAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAASkf,EAAQvjB,GAEhB,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACGgb,GAAoBnc,EAAKgC,EAAOhB,EAAKG,EAAKtD,GAE3Cse,GAAoBnc,EAAKgC,EAAOhB,EACvC,CACF,CCnKA,SAASqb,GAAyBrc,GACjC,IAAInC,EACAmE,EACAnD,EACA+B,EACAC,EACAM,EACAH,EACAlI,EACA+J,EACA/E,EACJ,IAAMmB,EAAce,GACnB,MAAM,IAAIzC,UAAWC,EAAQ,8EAA+EwC,IAG7G,GAAe,KADfnB,EAAQC,UAAU1B,QAEjB4E,EAAQ,EACRhB,EAAMhB,EAAI5C,YACJ,GAAe,IAAVyB,EACNc,EAAYb,UAAW,KAC3BkD,EAAQ,EACRb,EAAMrC,UAAW,IAEjBkD,EAAQlD,UAAW,GAEpBkC,EAAMhB,EAAI5C,YACJ,GAAe,IAAVyB,EACNc,EAAYb,UAAW,KAC3BkD,EAAQ,EACRhB,EAAMhB,EAAI5C,OACV+D,EAAMrC,UAAW,GACjBjB,EAAUiB,UAAW,IACVa,EAAYb,UAAW,KAClCkD,EAAQlD,UAAW,GACnBkC,EAAMhB,EAAI5C,OACV+D,EAAMrC,UAAW,KAEjBkD,EAAQlD,UAAW,GACnBkC,EAAMlC,UAAW,QAEZ,CAIN,GAHAkD,EAAQlD,UAAW,GACnBkC,EAAMlC,UAAW,IAEXa,EADNwB,EAAMrC,UAAW,IAEhB,MAAM,IAAIvB,UAAWC,EAAQ,qEAAsE2D,IAEpGtD,EAAUiB,UAAW,EACrB,CACD,IAAMU,GAAWwC,GAChB,MAAM,IAAIzE,UAAWC,EAAQ,gHAAiHwE,IAE/I,IAAMxC,GAAWwB,GAChB,MAAM,IAAIzD,UAAWC,EAAQ,6GAA8GwD,IAsC5I,OApCKA,EAAM,GACVA,EAAMhB,EAAI5C,OAAS4D,GACR,IACVA,EAAM,GAEIA,EAAMhB,EAAI5C,SACrB4D,EAAMhB,EAAI5C,QAEN4E,EAAQ,IACZA,EAAQhC,EAAI5C,OAAS4E,GACR,IACZA,EAAQ,GAGVlE,EAAIkD,EAKHnB,EAFDe,EAAO,CAAA,EAEa,OADfO,EACuBma,EAEAC,GAE5B1b,EAAae,EAAM,SAAUwb,GAGxBhB,GACJvb,EAAae,EAAMwa,EAAgB5X,GAGpCX,EAAK9I,GAAOiG,GAEXlH,EADIF,GAAiBoH,GACfG,GAAgB0C,GAEhB/I,GAAQ+I,GAERjC,EAQP,SAAS0a,IAER,OADAxd,GAAK,EACA+C,GAAO/C,EAAIkE,EACR,CACN9E,MAAQ,GAGH,CACNrE,MAASsI,EAAIpD,KAAMF,EAAS/E,EAAKkH,EAAKlC,GAAKA,EAAGkD,EAAIlD,EAAE,EAAGkC,GACvD9C,MAAQ,EAET,CAQD,SAASqe,IAER,OADAzd,GAAK,EACA+C,GAAO/C,EAAIkE,EACR,CACN9E,MAAQ,GAGH,CACNrE,MAASC,EAAKkH,EAAKlC,GACnBZ,MAAQ,EAET,CASD,SAASkf,EAAQvjB,GAEhB,OADAgI,GAAM,EACD/B,UAAU1B,OACP,CACNvE,MAASA,EACTqE,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASsG,IACR,OAAKrC,EACGkb,GAAyBrc,EAAKgC,EAAOhB,EAAKG,EAAKtD,GAEhDwe,GAAyBrc,EAAKgC,EAAOhB,EAC5C,CACF,CCjMA,IAAI4S,GAAgBf,GAAS/Z,IAAK,kBAC9BkC,GAAiB+V,GAAO,aACxB9V,GAAkB8V,GAAO,cAuF7B,SAASuI,KACR,IAAIza,EACA9E,EACAmB,EACAoU,EAUJ,GAAc,QADdpU,EAAO6V,GAJNhX,GAHD8E,EAAQC,UAAU1B,SACJoE,EAAU1C,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD+U,KAIR,MAAM,IAAIrW,UAAWC,EAAQ,sEAAuEzD,IAErG,OAAK8E,GAAS,EACN,IAAI3D,EAAM,GAEH,IAAV2D,IACJyQ,EAAMxQ,UAAW,cAGG9D,GACnBsU,EAAMjQ,EAAeiQ,EAAK,GACfA,aAAerU,KAC1BqU,EAAMhQ,EAAgBgQ,EAAK,IAErB,IAAIpU,EAAMoU,IAEH,IAAVzQ,EACG,IAAI3D,EAAM4D,UAAU,GAAIA,UAAU,IAEnC,IAAI5D,EAAM4D,UAAU,GAAIA,UAAU,GAAIA,UAAU,GACxD,CC/HA,IAAIiS,GAAQ,CACX5W,WAAcc,GACdb,UAAaY,ICUd,SAAS+V,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,CCbA,IAAI6Z,GAAgBf,GAAS/Z,IAAK,iCAuFlC,SAASwjB,KACR,IAAIzd,EACA9E,EACAmB,EAUJ,GAAc,QADdA,EAAO6V,GAJNhX,GAHD8E,EAAQC,UAAU1B,SACJoE,EAAU1C,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD+U,KAIR,MAAM,IAAIrW,UAAWC,EAAQ,sEAAuEzD,IAErG,OAAK8E,GAAS,EACN,IAAI3D,EAAM,GAEH,IAAV2D,EACG,IAAI3D,EAAM4D,UAAU,IAEb,IAAVD,EACG,IAAI3D,EAAM4D,UAAU,GAAIA,UAAU,IAEnC,IAAI5D,EAAM4D,UAAU,GAAIA,UAAU,GAAIA,UAAU,GACxD,mCC3GA,SAASgU,KACR,OAAOxQ,GAAO6D,OACf,iHCFA,SAAS2M,KACR,OAAOxQ,GAAO6D,OACf,uDCFA,SAAS2M,KACR,OAAOxQ,GAAO6D,OACf,CCJA,IAAI4K,GAAQ,CACXzX,MAASmB,GACTpB,MAASqB,GACTnB,KAAQoB,GACRlB,OAAUmB,GACVpB,OAAUqB,GACVnB,MAASoB,GACTnB,OAAUoB,ICAX,SAASgW,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,oECPA,SAAS+Y,KACR,OAAOxQ,GAAO6D,OACf,CCRA,IAAIyN,GAAgBf,GAAS/Z,IAAK,eAuFlC,SAASyjB,KACR,IAAI1d,EACA9E,EACAmB,EAUJ,GAAc,QADdA,EAAO6V,GAJNhX,GAHD8E,EAAQC,UAAU1B,SACJoE,EAAU1C,UAAWD,EAAM,IAEhCC,UADRD,GAAS,GAGD+U,KAIR,MAAM,IAAIrW,UAAWC,EAAQ,sEAAuEzD,IAErG,OAAK8E,GAAS,EACN,IAAI3D,EAAM,GAEH,IAAV2D,EACG,IAAI3D,EAAM4D,UAAU,IAEb,IAAVD,EACG,IAAI3D,EAAM4D,UAAU,GAAIA,UAAU,IAEnC,IAAI5D,EAAM4D,UAAU,GAAIA,UAAU,GAAIA,UAAU,GACxD,CC3GA,IAAIiS,GAAQ,CACX9X,QAAWsB,GACXnB,QAAWkB,GACXhB,MAASmB,GACTpB,MAASqB,GACTnB,KAAQoB,GACRlB,OAAUmB,GACVpB,OAAUqB,GACVnB,MAASoB,GACTnB,OAAUoB,ICJX,SAASgW,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,wFCPA,SAAS+Y,KACR,OAAOxQ,GAAO6D,OACf,CCTA,IAAI4K,GAAQ,CACX9X,QAAWsB,GACXnB,QAAWkB,ICUZ,SAASyW,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,8BCPA,SAAS+Y,KACR,OAAOxQ,GAAO6D,OACf,CCRA,IAAI4K,GAAQ,CACXzX,MAASmB,GACTpB,MAASqB,GACTnB,KAAQoB,ICQT,SAASoW,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,iCCPA,SAAS+Y,KACR,OAAOxQ,GAAO6D,OACf,CCPA,IAAI4K,GAAQ,CACXtX,OAAUmB,GACVpB,OAAUqB,GACVnB,MAASoB,GACTnB,OAAUoB,ICMX,SAASgW,GAAOhX,GACf,OAAOiX,GAAOjX,IAAW,IAC1B,6CCPA,SAAS+Y,KACR,OAAOxQ,GAAO6D,OACf,CCQA,SAASqW,GAAW5Z,GACnB,IAAIC,EAAK9I,GAAO6I,GAChB,GAAY,OAAPC,EACJ,MAAM,IAAItF,UAAWC,EAAQ,8GAA+GoF,IAK7I,OAHK9D,UAAU1B,OAAS,IACvByF,EAAK/D,UAAW,IAEVyF,GAAO3B,EAAExF,OAAQyF,EACzB,CCfA,IAAAgB,GAAA,CAAA,EAUAhE,EAAAgE,GAAA,OAAA4Y,IAUA5c,EAAAgE,GAAA,cAAA+M,IAUA/Q,EAAAgE,GAAA,iBAAA7I,IAUA6E,EAAAgE,GAAA,kBAAA5I,IAUA4E,EAAAgE,GAAA,eAAA6Y,IAUA7c,EAAAgE,GAAA,mBAAA8Y,IAUA9c,EAAAgE,GAAA,aAAA+Y,IAUA/c,EAAAgE,GAAA,WAAA8N,IAUA9R,EAAAgE,GAAA,YAAAyO,IAUAzS,EAAAgE,GAAA,gBAAAgZ,IAUAhd,EAAAgE,GAAA,gBAAAiZ,IAUAjd,EAAAgE,GAAA,iBAAAkZ,IAUAld,EAAAgE,GAAA,SAAAmZ,IAUAnd,EAAAgE,GAAA,aAAAoZ,IAUApd,EAAAgE,GAAA,cAAAqQ,IAUArU,EAAAgE,GAAA,gBAAAyQ,IAUAzU,EAAAgE,GAAA,eAAAvJ,IAUAuF,EAAAgE,GAAA,eAAAtJ,IAUAsF,EAAAgE,GAAA,iBAAA8Q,IAUA9U,EAAAgE,GAAA,QAAAqZ,IAUArd,EAAAgE,GAAA,YAAAsZ,IAUAtd,EAAAgE,GAAA,YAAAiF,IAUAjJ,EAAAgE,GAAA,YAAAlJ,IAUAkF,EAAAgE,GAAA,aAAApJ,IAUAoF,EAAAgE,GAAA,aAAAnJ,IAUAmF,EAAAgE,GAAA,WAAAwR,IAUAxV,EAAAgE,GAAA,WAAAsF,IAUAtJ,EAAAgE,GAAA,mBAAAuZ,IAUAvd,EAAAgE,GAAA,QAAAwZ,IAUAxd,EAAAgE,GAAA,YAAAyZ,IAUAzd,EAAAgE,GAAA,oBAAA0Z,IAUA1d,EAAAgE,GAAA,QAAA2Z,IAUA3d,EAAAgE,GAAA,YAAA4Z,IAUA5d,EAAAgE,GAAA,iBAAA8V,IAUA9Z,EAAAgE,GAAA,sBAAA6Z,IAUA7d,EAAAgE,GAAA,mBAAAoW,IAUApa,EAAAgE,GAAA,iBAAA8Z,IAUA9d,EAAAgE,GAAA,qBAAA+Z,IAUA/d,EAAAgE,GAAA,aAAA4W,IAUA5a,EAAAgE,GAAA,oBAAA6W,IAUA7a,EAAAgE,GAAA,qBAAAiX,IAUAjb,EAAAgE,GAAA,iBAAAwX,IAUAxb,EAAAgE,GAAA,sBAAA2X,IAUA3b,EAAAgE,GAAA,kBAAAgY,IAUAhc,EAAAgE,GAAA,uBAAAmY,IAUAnc,EAAAgE,GAAA,4BAAAoY,IAUApc,EAAAgE,GAAA,wBAAAqY,IAUArc,EAAAgE,GAAA,qBAAAsY,IAUAtc,EAAAgE,GAAA,0BAAAwY,IAUAxc,EAAAgE,GAAA,aAAAyV,IAUAzZ,EAAAgE,GAAA,eAAAyY,IAUAzc,EAAAgE,GAAA,oBAAAga,IAUAhe,EAAAgE,GAAA,wBAAAia,IAUAje,EAAAgE,GAAA,kBAAAka,IAUAle,EAAAgE,GAAA,sBAAAma,IAUAne,EAAAgE,GAAA,kBAAAoa,IAUApe,EAAAgE,GAAA,sBAAAqa,IAUAre,EAAAgE,GAAA,gBAAAsa,IAUAte,EAAAgE,GAAA,oBAAAua,IAUAve,EAAAgE,GAAA,YAAA0Y,IAUA1c,EAAAgE,GAAA,iBAAAwa,IAUAxe,EAAAgE,GAAA,qBAAAya,IAUAze,EAAAgE,GAAA,sBAAA0a,IAUA1e,EAAAgE,GAAA,0BAAA2a,IAUA3e,EAAAgE,GAAA,sBAAA4a,IAUA5e,EAAAgE,GAAA,0BAAA6a,IAUA7e,EAAAgE,GAAA,wBAAA8a,IAUA9e,EAAAgE,GAAA,4BAAA+a,IAUA/e,EAAAgE,GAAA,aAAA/I,IAUA+E,EAAAgE,GAAA,oBAAA9I,IAUA8E,EAAAgE,GAAA,cAAAjJ,IAUAiF,EAAAgE,GAAA,cAAAhJ,IAUAgF,EAAAgE,GAAA,SAAAgb,IAUAhf,EAAAgE,GAAA,aAAAib,IAUAjf,EAAAgE,GAAA,YAAAkb"}